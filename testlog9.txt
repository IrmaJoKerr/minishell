
Test  22: ‚ùå pwd 
mini output = ()
bash output = (/home/bleow/Coding/Core/minishell/minishell_tester)

Test  57: ‚ùå grep hi <./test_files/infile 
mini output = ()
bash output = (hi)
mini exit code =
bash exit code = 0
mini error = ( Appending 'hi' to node type=CMD 1 'grep' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ()

Test  59: ‚ùå echo hi < ./test_files/infile bye bye 
mini output = (hi bye)
bash output = (hi bye bye)
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) Valid redirection node < with target ARGS Processing command 'echo' Starting to link redirections for command 'echo' Found redirection < './test_files/infile' for command 'echo' Set first redirection for command 'echo' < './test_files/infile' -> END Appending 'bye' to node type=CMD 2 'echo' 'hi' Successfully created new args array with 3 elements 3) Starting redirection execution for node type=< 'echo' (pipeline_context=0) Saved stdin=3, stdout=4 About to process redirection chain Starting redirection chain processing < './test_files/infile' 'echo' Processing redirection < './test_files/infile' './test_files/infile' './test_files/infile' Setting up redirection type=<, filename='./test_files/infile' Target command is 'echo' redir_mode_setup returned 1, error_code=0 END Chain processing completed successfully Redirection successful, executing command 'echo' Command execution completed with result=0)
bash error = ()
Test  60: ‚ùå grep hi <./test_files/infile_big <./test_files/infile 
mini output = ()
bash output = (hi)
mini exit code =
bash exit code = 0
mini error = ( Appending 'hi' to node type=CMD 1 'grep' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) < syntax error near unexpected token `newline')
bash error = ()

Test  62: ‚ùå cat <"./test_files/file name with spaces" 
mini output = ()
bash output = (üòà üòà üòà This will break your minishell üòà üòà üòà)
mini exit code =
bash exit code = 0
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ()

Test  64: ‚ùå cat <"1""2""3""4""5" 
mini exit code =
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ( No such file or directory)
Test  65: ‚ùå echo <"./test_files/infile" <missing <"./test_files/infile" 
mini exit code = 0
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) < syntax error near unexpected token `newline')
bash error = ( No such file or directory)
Test  66: ‚ùå echo <missing <"./test_files/infile" <missing 
mini exit code = 0
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) < syntax error near unexpected token `newline')
bash error = ( No such file or directory)
Test  67: ‚ùå cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code =
bash exit code = 0
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ()
Test  68: ‚ùå echo <"./test_files/infile_big" | cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline' === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (cat) === PIPELINE EXECUTION START === 0x5ed68d304d60 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'cat' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'cat' Parent closed read end fd=3 Waiting for left process (pid=135679) 135679 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 === RIGHT PROCESS START === Node type=CMD, args[0]='cat' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'cat' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'cat' Left process exited with status 0 Waiting for right process (pid=135680) Command execution completed with status 0 Exiting with status 0 Right process exited with status 0 0)
bash error = ()

Test  71: ‚ùå echo hi | cat <"./test_files/infile" 
mini output = (hi)
bash output = (hi hello world 42)
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline' === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (cat) === PIPELINE EXECUTION START === 0x611f962b53a0 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'cat' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'cat' Parent closed read end fd=3 Waiting for left process (pid=135823) 135823 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 === RIGHT PROCESS START === Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Node type=CMD, args[0]='cat' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'cat' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'cat' Left process exited with status 0 Waiting for right process (pid=135824) Command execution completed with status 0 Exiting with status 0 Right process exited with status 0 0)
bash error = ()

Test  73: ‚ùå cat <"./test_files/infile" | echo hi 
mini exit code = hi
bash exit code = 0
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline' Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (cat) CMD (echo) === PIPELINE EXECUTION START === 0x57f28f2b0cd0 Left type=CMD Right type=CMD Left is direct command 'cat' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'cat' Parent closed write end fd=4 Setting up right pipe process for 'echo' Parent closed read end fd=3 Waiting for left process (pid=135921) 135921 === RIGHT PROCESS START === === LEFT PROCESS START === Node type=CMD, args[0]='cat' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'cat' Executing command 'cat' Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=135922) Right process exited with status 0 0)
bash error = ( Broken pipe)
Test  74: ‚ùå cat <"./test_files/infile" | grep hello 
mini output = ()
bash output = (hello)
mini exit code =
bash exit code = 0
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline' Appending 'hello' to node type=CMD 1 'grep' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (cat) CMD (grep) === PIPELINE EXECUTION START === 0x58d04bf491f0 Left type=CMD Right type=CMD Left is direct command 'cat' Right is direct command 'grep' read_fd=3, write_fd=4 Setting up left pipe process for 'cat' Parent closed write end fd=4 Setting up right pipe process for 'grep' Parent closed read end fd=3 Waiting for left process (pid=135972) 135972 === LEFT PROCESS START === Node type=CMD, args[0]='cat' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'cat' Executing command 'cat' === RIGHT PROCESS START === Node type=CMD, args[0]='grep' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'grep' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'grep' Command execution completed with status 0 Exiting with status 0 Command execution completed with status 1 Exiting with status 1 Left process exited with status 0 Waiting for right process (pid=135973) Right process exited with status 1 1)
bash error = ()
Test  75: ‚ùå cat <"./test_files/infile_big" | echo hi 
mini exit code = hi
bash exit code = 0
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline' Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (cat) CMD (echo) === PIPELINE EXECUTION START === 0x5e7c12729800 Left type=CMD Right type=CMD Left is direct command 'cat' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'cat' Parent closed write end fd=4 Setting up right pipe process for 'echo' Parent closed read end fd=3 Waiting for left process (pid=136022) === RIGHT PROCESS START === 136022 === LEFT PROCESS START === Node type=CMD, args[0]='cat' Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed read end fd=3 after dup2 'echo' Closed write end fd=4 after dup2 Current stdout fileno=1 'cat' stdout is NOT connected to a terminal Executing command 'cat' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=136023) Right process exited with status 0 0)
bash error = ( Broken pipe)
Test  76: ‚ùå cat <missing 
mini exit code =
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ( No such file or directory)
Test  77: ‚ùå cat <missing | cat 
mini exit code =
bash exit code = 0
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline')
bash error = ( No such file or directory)
Test  78: ‚ùå cat <missing | echo oi 
mini exit code = oi
bash exit code = 0
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline' Appending 'oi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (cat) CMD (echo) === PIPELINE EXECUTION START === 0x5e47ba90cc00 Left type=CMD Right type=CMD Left is direct command 'cat' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'cat' Parent closed write end fd=4 Setting up right pipe process for 'echo' Parent closed read end fd=3 Waiting for left process (pid=136155) 136155 === RIGHT PROCESS START === === LEFT PROCESS START === Node type=CMD, args[0]='cat' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'cat' Executing command 'cat' Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=136156) Right process exited with status 0 0)
bash error = ( No such file or directory)
Test  79: ‚ùå cat <missing | cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code =
bash exit code = 0
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline' === FINAL AST STRUCTURE === Root is PIPE CMD (cat) CMD (cat) === PIPELINE EXECUTION START === 0x581073d223b0 Left type=CMD Right type=CMD Left is direct command 'cat' Right is direct command 'cat' read_fd=3, write_fd=4 Setting up left pipe process for 'cat' Parent closed write end fd=4 Setting up right pipe process for 'cat' Parent closed read end fd=3 Waiting for left process (pid=136206) === RIGHT PROCESS START === Node type=CMD, args[0]='cat' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'cat' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'cat' 136206 === LEFT PROCESS START === Node type=CMD, args[0]='cat' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'cat' Executing command 'cat' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=136207) Command execution completed with status 0 Exiting with status 0 Right process exited with status 0 0)
bash error = ( No such file or directory)

Test  81: ‚ùå ls >./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
ast.txt
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
tokens.txt
wildcards
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ()
Test  82: ‚ùå ls >         ./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
ast.txt
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
tokens.txt
wildcards
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ()
Test  83: ‚ùå echo hi >         ./outfiles/outfile01 bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi bye
mini output = (hi bye)
bash output = ()
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline' Appending 'bye' to node type=CMD 2 'echo' 'hi' Successfully created new args array with 3 elements 3))
bash error = ()
Test  84: ‚ùå ls >./outfiles/outfile01 >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
ast.txt
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
tokens.txt
wildcards
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline')
bash error = ()
Test  85: ‚ùå ls >./outfiles/outfile01 >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline')
bash error = ( Permission denied)
Test  86: ‚ùå ls >"./outfiles/outfile with spaces" 
Only in ./bash_outfiles: outfile with spaces
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
ast.txt
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
tokens.txt
wildcards
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ()
Test  87: ‚ùå ls >"./outfiles/outfile""1""2""3""4""5" 
Only in ./bash_outfiles: outfile12345
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
ast.txt
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
tokens.txt
wildcards
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ()
Test  88: ‚ùå ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02" 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline')
bash error = ( Permission denied)
Test  89: ‚ùå ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission 
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline')
bash error = ( Permission denied)
Test  90: ‚ùå cat <"./test_files/infile" >"./outfiles/outfile01" 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
hello
world
42
mini exit code =
bash exit code = 0
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline')
bash error = ()
Test  91: ‚ùå echo hi >./outfiles/outfile01 | echo bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline' Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x5f9506c46f60 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' 136723 === LEFT PROCESS START === Parent closed read end fd=3 Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Waiting for left process (pid=136723) Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=136724) Right process exited with status 0 0)
bash error = ()
Test  92: ‚ùå echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline' Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x5fb338385e40 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' 136771 Parent closed read end fd=3 Waiting for left process (pid=136771) === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=136772) Right process exited with status 0 0)
bash error = ()
Test  93: ‚ùå echo hi | echo >./outfiles/outfile01 bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bye
mini output = (bye)
bash output = ()
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline' Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x64da9b132950 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' 136819 Parent closed read end fd=3 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Waiting for left process (pid=136819) Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=136820) Right process exited with status 0 0)
bash error = ()
Test  94: ‚ùå echo hi | echo bye >./outfiles/outfile01 >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bye
mini output = (bye)
bash output = ()
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline' === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x62213df51ca0 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' 136867 Parent closed read end fd=3 Waiting for left process (pid=136867) === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=136868) Right process exited with status 0 0)
bash error = ()
Test  95: ‚ùå echo hi >./outfiles/outfile01 | echo bye >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
bye
mini output = (bye)
bash output = ()
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline' === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x59929752bb20 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' Parent closed read end fd=3 Waiting for left process (pid=136915) === RIGHT PROCESS START === 136915 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Command execution completed with status 0 Closed read end fd=3 after dup2 Exiting with status 0 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=136916) Right process exited with status 0 0)
bash error = ()
Test  96: ‚ùå echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline' Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x64a91fd0b7a0 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' Parent closed read end fd=3 Waiting for left process (pid=136963) === RIGHT PROCESS START === 136963 Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Command execution completed with status 0 Closed write end fd=4 after dup2 Exiting with status 0 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=136964) Right process exited with status 0 0)
bash error = ( Permission denied)

Test  99: ‚ùå echo hi | echo bye >./test_files/invalid_permission 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline' === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x5c6b72dc29b0 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' 137103 === LEFT PROCESS START === Parent closed read end fd=3 Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Waiting for left process (pid=137103) Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=137104) Right process exited with status 0 0)
bash error = ( Permission denied)
Test 100: ‚ùå echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) Valid redirection node > with target ARGS ARGS syntax error near unexpected token `newline' Starting redirection execution for node type=> Missing left node, returning error)
bash error = ( Permission denied)
Test 101: ‚ùå echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline' === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x573facce5150 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' 137191 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Parent closed read end fd=3 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Waiting for left process (pid=137191) Command execution completed with status 0 Exiting with status 0 === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=137192) Right process exited with status 0 0)
bash error = ( Permission denied)
Test 102: ‚ùå cat <"./test_files/infile" >./test_files/invalid_permission 
mini exit code =
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline')
bash error = ( Permission denied)
Test 103: ‚ùå cat >./test_files/invalid_permission <"./test_files/infile" 
mini exit code =
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) < syntax error near unexpected token `newline')
bash error = ( Permission denied)
Test 104: ‚ùå cat <missing >./outfiles/outfile01 
mini exit code =
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline')
bash error = ( No such file or directory)
Test 105: ‚ùå cat >./outfiles/outfile01 <missing 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini exit code =
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) < syntax error near unexpected token `newline')
bash error = ( No such file or directory)
Test 106: ‚ùå cat <missing >./test_files/invalid_permission 
mini exit code =
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline')
bash error = ( No such file or directory)
Test 107: ‚ùå cat >./test_files/invalid_permission <missing 
mini exit code =
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) < syntax error near unexpected token `newline')
bash error = ( Permission denied)
Test 108: ‚ùå cat >./outfiles/outfile01 <missing >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini exit code =
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) < syntax error near unexpected token `newline')
bash error = ( No such file or directory)
Test 109: ‚ùå ls >>./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
ast.txt
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
tokens.txt
wildcards
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ()
Test 110: ‚ùå ls >>      ./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
ast.txt
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
tokens.txt
wildcards
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ()
Test 111: ‚ùå ls >>./outfiles/outfile01 >./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
ast.txt
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
tokens.txt
wildcards
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline')
bash error = ()
Test 112: ‚ùå ls >./outfiles/outfile01 >>./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
ast.txt
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
tokens.txt
wildcards
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) >> syntax error near unexpected token `newline')
bash error = ()
Test 113: ‚ùå ls >./outfiles/outfile01 >>./outfiles/outfile01 >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
ast.txt
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
tokens.txt
wildcards
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) >> syntax error near unexpected token `newline')
bash error = ()
Test 114: ‚ùå ls >>./outfiles/outfile01 >>./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
ast.txt
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
tokens.txt
wildcards
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) >> syntax error near unexpected token `newline')
bash error = ()
Test 115: ‚ùå ls >>./test_files/invalid_permission 
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline')
bash error = ( Permission denied)
Test 116: ‚ùå ls >>./test_files/invalid_permission >>./outfiles/outfile01 
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) >> syntax error near unexpected token `newline')
bash error = ( Permission denied)
Test 117: ‚ùå ls >>./outfiles/outfile01 >>./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) >> syntax error near unexpected token `newline')
bash error = ( Permission denied)
Test 118: ‚ùå ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) >> syntax error near unexpected token `newline')
bash error = ( Permission denied)
Test 119: ‚ùå ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02 
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) >> syntax error near unexpected token `newline')
bash error = ( No such file or directory)
Test 120: ‚ùå ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing 
mini output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) >> syntax error near unexpected token `newline')
bash error = ( Permission denied)
Test 121: ‚ùå echo hi >>./outfiles/outfile01 | echo bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline' Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x5d781d487ea0 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' 138036 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Parent closed read end fd=3 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Waiting for left process (pid=138036) Command execution completed with status 0 Exiting with status 0 === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=138037) Right process exited with status 0 0)
bash error = ()
Test 122: ‚ùå echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) >> syntax error near unexpected token `newline' Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x654cb677d410 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' Parent closed read end fd=3 Waiting for left process (pid=138084) 138084 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=138085) Right process exited with status 0 0)
bash error = ()
Test 123: ‚ùå echo hi | echo >>./outfiles/outfile01 bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bye
mini output = (bye)
bash output = ()
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline' Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x5a8257aae990 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' 138132 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Parent closed read end fd=3 Waiting for left process (pid=138132) === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=138133) Right process exited with status 0 0)
bash error = ()
Test 124: ‚ùå echo hi | echo bye >>./outfiles/outfile01 >>./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bye
mini output = (bye)
bash output = ()
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) >> syntax error near unexpected token `newline' === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x6158b822d7c0 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' Parent closed read end fd=3 Waiting for left process (pid=138180) 138180 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=138181) Right process exited with status 0 0)
bash error = ()
Test 125: ‚ùå echo hi >>./outfiles/outfile01 | echo bye >>./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
bye
mini output = (bye)
bash output = ()
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline' === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x606d57e35f80 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' 138228 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Parent closed read end fd=3 Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Waiting for left process (pid=138228) Executing command 'echo' Command execution completed with status 0 Exiting with status 0 === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=138229) Right process exited with status 0 0)
bash error = ()

Test 128: ‚ùå echo hi | echo bye >>./test_files/invalid_permission 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) ARGS syntax error near unexpected token `newline' === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x5decfd0cb030 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' 138368 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Parent closed read end fd=3 Waiting for left process (pid=138368) Left process exited with status 0 Waiting for right process (pid=138369) === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Right process exited with status 0 0)
bash error = ( Permission denied)
Test 129: ‚ùå echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) Valid redirection node >> with target ARGS ARGS syntax error near unexpected token `newline' Searching redirections for command 'echo' No matching redirection found for 'echo' Searching redirections for command 'echo' No matching redirection found for 'echo' Appending 'bye' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) === FINAL AST STRUCTURE === Root is PIPE CMD (echo) CMD (echo) === PIPELINE EXECUTION START === 0x5584cfd70f10 Left type=CMD Right type=CMD Left is direct command 'echo' Right is direct command 'echo' read_fd=3, write_fd=4 Setting up left pipe process for 'echo' Parent closed write end fd=4 Setting up right pipe process for 'echo' Parent closed read end fd=3 Waiting for left process (pid=138414) === RIGHT PROCESS START === Node type=CMD, args[0]='echo' Redirecting stdin from pipe read end fd=3 Closed read end fd=3 after dup2 'echo' Current stdout fileno=1 stdout is NOT connected to a terminal Executing command 'echo' Command execution completed with status 0 Exiting with status 0 138414 === LEFT PROCESS START === Node type=CMD, args[0]='echo' Closed read end fd=3 Redirecting stdout to pipe write end fd=4 Closed write end fd=4 after dup2 'echo' Executing command 'echo' Command execution completed with status 0 Exiting with status 0 Left process exited with status 0 Waiting for right process (pid=138415) Right process exited with status 0 0)
bash error = ( Permission denied)
Test 130: ‚ùå cat <minishell.h>./outfiles/outfile 
mini exit code =
bash exit code = 1
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) > syntax error near unexpected token `newline')
bash error = ( No such file or directory)
Test 131: ‚ùå cat <minishell.h|ls 
mini output = ()
bash output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
mini exit code =
bash exit code = 0
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) | syntax error near unexpected token `newline')
bash error = ( No such file or directory)
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî extras

Test 133: ‚ùå $PWD 
mini exit code = 2
bash exit code = 126
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) Processing command '/home/bleow/Coding/Core/minishell/minishell_tester' Starting to link redirections for command '/home/bleow/Coding/Core/minishell/minishell_tester' No redirections found for cmd '/home/bleow/Coding/Core/minishell/minishell_tester' Is a directory)
bash error = ( Is a directory)
Test 134: ‚ùå $EMPTY 
mini exit code = 127
bash exit code = 0
mini error = ( Resetting redirection tracking state Building redirection AST (command-first approach) Processing command '' Starting to link redirections for command '' No redirections found for cmd '' Permission denied)
bash error = ()
Test 135: ‚ùå $EMPTY echo hi 
mini output = ()
bash output = (hi)
mini exit code = 127
bash exit code = 0
mini error = ( Appending 'echo' to node type=CMD 1 '' Successfully created new args array with 2 elements 2) Resetting redirection tracking state Building redirection AST (command-first approach) Processing command '' Starting to link redirections for command '' No redirections found for cmd '' Appending 'hi' to node type=CMD 2 '' 'echo' Successfully created new args array with 3 elements 3) Permission denied)
bash error = ()
Test 136: ‚ùå ./test_files/invalid_permission 
mini exit code = 0
bash exit code = 126
mini error = ()
bash error = ( Permission denied)
Test 137: ‚ùå ./missing.out 
mini exit code = 0
bash exit code = 127
mini error = ()
bash error = ( No such file or directory)
Test 138: ‚ùå missing.out 
mini exit code = 0
bash exit code = 127
mini error = ()
bash error = ( command not found)

Test 140: ‚ùå test_files 
mini exit code = 0
bash exit code = 127
mini error = ()
bash error = ( command not found)
Test 141: ‚ùå ./test_files 
mini exit code = 0
bash exit code = 126
mini error = ()
bash error = ( Is a directory)
Test 142: ‚ùå /test_files 
mini exit code = 0
bash exit code = 127
mini error = ()
bash error = ( No such file or directory)
Test 143: ‚ùå minishell.h 
mini exit code = 0
bash exit code = 127
mini error = ()
bash error = ( command not found)

Test 146: ‚ùå README.md 
mini exit code = 0
bash exit code = 127
mini error = ()
bash error = ( command not found)
70/146

