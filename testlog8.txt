Test  62: ‚ùå cat <"./test_files/file name with spaces" 
mini output = ()
bash output = (üòà üòà üòà This will break your minishell üòà üòà üòà)
mini exit code = 134
bash exit code = 0
mini error = ( 'cat <"./test_files/file name with spaces"' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 '"' '"' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'f' 'i' 'l' 'e' '"./test_files/file' '"./test_files/file' Redirection token handled successfully Redirection operator='<', filename='"./test_files/file' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'n' Handling regular token 'a' Handling regular token 'm' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='name' Created node with args[0]='name' 'name'] -> NULL Position update indicated, continuing 'w' Handling regular token 'i' Handling regular token 't' Handling regular token 'h' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='with' Created node with args[0]='with' 'with'] -> NULL Position update indicated, continuing 's' Handling regular token 'p' Handling regular token 'a' Handling regular token 'c' Handling regular token 'e' Handling regular token 's' Handling regular token '"' Handling regular token Creating token type=ARGS, content='spaces' Created node with args[0]='spaces' 'spaces'] -> NULL Position update indicated, continuing Creating token type=ARGS, content='' Created node with args[0]='' ''] -> NULL Tokenization completed with result=1 ''] -> NULL Validating redirection targets Checking redirection node type=<, filename='"./test_files/file' All redirection targets valid Starting AST building Found 1 commands 'cat' Pipe processing complete, pipe_root=(nil) Building redirection AST 'cat' '<' with filename '"./test_files/file' Processing redirection type=<, filename='"./test_files/file' Target command is 'cat' Set left pointer to command 'cat' Linking previous redirections for command 'cat' Checking for args after redirection '"./test_files/file' Found argument 'name' to add to command 'cat' Found argument 'with' to add to command 'cat' Found argument 'spacescat <"./test_files/file name with spaces"' to add to command 'cat' Found argument '' to add to command 'cat' Finished collecting args for command 'cat' Set redir_root to redirection with filename '"./test_files/file' Redirection AST build complete Redirection processing complete, redir_root=0x65105be50060 Built AST with root type=< '"./test_files/file' cat "./test_files/file File '"./test_files/file' not found No such file or directory Redirection failed for "./test_files/file Chain failed err=1 double free detected in tcache 2)
bash error = ()

Test  80: ‚ùå echo <123 <456 hi | echo 42 
mini output = ()
bash output = (42)
mini exit code = 1
bash exit code = 0
mini error = ( 'echo <123 <456 hi | echo 42' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 5, type=< Handling redirection type=< Handling redirection token at pos 5 '<' Looking for filename at position 6 Processing filename at pos 6 '1' '1' '2' '3' '123' '123' Redirection token handled successfully Redirection operator='<', filename='123' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 10, type=< Handling redirection type=< Handling redirection token at pos 10 '<' Looking for filename at position 11 Processing filename at pos 11 '4' '4' '5' '6' '456' '456' Redirection token handled successfully Redirection operator='<', filename='456' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' 'hi'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 18, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '4' Handling regular token '2' Handling regular token Creating token type=ARGS, content='42' Created node with args[0]='42' 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=<, filename='123' Checking redirection node type=<, filename='456' All redirection targets valid Starting AST building Found 2 commands 'echo' 'echo' Pipe processing complete, pipe_root=0x5dc68a8e6d60 Building redirection AST 'echo' '<' with filename '123' Processing redirection type=<, filename='123' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection '123' Finished collecting args for command 'echo' Set redir_root to redirection with filename '123' '<' with filename '456' Processing redirection type=<, filename='456' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Linking < redirection '123' to < redirection '456' Checking for args after redirection '456' Found argument 'hi' to add to command 'echo' Finished collecting args for command 'echo' 'echo' Redirection AST build complete Redirection processing complete, redir_root=0x5dc68a8caf40 Built AST with root type=| execute_pipes for 'echo | echo' left child created with pid=454080 echo (pid=454080) right child created with pid=454081 echo echo 123 parent closed pipe read end waiting for left child (pid=454080) File '123' not found No such file or directory Redirection failed for 123 Chain failed Left cmd redirection failed, exiting with code 1 right child created with pid=0 echo (pid=454081) echo echo 456 File '456' not found No such file or directory Redirection failed for 456 Chain failed Right cmd redirection failed, exiting with code 1 left child exited with raw status 256 waiting for right child (pid=454081) right child exited with raw status 256 1)
bash error = ( No such file or directory)

Test  86: ‚ùå ls >"./outfiles/outfile with spaces" 
Only in ./bash_outfiles: outfile with spaces
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini exit code = 134
bash exit code = 0
mini error = ( 'ls >"./outfiles/outfile with spaces"' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '"' '"' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '"./outfiles/outfile' '"./outfiles/outfile' Redirection token handled successfully Redirection operator='>', filename='"./outfiles/outfile' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'w' Handling regular token 'i' Handling regular token 't' Handling regular token 'h' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='with' Created node with args[0]='with' 'with'] -> NULL Position update indicated, continuing 's' Handling regular token 'p' Handling regular token 'a' Handling regular token 'c' Handling regular token 'e' Handling regular token 's' Handling regular token '"' Handling regular token Creating token type=ARGS, content='spaces' Created node with args[0]='spaces' 'spaces'] -> NULL Position update indicated, continuing Creating token type=ARGS, content='' Created node with args[0]='' ''] -> NULL Tokenization completed with result=1 ''] -> NULL Validating redirection targets Checking redirection node type=>, filename='"./outfiles/outfile' All redirection targets valid Starting AST building Found 1 commands 'ls' Pipe processing complete, pipe_root=(nil) Building redirection AST 'ls' '>' with filename '"./outfiles/outfile' Processing redirection type=>, filename='"./outfiles/outfile' Target command is 'ls' Set left pointer to command 'ls' Linking previous redirections for command 'ls' Checking for args after redirection '"./outfiles/outfile' Found argument 'with' to add to command 'ls' Found argument 'spacesls >"./outfiles/outfile with spaces"' to add to command 'ls' Found argument '' to add to command 'ls' Finished collecting args for command 'ls' Set redir_root to redirection with filename '"./outfiles/outfile' Redirection AST build complete Redirection processing complete, redir_root=0x5eec457323a0 Built AST with root type=> '"./outfiles/outfile' ls "./outfiles/outfile Permission denied Permission denied for '"./outfiles/outfile' Redirection failed for "./outfiles/outfile Chain failed err=1 double free detected in tcache 2)
bash error = ()
Test  87: ‚ùå ls >"./outfiles/outfile""1""2""3""4""5" 
Only in ./mini_outfiles: outfile""1""2""3""4""5
Only in ./bash_outfiles: outfile12345
mini outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini error = ( 'ls >"./outfiles/outfile""1""2""3""4""5"' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '"' '"' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '"' '"' '1' '"' '"' '2' '"' '"' '3' '"' '"' '4' '"' '"' '5' '"' '"./outfiles/outfile""1""2""3""4""5"' '"./outfiles/outfile""1""2""3""4""5"' Redirection token handled successfully Redirection operator='>', filename='"./outfiles/outfile""1""2""3""4""5"' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 '"./outfiles/outfile""1""2""3""4""5"'] -> NULL Validating redirection targets Checking redirection node type=>, filename='"./outfiles/outfile""1""2""3""4""5"' All redirection targets valid Starting AST building Found 1 commands 'ls' Pipe processing complete, pipe_root=(nil) Building redirection AST 'ls' '>' with filename '"./outfiles/outfile""1""2""3""4""5"' Processing redirection type=>, filename='"./outfiles/outfile""1""2""3""4""5"' Target command is 'ls' Set left pointer to command 'ls' Linking previous redirections for command 'ls' Checking for args after redirection '"./outfiles/outfile""1""2""3""4""5"' Finished collecting args for command 'ls' Set redir_root to redirection with filename '"./outfiles/outfile""1""2""3""4""5"' Redirection AST build complete Redirection processing complete, redir_root=0x5e92879a7d30 Built AST with root type=> '"./outfiles/outfile""1""2""3""4""5"' ls "./outfiles/outfile""1""2""3""4""5" (nil) (NULL) Chain completed successfully)
bash error = ()

Test  92: ‚ùå echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye 
Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
mini outfiles:
hi

bash outfiles:
hi
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=> Handling redirection type=> Handling redirection token at pos 8 '>' Looking for filename at position 9 Processing filename at pos 9 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' './outfiles/outfile01' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 30, type=> Handling redirection type=> Handling redirection token at pos 30 '>' Looking for filename at position 31 Processing filename at pos 31 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' './outfiles/outfile02' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 52, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./outfiles/outfile02' All redirection targets valid Starting AST building Found 2 commands 'echo' 'echo' Pipe processing complete, pipe_root=0x55e0c41e9e70 Building redirection AST 'echo' '>' with filename './outfiles/outfile01' Processing redirection type=>, filename='./outfiles/outfile01' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection './outfiles/outfile01' Finished collecting args for command 'echo' Set redir_root to redirection with filename './outfiles/outfile01' '>' with filename './outfiles/outfile02' Processing redirection type=>, filename='./outfiles/outfile02' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Linking > redirection './outfiles/outfile01' to > redirection './outfiles/outfile02' Checking for args after redirection './outfiles/outfile02' Finished collecting args for command 'echo' 'echo' Redirection AST build complete Redirection processing complete, redir_root=0x55e0c41e9c90 Built AST with root type=| execute_pipes for 'echo | echo' left child created with pid=454597 right child created with pid=454598 parent closed pipe read end waiting for left child (pid=454597) echo (pid=454597) echo echo ./outfiles/outfile01 0x55e0c41e9e20 (>) ./outfiles/outfile02 right child created with pid=0 echo (pid=454598) echo echo ./outfiles/outfile02 (nil) (NULL) Chain completed successfully echo (nil) (NULL) Chain completed successfully echo 0 0 left child exited with raw status 0 waiting for right child (pid=454598) right child exited with raw status 0 0)
bash error = ()

Test  96: ‚ùå echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye 
mini output = ()
bash output = (bye)
mini exit code = 1
bash exit code = 0
mini error = ( 'echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=> Handling redirection type=> Handling redirection token at pos 8 '>' Looking for filename at position 9 Processing filename at pos 9 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' './outfiles/outfile01' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 30, type=> Handling redirection type=> Handling redirection token at pos 30 '>' Looking for filename at position 31 Processing filename at pos 31 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' './test_files/invalid_permission' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 63, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./test_files/invalid_permission' All redirection targets valid Starting AST building Found 2 commands 'echo' 'echo' Pipe processing complete, pipe_root=0x6166d8964fc0 Building redirection AST 'echo' '>' with filename './outfiles/outfile01' Processing redirection type=>, filename='./outfiles/outfile01' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection './outfiles/outfile01' Finished collecting args for command 'echo' Set redir_root to redirection with filename './outfiles/outfile01' '>' with filename './test_files/invalid_permission' Processing redirection type=>, filename='./test_files/invalid_permission' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Linking > redirection './outfiles/outfile01' to > redirection './test_files/invalid_permission' Checking for args after redirection './test_files/invalid_permission' Finished collecting args for command 'echo' 'echo' Redirection AST build complete Redirection processing complete, redir_root=0x6166d8964de0 Built AST with root type=| execute_pipes for 'echo | echo' left child created with pid=454783 right child created with pid=454784 parent closed pipe read end waiting for left child (pid=454783) echo (pid=454783) echo echo ./outfiles/outfile01 0x6166d8964f70 (>) ./test_files/invalid_permission right child created with pid=0 echo (pid=454784) echo echo ./test_files/invalid_permission d.e/ntieesdt Permission denied for './test_files/invalid_permission' Redirection failed for ./test_files/invalid_permission Chain failed Left cmd redirection failed, exiting with code 1 d Permission denied for './test_files/invalid_permission' Redirection failed for ./test_files/invalid_permission Chain failed Right cmd redirection failed, exiting with code 1 left child exited with raw status 256 waiting for right child (pid=454784) right child exited with raw status 256 1)
bash error = ( Permission denied)

Test  98: ‚ùå echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=> Handling redirection type=> Handling redirection token at pos 8 '>' Looking for filename at position 9 Processing filename at pos 9 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' './test_files/invalid_permission' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 41, type=> Handling redirection type=> Handling redirection token at pos 41 '>' Looking for filename at position 42 Processing filename at pos 42 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' './outfiles/outfile01' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 63, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./test_files/invalid_permission' Checking redirection node type=>, filename='./outfiles/outfile01' All redirection targets valid Starting AST building Found 2 commands 'echo' 'echo' Pipe processing complete, pipe_root=0x5b6b591034f0 Building redirection AST 'echo' '>' with filename './test_files/invalid_permission' Processing redirection type=>, filename='./test_files/invalid_permission' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection './test_files/invalid_permission' Finished collecting args for command 'echo' Set redir_root to redirection with filename './test_files/invalid_permission' '>' with filename './outfiles/outfile01' Processing redirection type=>, filename='./outfiles/outfile01' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Linking > redirection './test_files/invalid_permission' to > redirection './outfiles/outfile01' Checking for args after redirection './outfiles/outfile01' Finished collecting args for command 'echo' 'echo' Redirection AST build complete Redirection processing complete, redir_root=0x5b6b59103310 Built AST with root type=| execute_pipes for 'echo | echo' left child created with pid=454875 right child created with pid=454876 parent closed pipe read end waiting for left child (pid=454875) right child created with pid=0 echo (pid=454876) echo echo ./outfiles/outfile01 echo (pid=454875) echo echo ./test_files/invalid_permission (nil) (NULL) Chain completed successfully echo 0 Permission denied Permission denied for './test_files/invalid_permission' Redirection failed for ./test_files/invalid_permission Chain failed Left cmd redirection failed, exiting with code 1 left child exited with raw status 256 waiting for right child (pid=454876) right child exited with raw status 0 0)
bash error = ( Permission denied)

Test 100: ‚ùå echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini error = ( 'echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' 'echo'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 8, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 10, type=> Handling redirection type=> Handling redirection token at pos 10 '>' Looking for filename at position 11 Processing filename at pos 11 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' './outfiles/outfile01' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'bye'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 41, type=> Handling redirection type=> Handling redirection token at pos 41 '>' Looking for filename at position 42 Processing filename at pos 42 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' './test_files/invalid_permission' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./test_files/invalid_permission' All redirection targets valid Starting AST building Found 1 commands 'echo' Pipe processing complete, pipe_root=(nil) Building redirection AST 'echo' '>' with filename './outfiles/outfile01' Processing redirection type=>, filename='./outfiles/outfile01' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection './outfiles/outfile01' Found argument 'echo' to add to command 'echo' Found argument 'bye' to add to command 'echo' Finished collecting args for command 'echo' Set redir_root to redirection with filename './outfiles/outfile01' '>' with filename './test_files/invalid_permission' Processing redirection type=>, filename='./test_files/invalid_permission' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Linking > redirection './outfiles/outfile01' to > redirection './test_files/invalid_permission' Checking for args after redirection './test_files/invalid_permission' Finished collecting args for command 'echo' Redirection AST build complete Redirection processing complete, redir_root=0x57a8fd40cdb0 Built AST with root type=> './outfiles/outfile01' echo ./outfiles/outfile01 Redirection failed for ./outfiles/outfile01 Chain failed err=1)
bash error = ( Permission denied)

Test 122: ‚ùå echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye 
Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
mini outfiles:
bye
hi
bash outfiles:
hi
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=>> Handling redirection type=>> Handling redirection token at pos 8 '>>' Looking for filename at position 10 Processing filename at pos 10 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' './outfiles/outfile01' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 31, type=>> Handling redirection type=>> Handling redirection token at pos 31 '>>' Looking for filename at position 33 Processing filename at pos 33 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' './outfiles/outfile02' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 54, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./outfiles/outfile01' Checking redirection node type=>>, filename='./outfiles/outfile02' All redirection targets valid Starting AST building Found 2 commands 'echo' 'echo' Pipe processing complete, pipe_root=0x5a3a1c9bd410 Building redirection AST 'echo' '>>' with filename './outfiles/outfile01' Processing redirection type=>>, filename='./outfiles/outfile01' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection './outfiles/outfile01' Finished collecting args for command 'echo' Set redir_root to redirection with filename './outfiles/outfile01' '>>' with filename './outfiles/outfile02' Processing redirection type=>>, filename='./outfiles/outfile02' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Linking >> redirection './outfiles/outfile01' to >> redirection './outfiles/outfile02' Checking for args after redirection './outfiles/outfile02' Finished collecting args for command 'echo' 'echo' Redirection AST build complete Redirection processing complete, redir_root=0x5a3a1c9bd230 Built AST with root type=| execute_pipes for 'echo | echo' left child created with pid=455843 right child created with pid=455844 parent closed pipe read end waiting for left child (pid=455843) right child created with pid=0 echo (pid=455844) echo echo ./outfiles/outfile02 (nil) (NULL) echo (pid=455843) echo echo Chain completed successfully echo ./outfiles/outfile01 0 0x5a3a1c9bd3c0 (>>) ./outfiles/outfile02 (nil) (NULL) Chain completed successfully echo 0 left child exited with raw status 0 waiting for right child (pid=455844) right child exited with raw status 0 0)
bash error = ()

Test 127: ‚ùå echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=>> Handling redirection type=>> Handling redirection token at pos 8 '>>' Looking for filename at position 10 Processing filename at pos 10 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' './test_files/invalid_permission' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 42, type=> Handling redirection type=> Handling redirection token at pos 42 '>' Looking for filename at position 43 Processing filename at pos 43 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' './outfiles/outfile01' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 64, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./test_files/invalid_permission' Checking redirection node type=>, filename='./outfiles/outfile01' All redirection targets valid Starting AST building Found 2 commands 'echo' 'echo' Pipe processing complete, pipe_root=0x638994b02f10 Building redirection AST 'echo' '>>' with filename './test_files/invalid_permission' Processing redirection type=>>, filename='./test_files/invalid_permission' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection './test_files/invalid_permission' Finished collecting args for command 'echo' Set redir_root to redirection with filename './test_files/invalid_permission' '>' with filename './outfiles/outfile01' Processing redirection type=>, filename='./outfiles/outfile01' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Linking >> redirection './test_files/invalid_permission' to > redirection './outfiles/outfile01' Checking for args after redirection './outfiles/outfile01' Finished collecting args for command 'echo' 'echo' Redirection AST build complete Redirection processing complete, redir_root=0x638994b02d30 Built AST with root type=| execute_pipes for 'echo | echo' left child created with pid=456075 right child created with pid=456076 parent closed pipe read end waiting for left child (pid=456075) right child created with pid=0 echo (pid=456076) echo echo ./outfiles/outfile01 echo (pid=456075) echo echo ./test_files/invalid_permission (nil) (NULL) Chain completed successfully echo 0 Permission denied Permission denied for './test_files/invalid_permission' Redirection failed for ./test_files/invalid_permission Chain failed Left cmd redirection failed, exiting with code 1 left child exited with raw status 256 waiting for right child (pid=456076) right child exited with raw status 0 0)
bash error = ( Permission denied)

 
Test 133: ‚ùå $PWD 
mini exit code = 2
bash exit code = 126
mini error = ( '$PWD' '$' Handling regular token Position update indicated, continuing Tokenization completed with result=1 '/home/bleow/Coding/Core/minishell/minishell_tester'] -> NULL Validating redirection targets All redirection targets valid Starting AST building Found 1 commands '/home/bleow/Coding/Core/minishell/minishell_tester' Pipe processing complete, pipe_root=(nil) Building redirection AST '/home/bleow/Coding/Core/minishell/minishell_tester' Redirection AST build complete Redirection processing complete, redir_root=(nil) Built AST with root type=CMD Is a directory)
bash error = ( Is a directory)
Test 134: ‚ùå $EMPTY 
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY' '$' Handling regular token Position update indicated, continuing Tokenization completed with result=1 ''] -> NULL Validating redirection targets All redirection targets valid Starting AST building Found 1 commands '' Pipe processing complete, pipe_root=(nil) Building redirection AST '' Redirection AST build complete Redirection processing complete, redir_root=(nil) Built AST with root type=CMD Permission denied)
bash error = ()
Test 135: ‚ùå $EMPTY echo hi 
mini output = ()
bash output = (hi)
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY echo hi' '$' Handling regular token Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' ''] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' ''] -> NULL Tokenization completed with result=1 ''] -> NULL Validating redirection targets All redirection targets valid Starting AST building Found 1 commands '' Pipe processing complete, pipe_root=(nil) Building redirection AST '' Redirection AST build complete Redirection processing complete, redir_root=(nil) Built AST with root type=CMD Permission denied)
bash error = ()
Test 136: ‚ùå ./test_files/invalid_permission 
mini exit code = 127
bash exit code = 126
mini error = ( './test_files/invalid_permission' '.' Handling regular token '/' Handling regular token 't' Handling regular token 'e' Handling regular token 's' Handling regular token 't' Handling regular token '_' Handling regular token 'f' Handling regular token 'i' Handling regular token 'l' Handling regular token 'e' Handling regular token 's' Handling regular token '/' Handling regular token 'i' Handling regular token 'n' Handling regular token 'v' Handling regular token 'a' Handling regular token 'l' Handling regular token 'i' Handling regular token 'd' Handling regular token '_' Handling regular token 'p' Handling regular token 'e' Handling regular token 'r' Handling regular token 'm' Handling regular token 'i' Handling regular token 's' Handling regular token 's' Handling regular token 'i' Handling regular token 'o' Handling regular token 'n' Handling regular token Creating token type=CMD, content='./test_files/invalid_permission' Created node with args[0]='./test_files/invalid_permission' './test_files/invalid_permission'] -> NULL Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets All redirection targets valid Starting AST building Found 1 commands './test_files/invalid_permission' Pipe processing complete, pipe_root=(nil) Building redirection AST './test_files/invalid_permission' Redirection AST build complete Redirection processing complete, redir_root=(nil) Built AST with root type=CMD Permission denied)
bash error = ( Permission denied)

Test 141: ‚ùå ./test_files 
mini exit code = 2
bash exit code = 126
mini error = ( './test_files' '.' Handling regular token '/' Handling regular token 't' Handling regular token 'e' Handling regular token 's' Handling regular token 't' Handling regular token '_' Handling regular token 'f' Handling regular token 'i' Handling regular token 'l' Handling regular token 'e' Handling regular token 's' Handling regular token Creating token type=CMD, content='./test_files' Created node with args[0]='./test_files' './test_files'] -> NULL Tokenization completed with result=1 './test_files'] -> NULL Validating redirection targets All redirection targets valid Starting AST building Found 1 commands './test_files' Pipe processing complete, pipe_root=(nil) Building redirection AST './test_files' Redirection AST build complete Redirection processing complete, redir_root=(nil) Built AST with root type=CMD Is a directory)
bash error = ( Is a directory)

131/146

