Test  87: ❌ ls >"./outfiles/outfile""1""2""3""4""5" 
Only in ./mini_outfiles: outfile
Only in ./bash_outfiles: outfile12345
mini outfiles:
2
bash outfiles:
2
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini exit code = 2
bash exit code = 0
mini error = ( 'ls >"./outfiles/outfile""1""2""3""4""5"' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' Position check triggered continue Processing position 4, char '"' Processing at pos 4 with adjacency={0,1} Processing quoted string starting at position 4 with " './outfiles/outfile' " Restored adjacency to {0,1} for content './outfiles/outfile' 5) Handling as redirection target Handling quoted text './outfiles/outfile' as potential redirection target Found redirection node type=8 Creating file node for redirection target Linked file './outfiles/outfile' to redirection node Position check triggered continue Processing position 24, char '"' Creating token from '"./outfiles/outfile"' Token type set to 5 Creating token type=5 content='"./outfiles/outfile"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' Processing at pos 24 with adjacency={1,1} Processing quoted string starting at position 24 with " '1' " Restored adjacency to {1,1} for content '1' 5) Handling as redirection target Handling quoted text '1' as potential redirection target Found redirection node type=8 Redirection already has target './outfiles/outfile', treating '1' as command argument Found command node 'ls' to attach argument Position check triggered continue Processing position 27, char '"' Creating token from '"1"' Token type set to 5 Creating token type=5 content='"1"' Linking token type=5 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' type=5 content='"1"' Processing at pos 27 with adjacency={1,1} Processing quoted string starting at position 27 with " '2' " Restored adjacency to {1,1} for content '2' 5) Handling as redirection target Handling quoted text '2' as potential redirection target Found redirection node type=8 Redirection already has target './outfiles/outfile', treating '2' as command argument Found command node 'ls' to attach argument Position check triggered continue Processing position 30, char '"' Creating token from '"2"' Token type set to 5 Creating token type=5 content='"2"' Linking token type=5 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' type=5 content='"1"' type=5 content='"2"' Processing at pos 30 with adjacency={1,1} Processing quoted string starting at position 30 with " '3' " Restored adjacency to {1,1} for content '3' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '3' '"2"' Joining '3' with last argument ('"2"') of current token ('"2"') '"2"3' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '3' 4 0x56d0f6a9aff0 0x56d0f6a9aff0 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 33, current_start 30 Set vars->start to 33 (current vars->pos) Loop ended. Current char '"' at pos 33. Text to process is from index 33 to 33. Calling handle_right_adj (from tokenize_utils.c) Processing text from 33 to 33 No text to process (pos 33 <= start 33) Exiting process_right_adj, new start for next token is 33 Token join SUCCEEDED. V' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Processing position 33, char '"' Processing at pos 33 with adjacency={1,1} Processing quoted string starting at position 33 with " '4' " Restored adjacency to {1,1} for content '4' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '4' '"2"3' Joining '4' with last argument ('"2"3') of current token ('"2"3') '"2"34' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '4' 5 0x56d0f6a9af90 0x56d0f6a9af90 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 36, current_start 33 Set vars->start to 36 (current vars->pos) Loop ended. Current char '"' at pos 36. Text to process is from index 36 to 36. Calling handle_right_adj (from tokenize_utils.c) Processing text from 36 to 36 No text to process (pos 36 <= start 36) Exiting process_right_adj, new start for next token is 36 Token join SUCCEEDED. V' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Processing position 36, char '"' Processing at pos 36 with adjacency={1,1} Processing quoted string starting at position 36 with " '5' NONE Restored adjacency to {1,1} for content '5' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '5' '"2"34' Joining '5' with last argument ('"2"34') of current token ('"2"34') '"2"345' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '5' 6 0x56d0f6a9b1e0 0x56d0f6a9b1e0 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 39, current_start 36 Set vars->start to 39 (current vars->pos) Loop ended. Current char '0' at pos 39. Text to process is from index 39 to 39. Calling handle_right_adj (from tokenize_utils.c) Processing text from 39 to 39 No text to process (pos 39 <= start 39) Exiting process_right_adj, new start for next token is 39 Token join SUCCEEDED. V' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Tokenization complete, finishing Building and executing command Building AST from token list type=2 content=[ls, 1, 2] type=8 content=[>] type=3 content=[./outfiles/outfile] type=5 content=["./outfiles/outfile"] type=5 content=["1"] type=5 content=["2"345] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x56d0f6a7f010, cmd type=2 ls ./outfiles/outfile Linking redir 0x56d0f6a9aca0 to cmd 0x56d0f6a7f010 and target 0x56d0f6a9ad50 Starting collection after redirection Setting redirection root to node 0x56d0f6a9aca0 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] [1] 2 Skipping redirection node type=8 [ls] [1] 2 Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] [1] 2 Skipping redirection node type=8 [ls] [1] 2 Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 ls Executing command tree Executing node type=8 at 0x56d0f6a9aca0 Executing redirection node type=8 0x56d0f6a7f010 (type 2) ls with 2 args ls (nil)) Processing redirection node type=8 './outfiles/outfile' Setting up output redirection to file './outfiles/outfile' Successfully opened './outfiles/outfile' with fd 5 Successfully redirected stdout to file './outfiles/outfile' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x56d0f6a9aca0 targeting 0x56d0f6a7f010 No more redirections found for cmd 0x56d0f6a7f010 No more redirections found for this command Finished processing redirection chain successfully Executing command after redirection setup Executing node type=2 at 0x56d0f6a7f010 [ls] [1] 2 ls No such file or directory 2 2) 2 2) Command execution completed with error code 2)
bash error = ()

Test  92: ❌ echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye 
Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
mini outfiles:
bye
bash outfiles:
hi
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 'o' Position advanced to 12 Processing position 12, char 'u' Position advanced to 13 Processing position 13, char 't' Position advanced to 14 Processing position 14, char 'f' Position advanced to 15 Processing position 15, char 'i' Position advanced to 16 Processing position 16, char 'l' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Processing position 19, char '/' Position advanced to 20 Processing position 20, char 'o' Position advanced to 21 Processing position 21, char 'u' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'f' Position advanced to 24 Processing position 24, char 'i' Position advanced to 25 Processing position 25, char 'l' Position advanced to 26 Processing position 26, char 'e' Position advanced to 27 Processing position 27, char '0' Position advanced to 28 Processing position 28, char '1' Position advanced to 29 Processing position 29, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 30, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' Position check triggered continue Processing position 31, char '.' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 'o' Position advanced to 34 Processing position 34, char 'u' Position advanced to 35 Processing position 35, char 't' Position advanced to 36 Processing position 36, char 'f' Position advanced to 37 Processing position 37, char 'i' Position advanced to 38 Processing position 38, char 'l' Position advanced to 39 Processing position 39, char 'e' Position advanced to 40 Processing position 40, char 's' Position advanced to 41 Processing position 41, char '/' Position advanced to 42 Processing position 42, char 'o' Position advanced to 43 Processing position 43, char 'u' Position advanced to 44 Processing position 44, char 't' Position advanced to 45 Processing position 45, char 'f' Position advanced to 46 Processing position 46, char 'i' Position advanced to 47 Processing position 47, char 'l' Position advanced to 48 Processing position 48, char 'e' Position advanced to 49 Processing position 49, char '0' Position advanced to 50 Processing position 50, char '2' Position advanced to 51 Processing position 51, char ' ' Creating token from './outfiles/outfile02' Token type set to 3 Creating token type=3 content='./outfiles/outfile02' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' Position check triggered continue Processing position 52, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' Position check triggered continue Processing position 53, char ' ' Position check triggered continue Processing position 54, char 'e' Position advanced to 55 Processing position 55, char 'c' Position advanced to 56 Processing position 56, char 'h' Position advanced to 57 Processing position 57, char 'o' Position advanced to 58 Processing position 58, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 59, char 'b' Position advanced to 60 Processing position 60, char 'y' Position advanced to 61 Processing position 61, char 'e' Position advanced to 62 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=8 content=[>] type=3 content=[./outfiles/outfile02] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x653f2d9f8dc0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x653f2d9f8e90 to cmd 0x653f2d9f8dc0 and target 0x653f2d9f9020 Starting collection after redirection Setting redirection root to node 0x653f2d9f8e90 Redirection node type=8, target cmd=0x653f2d9f8dc0, cmd type=2 echo ./outfiles/outfile02 Linking redir 0x653f2d9f90d0 to cmd 0x653f2d9f8dc0 and target 0x653f2d9f9180 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x653f2d9f8dc0 with redirection 0x653f2d9f8e90 (type 8) Associated command 0x653f2d9f9360 with redirection 0x653f2d9f90d0 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x653f2d9f9290 Starting pipe execution for node 0x653f2d9f9290 echo Forking left child Forking right child 253208) Processing redirections for left command 253209) echo echo 0x653f2d9f9290) Processing redirections for right command Processing redirection node type=8 echo 0x653f2d9f9290) Processing redirection node type=8 './outfiles/outfile01' './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile02' Successfully opened './outfiles/outfile02' with fd 3 Successfully redirected stdout to file './outfiles/outfile02' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x653f2d9f90d0 targeting 0x653f2d9f9360 No more redirections found for cmd 0x653f2d9f9360 No more redirections found for this command Finished processing redirection chain successfully Successfully opened './outfiles/outfile02' with fd 4 Right pipe process (PID 253209) executing command Successfully redirected stdout to file './outfiles/outfile02' Executing node type=2 at 0x653f2d9f9360 Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x653f2d9f90d0 targeting 0x653f2d9f8dc0 No more redirections found for cmd 0x653f2d9f8dc0 No more redirections found for this command Finished processing redirection chain successfully echo Left pipe process (PID 253208) executing command Executing node type=2 at 0x653f2d9f8dc0 [echo] [hi] echo 0 0) 0 0) 0) Left command exited with code 0 253209) 0) Right command exited with code 0 0 0) Command execution completed with error code 0)
bash error = ()

Test  96: ❌ echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye 
Files ./mini_outfiles/outfile01 and ./bash_outfiles/outfile01 differ
mini outfiles:
hi
bash outfiles:
mini error = ( 'echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 'o' Position advanced to 12 Processing position 12, char 'u' Position advanced to 13 Processing position 13, char 't' Position advanced to 14 Processing position 14, char 'f' Position advanced to 15 Processing position 15, char 'i' Position advanced to 16 Processing position 16, char 'l' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Processing position 19, char '/' Position advanced to 20 Processing position 20, char 'o' Position advanced to 21 Processing position 21, char 'u' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'f' Position advanced to 24 Processing position 24, char 'i' Position advanced to 25 Processing position 25, char 'l' Position advanced to 26 Processing position 26, char 'e' Position advanced to 27 Processing position 27, char '0' Position advanced to 28 Processing position 28, char '1' Position advanced to 29 Processing position 29, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 30, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' Position check triggered continue Processing position 31, char '.' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 't' Position advanced to 34 Processing position 34, char 'e' Position advanced to 35 Processing position 35, char 's' Position advanced to 36 Processing position 36, char 't' Position advanced to 37 Processing position 37, char '_' Position advanced to 38 Processing position 38, char 'f' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'l' Position advanced to 41 Processing position 41, char 'e' Position advanced to 42 Processing position 42, char 's' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'i' Position advanced to 45 Processing position 45, char 'n' Position advanced to 46 Processing position 46, char 'v' Position advanced to 47 Processing position 47, char 'a' Position advanced to 48 Processing position 48, char 'l' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'd' Position advanced to 51 Processing position 51, char '_' Position advanced to 52 Processing position 52, char 'p' Position advanced to 53 Processing position 53, char 'e' Position advanced to 54 Processing position 54, char 'r' Position advanced to 55 Processing position 55, char 'm' Position advanced to 56 Processing position 56, char 'i' Position advanced to 57 Processing position 57, char 's' Position advanced to 58 Processing position 58, char 's' Position advanced to 59 Processing position 59, char 'i' Position advanced to 60 Processing position 60, char 'o' Position advanced to 61 Processing position 61, char 'n' Position advanced to 62 Processing position 62, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 63, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' Position check triggered continue Processing position 64, char ' ' Position check triggered continue Processing position 65, char 'e' Position advanced to 66 Processing position 66, char 'c' Position advanced to 67 Processing position 67, char 'h' Position advanced to 68 Processing position 68, char 'o' Position advanced to 69 Processing position 69, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 70, char 'b' Position advanced to 71 Processing position 71, char 'y' Position advanced to 72 Processing position 72, char 'e' Position advanced to 73 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x64fc7b111bb0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x64fc7b111ca0 to cmd 0x64fc7b111bb0 and target 0x64fc7b111e30 Starting collection after redirection Setting redirection root to node 0x64fc7b111ca0 Redirection node type=8, target cmd=0x64fc7b111bb0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x64fc7b111ee0 to cmd 0x64fc7b111bb0 and target 0x64fc7b111f70 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x64fc7b111bb0 with redirection 0x64fc7b111ca0 (type 8) Associated command 0x64fc7b1120f0 with redirection 0x64fc7b111ee0 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x64fc7b112000 Starting pipe execution for node 0x64fc7b112000 echo Forking left child Forking right child 253394) Processing redirections for left command echo 0x64fc7b112000) Processing redirection node type=8 253395) echo './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Processing redirections for right command echo 0x64fc7b112000) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 253392 Redirection setup failed (error code 1) 253392 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 253395) executing command Executing node type=2 at 0x64fc7b1120f0 [echo] [bye] echo 0 0) Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 253392 Redirection setup failed (error code 1) 253392 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 253394) executing command Executing node type=2 at 0x64fc7b111bb0 [echo] [hi] echo 0 0) 0) Left command exited with code 0 253395) 0) Right command exited with code 0 0 0) Command execution completed with error code 0)
bash error = ( Permission denied)

Test  98: ❌ echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 't' Position advanced to 12 Processing position 12, char 'e' Position advanced to 13 Processing position 13, char 's' Position advanced to 14 Processing position 14, char 't' Position advanced to 15 Processing position 15, char '_' Position advanced to 16 Processing position 16, char 'f' Position advanced to 17 Processing position 17, char 'i' Position advanced to 18 Processing position 18, char 'l' Position advanced to 19 Processing position 19, char 'e' Position advanced to 20 Processing position 20, char 's' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 'i' Position advanced to 23 Processing position 23, char 'n' Position advanced to 24 Processing position 24, char 'v' Position advanced to 25 Processing position 25, char 'a' Position advanced to 26 Processing position 26, char 'l' Position advanced to 27 Processing position 27, char 'i' Position advanced to 28 Processing position 28, char 'd' Position advanced to 29 Processing position 29, char '_' Position advanced to 30 Processing position 30, char 'p' Position advanced to 31 Processing position 31, char 'e' Position advanced to 32 Processing position 32, char 'r' Position advanced to 33 Processing position 33, char 'm' Position advanced to 34 Processing position 34, char 'i' Position advanced to 35 Processing position 35, char 's' Position advanced to 36 Processing position 36, char 's' Position advanced to 37 Processing position 37, char 'i' Position advanced to 38 Processing position 38, char 'o' Position advanced to 39 Processing position 39, char 'n' Position advanced to 40 Processing position 40, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 41, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 42, char '.' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'o' Position advanced to 45 Processing position 45, char 'u' Position advanced to 46 Processing position 46, char 't' Position advanced to 47 Processing position 47, char 'f' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'l' Position advanced to 50 Processing position 50, char 'e' Position advanced to 51 Processing position 51, char 's' Position advanced to 52 Processing position 52, char '/' Position advanced to 53 Processing position 53, char 'o' Position advanced to 54 Processing position 54, char 'u' Position advanced to 55 Processing position 55, char 't' Position advanced to 56 Processing position 56, char 'f' Position advanced to 57 Processing position 57, char 'i' Position advanced to 58 Processing position 58, char 'l' Position advanced to 59 Processing position 59, char 'e' Position advanced to 60 Processing position 60, char '0' Position advanced to 61 Processing position 61, char '1' Position advanced to 62 Processing position 62, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 63, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' Position check triggered continue Processing position 64, char ' ' Position check triggered continue Processing position 65, char 'e' Position advanced to 66 Processing position 66, char 'c' Position advanced to 67 Processing position 67, char 'h' Position advanced to 68 Processing position 68, char 'o' Position advanced to 69 Processing position 69, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 70, char 'b' Position advanced to 71 Processing position 71, char 'y' Position advanced to 72 Processing position 72, char 'e' Position advanced to 73 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x5b232f06e220, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5b232f06e310 to cmd 0x5b232f06e220 and target 0x5b232f06e4a0 Starting collection after redirection Setting redirection root to node 0x5b232f06e310 Redirection node type=8, target cmd=0x5b232f06e220, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5b232f06e4f0 to cmd 0x5b232f06e220 and target 0x5b232f06e580 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x5b232f06e220 with redirection 0x5b232f06e310 (type 8) Associated command 0x5b232f06e760 with redirection 0x5b232f06e4f0 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5b232f06e690 Starting pipe execution for node 0x5b232f06e690 echo Forking left child Forking right child Processing redirections for left command echo 253488) 0x5b232f06e690) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 253486 Redirection setup failed (error code 1) 253486 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 253488) executing command Executing node type=2 at 0x5b232f06e220 [echo] [hi] echo 0 0) 253489) echo Processing redirections for right command echo 0x5b232f06e690) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x5b232f06e4f0 targeting 0x5b232f06e760 No more redirections found for cmd 0x5b232f06e760 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 253489) executing command Executing node type=2 at 0x5b232f06e760 [echo] [bye] echo 0 0) 0) Left command exited with code 0 253489) 0) Right command exited with code 0 0 0) Command execution completed with error code 0)
bash error = ( Permission denied)

Test  99: ❌ echo hi | echo bye >./test_files/invalid_permission 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char 'b' Position advanced to 16 Processing position 16, char 'y' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 19, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 20, char '.' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'e' Position advanced to 24 Processing position 24, char 's' Position advanced to 25 Processing position 25, char 't' Position advanced to 26 Processing position 26, char '_' Position advanced to 27 Processing position 27, char 'f' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'l' Position advanced to 30 Processing position 30, char 'e' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'n' Position advanced to 35 Processing position 35, char 'v' Position advanced to 36 Processing position 36, char 'a' Position advanced to 37 Processing position 37, char 'l' Position advanced to 38 Processing position 38, char 'i' Position advanced to 39 Processing position 39, char 'd' Position advanced to 40 Processing position 40, char '_' Position advanced to 41 Processing position 41, char 'p' Position advanced to 42 Processing position 42, char 'e' Position advanced to 43 Processing position 43, char 'r' Position advanced to 44 Processing position 44, char 'm' Position advanced to 45 Processing position 45, char 'i' Position advanced to 46 Processing position 46, char 's' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'o' Position advanced to 50 Processing position 50, char 'n' Position advanced to 51 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo, bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x56d7d9968940, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x56d7d9968990 to cmd 0x56d7d9968940 and target 0x56d7d9968b20 Starting collection after redirection Setting redirection root to node 0x56d7d9968990 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 [echo] [bye] Command argument verification complete Associated command 0x56d7d9968940 with redirection 0x56d7d9968990 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x56d7d99687d0 Starting pipe execution for node 0x56d7d99687d0 echo Forking left child Forking right child 253536) 253537) echo Processing redirections for right command Left pipe process (PID 253536) executing command echo 0x56d7d99687d0) Processing redirection node type=8 Executing node type=2 at 0x56d7d994cf40 './test_files/invalid_permission' echo Setting up output redirection to file './test_files/invalid_permission' 0 0) Permission denied Permission check failed for './test_files/invalid_permission' 253534 Redirection setup failed (error code 1) 253534 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 253537) executing command Executing node type=2 at 0x56d7d9968940 [echo] [bye] echo 0 0) 0) Left command exited with code 0 253537) 0) Right command exited with code 0 0 0) Command execution completed with error code 0)
bash error = ( Permission denied)

Test 100: ❌ echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini error = ( 'echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=11) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' Position check triggered continue Processing position 11, char '.' Position advanced to 12 Processing position 12, char '/' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char 'u' Position advanced to 15 Processing position 15, char 't' Position advanced to 16 Processing position 16, char 'f' Position advanced to 17 Processing position 17, char 'i' Position advanced to 18 Processing position 18, char 'l' Position advanced to 19 Processing position 19, char 'e' Position advanced to 20 Processing position 20, char 's' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 'o' Position advanced to 23 Processing position 23, char 'u' Position advanced to 24 Processing position 24, char 't' Position advanced to 25 Processing position 25, char 'f' Position advanced to 26 Processing position 26, char 'i' Position advanced to 27 Processing position 27, char 'l' Position advanced to 28 Processing position 28, char 'e' Position advanced to 29 Processing position 29, char '0' Position advanced to 30 Processing position 30, char '1' Position advanced to 31 Processing position 31, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 32, char 'e' Position advanced to 33 Processing position 33, char 'c' Position advanced to 34 Processing position 34, char 'h' Position advanced to 35 Processing position 35, char 'o' Position advanced to 36 Processing position 36, char ' ' Creating token from 'echo' Token type set to 3 Creating token type=3 content='echo' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' Position check triggered continue Processing position 37, char 'b' Position advanced to 38 Processing position 38, char 'y' Position advanced to 39 Processing position 39, char 'e' Position advanced to 40 Processing position 40, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' Position check triggered continue Processing position 41, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' type=8 content='>' Position check triggered continue Processing position 42, char '.' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 't' Position advanced to 45 Processing position 45, char 'e' Position advanced to 46 Processing position 46, char 's' Position advanced to 47 Processing position 47, char 't' Position advanced to 48 Processing position 48, char '_' Position advanced to 49 Processing position 49, char 'f' Position advanced to 50 Processing position 50, char 'i' Position advanced to 51 Processing position 51, char 'l' Position advanced to 52 Processing position 52, char 'e' Position advanced to 53 Processing position 53, char 's' Position advanced to 54 Processing position 54, char '/' Position advanced to 55 Processing position 55, char 'i' Position advanced to 56 Processing position 56, char 'n' Position advanced to 57 Processing position 57, char 'v' Position advanced to 58 Processing position 58, char 'a' Position advanced to 59 Processing position 59, char 'l' Position advanced to 60 Processing position 60, char 'i' Position advanced to 61 Processing position 61, char 'd' Position advanced to 62 Processing position 62, char '_' Position advanced to 63 Processing position 63, char 'p' Position advanced to 64 Processing position 64, char 'e' Position advanced to 65 Processing position 65, char 'r' Position advanced to 66 Processing position 66, char 'm' Position advanced to 67 Processing position 67, char 'i' Position advanced to 68 Processing position 68, char 's' Position advanced to 69 Processing position 69, char 's' Position advanced to 70 Processing position 70, char 'i' Position advanced to 71 Processing position 71, char 'o' Position advanced to 72 Processing position 72, char 'n' Position advanced to 73 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=3 content=[echo] type=3 content=[bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes echo Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x5aa27826db30, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5aa27826ddb0 to cmd 0x5aa27826db30 and target 0x5aa27826de00 Starting collection after redirection Found argument 'echo' after redirection Found argument 'bye' after redirection Setting redirection root to node 0x5aa27826ddb0 Redirection node type=8, target cmd=0x5aa27826db30, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5aa27826e0b0 to cmd 0x5aa27826db30 and target 0x5aa27826e160 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [bye] [echo] [hi] [echo] [bye] Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [bye] [echo] [hi] [echo] [bye] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 echo Executing command tree Executing node type=8 at 0x5aa27826ddb0 Executing redirection node type=8 0x5aa27826db30 (type 2) echo with 3 args echo (nil)) Processing redirection node type=8 './outfiles/outfile01' Redirection setup failed (error code 1) 253574 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Redirection chain processing failed 1) Command execution completed with error code 1)
bash error = ( Permission denied)

Test 101: ❌ echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char 'b' Position advanced to 16 Processing position 16, char 'y' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 19, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 20, char '.' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'e' Position advanced to 24 Processing position 24, char 's' Position advanced to 25 Processing position 25, char 't' Position advanced to 26 Processing position 26, char '_' Position advanced to 27 Processing position 27, char 'f' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'l' Position advanced to 30 Processing position 30, char 'e' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'n' Position advanced to 35 Processing position 35, char 'v' Position advanced to 36 Processing position 36, char 'a' Position advanced to 37 Processing position 37, char 'l' Position advanced to 38 Processing position 38, char 'i' Position advanced to 39 Processing position 39, char 'd' Position advanced to 40 Processing position 40, char '_' Position advanced to 41 Processing position 41, char 'p' Position advanced to 42 Processing position 42, char 'e' Position advanced to 43 Processing position 43, char 'r' Position advanced to 44 Processing position 44, char 'm' Position advanced to 45 Processing position 45, char 'i' Position advanced to 46 Processing position 46, char 's' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'o' Position advanced to 50 Processing position 50, char 'n' Position advanced to 51 Processing position 51, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 52, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 53, char '.' Position advanced to 54 Processing position 54, char '/' Position advanced to 55 Processing position 55, char 'o' Position advanced to 56 Processing position 56, char 'u' Position advanced to 57 Processing position 57, char 't' Position advanced to 58 Processing position 58, char 'f' Position advanced to 59 Processing position 59, char 'i' Position advanced to 60 Processing position 60, char 'l' Position advanced to 61 Processing position 61, char 'e' Position advanced to 62 Processing position 62, char 's' Position advanced to 63 Processing position 63, char '/' Position advanced to 64 Processing position 64, char 'o' Position advanced to 65 Processing position 65, char 'u' Position advanced to 66 Processing position 66, char 't' Position advanced to 67 Processing position 67, char 'f' Position advanced to 68 Processing position 68, char 'i' Position advanced to 69 Processing position 69, char 'l' Position advanced to 70 Processing position 70, char 'e' Position advanced to 71 Processing position 71, char '0' Position advanced to 72 Processing position 72, char '1' Position advanced to 73 Tokenization complete, finishing Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo, bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x5a4ac3c7f2e0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5a4ac3c7f350 to cmd 0x5a4ac3c7f2e0 and target 0x5a4ac3c7f4e0 Starting collection after redirection Setting redirection root to node 0x5a4ac3c7f350 Redirection node type=8, target cmd=0x5a4ac3c7f2e0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5a4ac3c7f530 to cmd 0x5a4ac3c7f2e0 and target 0x5a4ac3c7f5c0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [bye] Command argument verification complete Associated command 0x5a4ac3c7f2e0 with redirection 0x5a4ac3c7f350 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5a4ac3c7f150 Starting pipe execution for node 0x5a4ac3c7f150 echo Forking left child Forking right child Left pipe process (PID 253624) executing command 253624) Executing node type=2 at 0x5a4ac3c7f0a0 [echo] [hi] echo 0 0) 253625) echo Processing redirections for right command echo 0x5a4ac3c7f150) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 253622 Redirection setup failed (error code 1) 253622 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 253625) executing command Executing node type=2 at 0x5a4ac3c7f2e0 [echo] [bye] echo 0 0) 0) Left command exited with code 0 253625) 0) Right command exited with code 0 0 0) Command execution completed with error code 0)
bash error = ( Permission denied)

Test 122: ❌ echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye 
Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
mini outfiles:
hi
bye
bash outfiles:
hi
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 10, char '.' Position advanced to 11 Processing position 11, char '/' Position advanced to 12 Processing position 12, char 'o' Position advanced to 13 Processing position 13, char 'u' Position advanced to 14 Processing position 14, char 't' Position advanced to 15 Processing position 15, char 'f' Position advanced to 16 Processing position 16, char 'i' Position advanced to 17 Processing position 17, char 'l' Position advanced to 18 Processing position 18, char 'e' Position advanced to 19 Processing position 19, char 's' Position advanced to 20 Processing position 20, char '/' Position advanced to 21 Processing position 21, char 'o' Position advanced to 22 Processing position 22, char 'u' Position advanced to 23 Processing position 23, char 't' Position advanced to 24 Processing position 24, char 'f' Position advanced to 25 Processing position 25, char 'i' Position advanced to 26 Processing position 26, char 'l' Position advanced to 27 Processing position 27, char 'e' Position advanced to 28 Processing position 28, char '0' Position advanced to 29 Processing position 29, char '1' Position advanced to 30 Processing position 30, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 31, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' Position check triggered continue Processing position 33, char '.' Position advanced to 34 Processing position 34, char '/' Position advanced to 35 Processing position 35, char 'o' Position advanced to 36 Processing position 36, char 'u' Position advanced to 37 Processing position 37, char 't' Position advanced to 38 Processing position 38, char 'f' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'l' Position advanced to 41 Processing position 41, char 'e' Position advanced to 42 Processing position 42, char 's' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'o' Position advanced to 45 Processing position 45, char 'u' Position advanced to 46 Processing position 46, char 't' Position advanced to 47 Processing position 47, char 'f' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'l' Position advanced to 50 Processing position 50, char 'e' Position advanced to 51 Processing position 51, char '0' Position advanced to 52 Processing position 52, char '2' Position advanced to 53 Processing position 53, char ' ' Creating token from './outfiles/outfile02' Token type set to 3 Creating token type=3 content='./outfiles/outfile02' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' Position check triggered continue Processing position 54, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' Position check triggered continue Processing position 55, char ' ' Position check triggered continue Processing position 56, char 'e' Position advanced to 57 Processing position 57, char 'c' Position advanced to 58 Processing position 58, char 'h' Position advanced to 59 Processing position 59, char 'o' Position advanced to 60 Processing position 60, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 61, char 'b' Position advanced to 62 Processing position 62, char 'y' Position advanced to 63 Processing position 63, char 'e' Position advanced to 64 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=9 content=[>>] type=3 content=[./outfiles/outfile01] type=9 content=[>>] type=3 content=[./outfiles/outfile02] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x5e84f9dba160, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5e84f9dba230 to cmd 0x5e84f9dba160 and target 0x5e84f9dba3c0 Starting collection after redirection Setting redirection root to node 0x5e84f9dba230 Redirection node type=9, target cmd=0x5e84f9dba160, cmd type=2 echo ./outfiles/outfile02 Linking redir 0x5e84f9dba470 to cmd 0x5e84f9dba160 and target 0x5e84f9dba520 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=9 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x5e84f9dba160 with redirection 0x5e84f9dba230 (type 9) Associated command 0x5e84f9dba700 with redirection 0x5e84f9dba470 (type 9) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=9 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5e84f9dba630 Starting pipe execution for node 0x5e84f9dba630 echo Forking left child Forking right child 254456) Processing redirections for left command echo 0x5e84f9dba630) Processing redirection node type=9 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' 254457) echo Successfully opened './outfiles/outfile01' with fd 3 Processing redirections for right command Successfully redirected stdout to file './outfiles/outfile01' echo Redirection setup successful Following redir link to next redirection node 0x5e84f9dba630) Processing redirection node type=9 Processing redirection node type=9 './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile02' './outfiles/outfile02' Successfully opened './outfiles/outfile02' with fd 4 Successfully redirected stdout to file './outfiles/outfile02' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x5e84f9dba470 targeting 0x5e84f9dba160 No more redirections found for cmd 0x5e84f9dba160 No more redirections found for this command Setting up output redirection to file './outfiles/outfile02' Finished processing redirection chain successfully Left pipe process (PID 254456) executing command Executing node type=2 at 0x5e84f9dba160 [echo] [hi] echo Successfully opened './outfiles/outfile02' with fd 3 Successfully redirected stdout to file './outfiles/outfile02' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x5e84f9dba470 targeting 0x5e84f9dba700 No more redirections found for cmd 0x5e84f9dba700 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 254457) executing command Executing node type=2 at 0x5e84f9dba700 [echo] [bye] echo 0 0) 0 0) 0) Left command exited with code 0 254457) 0) Right command exited with code 0 0 0) Command execution completed with error code 0)
bash error = ()

Test 127: ❌ echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 10, char '.' Position advanced to 11 Processing position 11, char '/' Position advanced to 12 Processing position 12, char 't' Position advanced to 13 Processing position 13, char 'e' Position advanced to 14 Processing position 14, char 's' Position advanced to 15 Processing position 15, char 't' Position advanced to 16 Processing position 16, char '_' Position advanced to 17 Processing position 17, char 'f' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'l' Position advanced to 20 Processing position 20, char 'e' Position advanced to 21 Processing position 21, char 's' Position advanced to 22 Processing position 22, char '/' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'n' Position advanced to 25 Processing position 25, char 'v' Position advanced to 26 Processing position 26, char 'a' Position advanced to 27 Processing position 27, char 'l' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'd' Position advanced to 30 Processing position 30, char '_' Position advanced to 31 Processing position 31, char 'p' Position advanced to 32 Processing position 32, char 'e' Position advanced to 33 Processing position 33, char 'r' Position advanced to 34 Processing position 34, char 'm' Position advanced to 35 Processing position 35, char 'i' Position advanced to 36 Processing position 36, char 's' Position advanced to 37 Processing position 37, char 's' Position advanced to 38 Processing position 38, char 'i' Position advanced to 39 Processing position 39, char 'o' Position advanced to 40 Processing position 40, char 'n' Position advanced to 41 Processing position 41, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 42, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 43, char '.' Position advanced to 44 Processing position 44, char '/' Position advanced to 45 Processing position 45, char 'o' Position advanced to 46 Processing position 46, char 'u' Position advanced to 47 Processing position 47, char 't' Position advanced to 48 Processing position 48, char 'f' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'l' Position advanced to 51 Processing position 51, char 'e' Position advanced to 52 Processing position 52, char 's' Position advanced to 53 Processing position 53, char '/' Position advanced to 54 Processing position 54, char 'o' Position advanced to 55 Processing position 55, char 'u' Position advanced to 56 Processing position 56, char 't' Position advanced to 57 Processing position 57, char 'f' Position advanced to 58 Processing position 58, char 'i' Position advanced to 59 Processing position 59, char 'l' Position advanced to 60 Processing position 60, char 'e' Position advanced to 61 Processing position 61, char '0' Position advanced to 62 Processing position 62, char '1' Position advanced to 63 Processing position 63, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 64, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' Position check triggered continue Processing position 65, char ' ' Position check triggered continue Processing position 66, char 'e' Position advanced to 67 Processing position 67, char 'c' Position advanced to 68 Processing position 68, char 'h' Position advanced to 69 Processing position 69, char 'o' Position advanced to 70 Processing position 70, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 71, char 'b' Position advanced to 72 Processing position 72, char 'y' Position advanced to 73 Processing position 73, char 'e' Position advanced to 74 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x654d5f644c40, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x654d5f644d30 to cmd 0x654d5f644c40 and target 0x654d5f644ec0 Starting collection after redirection Setting redirection root to node 0x654d5f644d30 Redirection node type=8, target cmd=0x654d5f644c40, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x654d5f644f10 to cmd 0x654d5f644c40 and target 0x654d5f644fa0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x654d5f644c40 with redirection 0x654d5f644d30 (type 9) Associated command 0x654d5f645180 with redirection 0x654d5f644f10 (type 8) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x654d5f6450b0 Starting pipe execution for node 0x654d5f6450b0 echo Forking left child Forking right child Processing redirections for left command 254688) echo 0x654d5f6450b0) Processing redirection node type=9 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 254686 Redirection setup failed (error code 1) 254686 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 254688) executing command Executing node type=2 at 0x654d5f644c40 [echo] [hi] echo 0 0) 254689) echo Processing redirections for right command echo 0x654d5f6450b0) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x654d5f644f10 targeting 0x654d5f645180 No more redirections found for cmd 0x654d5f645180 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 254689) executing command Executing node type=2 at 0x654d5f645180 [echo] [bye] echo 0 0) 0) Left command exited with code 0 254689) 0) Right command exited with code 0 0 0) Command execution completed with error code 0)
bash error = ( Permission denied)

Test 128: ❌ echo hi | echo bye >>./test_files/invalid_permission 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >>./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char 'b' Position advanced to 16 Processing position 16, char 'y' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 19, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 21, char '.' Position advanced to 22 Processing position 22, char '/' Position advanced to 23 Processing position 23, char 't' Position advanced to 24 Processing position 24, char 'e' Position advanced to 25 Processing position 25, char 's' Position advanced to 26 Processing position 26, char 't' Position advanced to 27 Processing position 27, char '_' Position advanced to 28 Processing position 28, char 'f' Position advanced to 29 Processing position 29, char 'i' Position advanced to 30 Processing position 30, char 'l' Position advanced to 31 Processing position 31, char 'e' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char '/' Position advanced to 34 Processing position 34, char 'i' Position advanced to 35 Processing position 35, char 'n' Position advanced to 36 Processing position 36, char 'v' Position advanced to 37 Processing position 37, char 'a' Position advanced to 38 Processing position 38, char 'l' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'd' Position advanced to 41 Processing position 41, char '_' Position advanced to 42 Processing position 42, char 'p' Position advanced to 43 Processing position 43, char 'e' Position advanced to 44 Processing position 44, char 'r' Position advanced to 45 Processing position 45, char 'm' Position advanced to 46 Processing position 46, char 'i' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 's' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'o' Position advanced to 51 Processing position 51, char 'n' Position advanced to 52 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo, bye] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x6198bae141c0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x6198bae14210 to cmd 0x6198bae141c0 and target 0x6198bae143a0 Starting collection after redirection Setting redirection root to node 0x6198bae14210 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 [echo] [bye] Command argument verification complete Associated command 0x6198bae141c0 with redirection 0x6198bae14210 (type 9) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x6198bae14030 Starting pipe execution for node 0x6198bae14030 echo Forking left child Forking right child 254736) 254737) Left pipe process (PID 254736) executing command echo Executing node type=2 at 0x6198bae13f60 Processing redirections for right command echo 0x6198bae14030) Processing redirection node type=9 echo 0 0) './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 254734 Redirection setup failed (error code 1) 254734 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 254737) executing command Executing node type=2 at 0x6198bae141c0 [echo] [bye] echo 0 0) 0) Left command exited with code 0 254737) 0) Right command exited with code 0 0 0) Command execution completed with error code 0)
bash error = ( Permission denied)

Test 129: ❌ echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission 
Files ./mini_outfiles/outfile01 and ./bash_outfiles/outfile01 differ
mini outfiles:
bye
bash outfiles:
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 17, char '.' Position advanced to 18 Processing position 18, char '/' Position advanced to 19 Processing position 19, char 'o' Position advanced to 20 Processing position 20, char 'u' Position advanced to 21 Processing position 21, char 't' Position advanced to 22 Processing position 22, char 'f' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'l' Position advanced to 25 Processing position 25, char 'e' Position advanced to 26 Processing position 26, char 's' Position advanced to 27 Processing position 27, char '/' Position advanced to 28 Processing position 28, char 'o' Position advanced to 29 Processing position 29, char 'u' Position advanced to 30 Processing position 30, char 't' Position advanced to 31 Processing position 31, char 'f' Position advanced to 32 Processing position 32, char 'i' Position advanced to 33 Processing position 33, char 'l' Position advanced to 34 Processing position 34, char 'e' Position advanced to 35 Processing position 35, char '0' Position advanced to 36 Processing position 36, char '1' Position advanced to 37 Processing position 37, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 38, char 'b' Position advanced to 39 Processing position 39, char 'y' Position advanced to 40 Processing position 40, char 'e' Position advanced to 41 Processing position 41, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=3 content='bye' Position check triggered continue Processing position 42, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=3 content='bye' type=8 content='>' Position check triggered continue Processing position 43, char '.' Position advanced to 44 Processing position 44, char '/' Position advanced to 45 Processing position 45, char 't' Position advanced to 46 Processing position 46, char 'e' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 't' Position advanced to 49 Processing position 49, char '_' Position advanced to 50 Processing position 50, char 'f' Position advanced to 51 Processing position 51, char 'i' Position advanced to 52 Processing position 52, char 'l' Position advanced to 53 Processing position 53, char 'e' Position advanced to 54 Processing position 54, char 's' Position advanced to 55 Processing position 55, char '/' Position advanced to 56 Processing position 56, char 'i' Position advanced to 57 Processing position 57, char 'n' Position advanced to 58 Processing position 58, char 'v' Position advanced to 59 Processing position 59, char 'a' Position advanced to 60 Processing position 60, char 'l' Position advanced to 61 Processing position 61, char 'i' Position advanced to 62 Processing position 62, char 'd' Position advanced to 63 Processing position 63, char '_' Position advanced to 64 Processing position 64, char 'p' Position advanced to 65 Processing position 65, char 'e' Position advanced to 66 Processing position 66, char 'r' Position advanced to 67 Processing position 67, char 'm' Position advanced to 68 Processing position 68, char 'i' Position advanced to 69 Processing position 69, char 's' Position advanced to 70 Processing position 70, char 's' Position advanced to 71 Processing position 71, char 'i' Position advanced to 72 Processing position 72, char 'o' Position advanced to 73 Processing position 73, char 'n' Position advanced to 74 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=3 content='bye' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo] type=9 content=[>>] type=3 content=[./outfiles/outfile01] type=3 content=[bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x5587c459c0a0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5587c459c110 to cmd 0x5587c459c0a0 and target 0x5587c459c1e0 Starting collection after redirection Found argument 'bye' after redirection Setting redirection root to node 0x5587c459c110 Redirection node type=8, target cmd=0x5587c459c0a0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5587c459c3c0 to cmd 0x5587c459c0a0 and target 0x5587c459c470 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 Found potential argument 'bye' Skipping duplicate argument 'bye' Skipping redirection node type=8 [echo] [bye] Command argument verification complete Associated command 0x5587c459c0a0 with redirection 0x5587c459c110 (type 9) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 Found potential argument 'bye' Skipping duplicate argument 'bye' Skipping redirection node type=8 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5587c459bf10 Starting pipe execution for node 0x5587c459bf10 echo Forking left child Forking right child Left pipe process (PID 254782) executing command Executing node type=2 at 0x5587c459be60 [echo] [hi] echo 254782) 0 0) 254783) echo Processing redirections for right command echo 0x5587c459bf10) Processing redirection node type=9 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 254780 Redirection setup failed (error code 1) 254780 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 254783) executing command Executing node type=2 at 0x5587c459c0a0 [echo] [bye] echo 0 0) 0) Left command exited with code 0 254783) 0) Right command exited with code 0 0 0) Command execution completed with error code 0)
bash error = ( Permission denied)
 
Test 133: ❌ $PWD 
mini exit code = 2
bash exit code = 126
mini error = ( '$PWD' Processing position 0, char '$' 'PWD' 'PWD' '/home/bleow/Coding/Core/minishell/minishell_tester' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 4, current_start 0 Set vars->start to 4 (current vars->pos) Loop ended. Current char '0' at pos 4. Text to process is from index 4 to 4. Calling handle_right_adj (from tokenize_utils.c) Processing text from 4 to 4 No text to process (pos 4 <= start 4) Exiting process_right_adj, new start for next token is 4 Position check triggered continue Tokenization complete, finishing Building and executing command Building AST from token list type=2 content=[/home/bleow/Coding/Core/minishell/minishell_tester] Building AST from token list Found 1 command nodes /home/bleow/Coding/Core/minishell/minishell_tester Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command /home/bleow/Coding/Core/minishell/minishell_tester [/home/bleow/Coding/Core/minishell/minishell_tester] [/home/bleow/Coding/Core/minishell/minishell_tester] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command /home/bleow/Coding/Core/minishell/minishell_tester [/home/bleow/Coding/Core/minishell/minishell_tester] [/home/bleow/Coding/Core/minishell/minishell_tester] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x63069c4fa390 [/home/bleow/Coding/Core/minishell/minishell_tester] /home/bleow/Coding/Core/minishell/minishell_tester Is a directory 2 2) Command execution completed with error code 2)
bash error = ( Is a directory)

Test 134: ❌ $EMPTY 
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY' Processing position 0, char '$' 'EMPTY' 'EMPTY' '' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 6, current_start 0 Set vars->start to 6 (current vars->pos) Loop ended. Current char '0' at pos 6. Text to process is from index 6 to 6. Calling handle_right_adj (from tokenize_utils.c) Processing text from 6 to 6 No text to process (pos 6 <= start 6) Exiting process_right_adj, new start for next token is 6 Position check triggered continue Tokenization complete, finishing Building and executing command Building AST from token list type=2 content=[] Building AST from token list Found 1 command nodes Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command [] [] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command [] [] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x5edc9fef2fa0 [] Permission denied 127 127) Command execution completed with error code 127)
bash error = ()

Test 135: ❌ $EMPTY echo hi 
mini output = ()
bash output = (hi)
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY echo hi' Processing position 0, char '$' 'EMPTY' 'EMPTY' '' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 6, current_start 0 Set vars->start to 6 (current vars->pos) Loop ended. Current char ' ' at pos 6. Text to process is from index 6 to 6. Calling handle_right_adj (from tokenize_utils.c) Processing text from 6 to 6 No text to process (pos 6 <= start 6) Exiting process_right_adj, new start for next token is 6 Position check triggered continue Processing position 6, char ' ' Position check triggered continue Processing position 7, char 'e' Position advanced to 8 Processing position 8, char 'c' Position advanced to 9 Processing position 9, char 'h' Position advanced to 10 Processing position 10, char 'o' Position advanced to 11 Processing position 11, char ' ' Creating token from 'echo' Token type set to 3 Creating token type=3 content='echo' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'echo' with command '' No next node, setting current to cmd 1 Traversing final token list type=2 content='' Position check triggered continue Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Tokenization complete, finishing Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command '' No next node, setting current to cmd 1 Traversing final token list type=2 content='' Building and executing command Building AST from token list type=2 content=[, echo, hi] Building AST from token list Found 1 command nodes Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command [] [echo] [hi] [] [echo] [hi] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command [] [echo] [hi] [] [echo] [hi] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x58321da5a9b0 [] [echo] [hi] Permission denied 127 127) Command execution completed with error code 127)
bash error = ()

Test 136: ❌ ./test_files/invalid_permission 
mini exit code = 127
bash exit code = 126
mini error = ( './test_files/invalid_permission' Processing position 0, char '.' Position advanced to 1 Processing position 1, char '/' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char 'e' Position advanced to 4 Processing position 4, char 's' Position advanced to 5 Processing position 5, char 't' Position advanced to 6 Processing position 6, char '_' Position advanced to 7 Processing position 7, char 'f' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 'l' Position advanced to 10 Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 's' Position advanced to 12 Processing position 12, char '/' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Processing position 14, char 'n' Position advanced to 15 Processing position 15, char 'v' Position advanced to 16 Processing position 16, char 'a' Position advanced to 17 Processing position 17, char 'l' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'd' Position advanced to 20 Processing position 20, char '_' Position advanced to 21 Processing position 21, char 'p' Position advanced to 22 Processing position 22, char 'e' Position advanced to 23 Processing position 23, char 'r' Position advanced to 24 Processing position 24, char 'm' Position advanced to 25 Processing position 25, char 'i' Position advanced to 26 Processing position 26, char 's' Position advanced to 27 Processing position 27, char 's' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'o' Position advanced to 30 Processing position 30, char 'n' Position advanced to 31 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 2 Creating token type=2 content='./test_files/invalid_permission' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes ./test_files/invalid_permission Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files/invalid_permission [./test_files/invalid_permission] [./test_files/invalid_permission] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files/invalid_permission [./test_files/invalid_permission] [./test_files/invalid_permission] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x5b630d32c5d0 [./test_files/invalid_permission] ./test_files/invalid_permission Permission denied 127 127) Command execution completed with error code 127)
bash error = ( Permission denied)

Test 141: ❌ ./test_files 
mini exit code = 2
bash exit code = 126
mini error = ( './test_files' Processing position 0, char '.' Position advanced to 1 Processing position 1, char '/' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char 'e' Position advanced to 4 Processing position 4, char 's' Position advanced to 5 Processing position 5, char 't' Position advanced to 6 Processing position 6, char '_' Position advanced to 7 Processing position 7, char 'f' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 'l' Position advanced to 10 Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 's' Position advanced to 12 Tokenization complete, finishing Creating token from './test_files' Token type set to 2 Creating token type=2 content='./test_files' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='./test_files' Building and executing command Building AST from token list type=2 content=[./test_files] Building AST from token list Found 1 command nodes ./test_files Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files [./test_files] [./test_files] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files [./test_files] [./test_files] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x5674d62c4ec0 [./test_files] ./test_files Is a directory 2 2) Command execution completed with error code 2)
bash error = ( Is a directory)

130/146

