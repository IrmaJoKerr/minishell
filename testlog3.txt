bleow@bleow-VM-Mint:~/Coding/Core/minishell/minishell_tester$ ./tester
üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•
                                                                                             
 ‚ñà‚ñà    ‚ñà‚ñà ‚ñà ‚ñà‚ñà    ‚ñà ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà   ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà     ‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà  
 ‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà ‚ñà ‚ñà‚ñà‚ñà   ‚ñà ‚ñà ‚ñà     ‚ñà   ‚ñà ‚ñà     ‚ñà     ‚ñà         ‚ñà‚ñà   ‚ñà     ‚ñà       ‚ñà‚ñà   ‚ñà     ‚ñà   ‚ñà‚ñà 
 ‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà ‚ñà ‚ñà ‚ñà‚ñà  ‚ñà ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà  ‚ñà     ‚ñà         ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà  
 ‚ñà  ‚ñà‚ñà  ‚ñà ‚ñà ‚ñà  ‚ñà‚ñà ‚ñà ‚ñà     ‚ñà ‚ñà   ‚ñà ‚ñà     ‚ñà     ‚ñà         ‚ñà‚ñà   ‚ñà         ‚ñà   ‚ñà‚ñà   ‚ñà     ‚ñà   ‚ñà‚ñà 
 ‚ñà      ‚ñà ‚ñà ‚ñà   ‚ñà‚ñà‚ñà ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà   ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà   ‚ñà‚ñà 
                                                                                             
üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•
                                                                                              
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî builtins
Test   1: ‚úÖ‚ö†Ô∏è  echo hello world 
mini error = ( 'echo hello world' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'e' Handling regular token 'l' Handling regular token 'l' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hello' Created node with args[0]='hello' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hello', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing 'w' Handling regular token 'o' Handling regular token 'r' Handling regular token 'l' Handling regular token 'd' Handling regular token Creating token type=ARGS, content='world' Created node with args[0]='world' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='world', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test   2: ‚úÖ‚ö†Ô∏è  echo "hello world" 
mini error = ( 'echo "hello world"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hello world', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test   3: ‚úÖ‚ö†Ô∏è  echo 'hello world' 
mini error = ( 'echo 'hello world'' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing ''' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hello world', quote_type=4 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test   4: ‚úÖ‚ö†Ô∏è  echo hello'world' 
mini error = ( 'echo hello'world'' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'e' Handling regular token 'l' Handling regular token 'l' Handling regular token 'o' Handling regular token ''' Handling regular token Creating token type=ARGS, content='hello' Created node with args[0]='hello' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hello', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test   5: ‚úÖ‚ö†Ô∏è  echo hello""world 
mini error = ( 'echo hello""world' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'e' Handling regular token 'l' Handling regular token 'l' Handling regular token 'o' Handling regular token '"' Handling regular token Creating token type=ARGS, content='hello' Created node with args[0]='hello' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hello', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test   6: ‚úÖ‚ö†Ô∏è  echo '' 
mini error = ( 'echo ''' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing ''' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='', quote_type=4 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Creating token type=', content='''' Created node with args[0]='''' ''''] -> NULL Tokenization completed with result=1 ''''] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x648086677330 left=(nil), right=(nil), redir=(nil), prev=0x64808665b600, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x648086677330 No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test   7: ‚úÖ‚ö†Ô∏è  echo "$PWD" 
mini error = ( 'echo "$PWD"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='/home/bleow/Coding/Core/minishell/minishell_tester', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test   8: ‚úÖ‚ö†Ô∏è  echo '$PWD' 
mini error = ( 'echo '$PWD'' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing ''' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='$PWD', quote_type=4 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test   9: ‚úÖ‚ö†Ô∏è  echo "aspas ->'" 
mini error = ( 'echo "aspas ->'"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='aspas ->'', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  10: ‚úÖ‚ö†Ô∏è  echo "aspas -> ' " 
mini error = ( 'echo "aspas -> ' "' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='aspas -> ' ', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  11: ‚úÖ‚ö†Ô∏è  echo 'aspas ->"' 
mini error = ( 'echo 'aspas ->"'' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing ''' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='aspas ->"', quote_type=4 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  12: ‚úÖ‚ö†Ô∏è  echo 'aspas -> " ' 
mini error = ( 'echo 'aspas -> " '' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing ''' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='aspas -> " ', quote_type=4 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  13: ‚úÖ‚ö†Ô∏è  echo "> >> < * ? [ ] | ; [ ] || && ( ) & # $  <<" 
mini error = ( 'echo "> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Creating token type=", content='"> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<"' Created node with args[0]='"> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<"' '"> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<"'] -> NULL Tokenization completed with result=1 '"> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<"'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64e932b14a00 left=(nil), right=(nil), redir=(nil), prev=0x64e932af8bb0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64e932b14a00 No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  14: ‚úÖ‚ö†Ô∏è  echo '> >> < * ? [ ] | ; [ ] || && ( ) & # $  <<' 
mini error = ( 'echo '> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<'' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing ''' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<', quote_type=4 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Creating token type=', content=''> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<'' Created node with args[0]=''> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<'' ''> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<''] -> NULL Tokenization completed with result=1 ''> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards ? [ ] | ; [ ] || && ( ) & # $ <<''] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5fd22f235e30 left=(nil), right=(nil), redir=(nil), prev=0x5fd22f235ba0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5fd22f235e30 No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  15: ‚úÖ‚ö†Ô∏è  echo "exit_code ->$? user ->$USER home -> $HOME" 
mini error = ( 'echo "exit_code ->$? user ->$USER home -> $HOME"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='exit_code ->0 user ->bleow home -> /home/bleow', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  16: ‚úÖ‚ö†Ô∏è  echo 'exit_code ->$? user ->$USER home -> $HOME' 
mini error = ( 'echo 'exit_code ->$? user ->$USER home -> $HOME'' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing ''' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='exit_code ->$? user ->$USER home -> $HOME', quote_type=4 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  17: ‚úÖ‚ö†Ô∏è  echo "$" 
mini error = ( 'echo "$"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='$', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  18: ‚úÖ‚ö†Ô∏è  echo '$' 
mini error = ( 'echo '$'' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing ''' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='$', quote_type=4 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  19: ‚úÖ‚ö†Ô∏è  echo $ 
mini error = ( 'echo $' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '$' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='$', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Creating token type=$, content='$' Created node with args[0]='$' '$'] -> NULL Tokenization completed with result=1 '$'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x58280fdf2320 left=(nil), right=(nil), redir=(nil), prev=0x58280fdd6670, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x58280fdf2320 No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  20: ‚úÖ‚ö†Ô∏è  echo $? 
mini error = ( 'echo $?' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '$' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='0', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  21: ‚úÖ‚ö†Ô∏è  echo $?HELLO 
mini error = ( 'echo $?HELLO' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '$' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='0', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'echo' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  22: ‚úÖ‚ö†Ô∏è  pwd 
mini error = ( 'pwd' 'p' Handling regular token 'w' Handling regular token 'd' Handling regular token Creating token type=CMD, content='pwd' Created node with args[0]='pwd' 'pwd'] -> NULL Tokenization completed with result=1 'pwd'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'pwd' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  23: ‚úÖ‚ö†Ô∏è  pwd oi 
mini error = ( 'pwd oi' 'p' Handling regular token 'w' Handling regular token 'd' Handling regular token ' ' Handling regular token Creating token type=CMD, content='pwd' Created node with args[0]='pwd' 'pwd'] -> NULL Position update indicated, continuing 'o' Handling regular token 'i' Handling regular token Creating token type=ARGS, content='oi' Created node with args[0]='oi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='oi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'pwd'] -> NULL Tokenization completed with result=1 'pwd'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'pwd' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  24: ‚úÖ‚ö†Ô∏è  export hello 
mini error = ( 'export hello' 'e' Handling regular token 'x' Handling regular token 'p' Handling regular token 'o' Handling regular token 'r' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='export' Created node with args[0]='export' 'export'] -> NULL Position update indicated, continuing 'h' Handling regular token 'e' Handling regular token 'l' Handling regular token 'l' Handling regular token 'o' Handling regular token Creating token type=ARGS, content='hello' Created node with args[0]='hello' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hello', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Tokenization completed with result=1 'export'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'export' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  25: ‚úÖ‚ö†Ô∏è  export HELLO=123 
mini error = ( 'export HELLO=123' 'e' Handling regular token 'x' Handling regular token 'p' Handling regular token 'o' Handling regular token 'r' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='export' Created node with args[0]='export' 'export'] -> NULL Position update indicated, continuing 'H' Handling regular token 'E' Handling regular token 'L' Handling regular token 'L' Handling regular token 'O' Handling regular token '=' Handling regular token '1' Handling regular token '2' Handling regular token '3' Handling regular token Creating token type=ARGS, content='HELLO=123' Created node with args[0]='HELLO=123' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='HELLO=123', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Tokenization completed with result=1 'export'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'export' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  26: ‚úÖ‚ö†Ô∏è  export A- 
mini error = ( 'export A-' 'e' Handling regular token 'x' Handling regular token 'p' Handling regular token 'o' Handling regular token 'r' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='export' Created node with args[0]='export' 'export'] -> NULL Position update indicated, continuing 'A' Handling regular token '-' Handling regular token Creating token type=ARGS, content='A-' Created node with args[0]='A-' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='A-', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Tokenization completed with result=1 'export'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'export' Redirection AST build complete No redirection root created Using first command as AST root not a valid identifier)
bash error = ( not a valid identifier)
Test  27: ‚úÖ‚ö†Ô∏è  export HELLO=123 A 
mini error = ( 'export HELLO=123 A' 'e' Handling regular token 'x' Handling regular token 'p' Handling regular token 'o' Handling regular token 'r' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='export' Created node with args[0]='export' 'export'] -> NULL Position update indicated, continuing 'H' Handling regular token 'E' Handling regular token 'L' Handling regular token 'L' Handling regular token 'O' Handling regular token '=' Handling regular token '1' Handling regular token '2' Handling regular token '3' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='HELLO=123' Created node with args[0]='HELLO=123' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='HELLO=123', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Position update indicated, continuing 'A' Handling regular token Creating token type=ARGS, content='A' Created node with args[0]='A' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='A', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Tokenization completed with result=1 'export'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'export' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  28: ‚úÖ‚ö†Ô∏è  export HELLO="123 A-" 
mini error = ( 'export HELLO="123 A-"' 'e' Handling regular token 'x' Handling regular token 'p' Handling regular token 'o' Handling regular token 'r' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='export' Created node with args[0]='export' 'export'] -> NULL Position update indicated, continuing 'H' Handling regular token 'E' Handling regular token 'L' Handling regular token 'L' Handling regular token 'O' Handling regular token '=' Handling regular token '"' Handling regular token Creating token type=ARGS, content='HELLO=' Created node with args[0]='HELLO=' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='HELLO=', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Position update indicated, continuing Tokenization completed with result=1 'export'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'export' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  29: ‚úÖ‚ö†Ô∏è  export hello world 
mini error = ( 'export hello world' 'e' Handling regular token 'x' Handling regular token 'p' Handling regular token 'o' Handling regular token 'r' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='export' Created node with args[0]='export' 'export'] -> NULL Position update indicated, continuing 'h' Handling regular token 'e' Handling regular token 'l' Handling regular token 'l' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hello' Created node with args[0]='hello' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hello', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Position update indicated, continuing 'w' Handling regular token 'o' Handling regular token 'r' Handling regular token 'l' Handling regular token 'd' Handling regular token Creating token type=ARGS, content='world' Created node with args[0]='world' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='world', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Tokenization completed with result=1 'export'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'export' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  30: ‚úÖ‚ö†Ô∏è  export HELLO-=123 
mini error = ( 'export HELLO-=123' 'e' Handling regular token 'x' Handling regular token 'p' Handling regular token 'o' Handling regular token 'r' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='export' Created node with args[0]='export' 'export'] -> NULL Position update indicated, continuing 'H' Handling regular token 'E' Handling regular token 'L' Handling regular token 'L' Handling regular token 'O' Handling regular token '-' Handling regular token '=' Handling regular token '1' Handling regular token '2' Handling regular token '3' Handling regular token Creating token type=ARGS, content='HELLO-=123' Created node with args[0]='HELLO-=123' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='HELLO-=123', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Tokenization completed with result=1 'export'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'export' Redirection AST build complete No redirection root created Using first command as AST root not a valid identifier)
bash error = ( not a valid identifier)
Test  31: ‚úÖ‚ö†Ô∏è  export = 
mini error = ( 'export =' 'e' Handling regular token 'x' Handling regular token 'p' Handling regular token 'o' Handling regular token 'r' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='export' Created node with args[0]='export' 'export'] -> NULL Position update indicated, continuing '=' Handling regular token Creating token type=ARGS, content='=' Created node with args[0]='=' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='=', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Tokenization completed with result=1 'export'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'export' Redirection AST build complete No redirection root created Using first command as AST root not a valid identifier)
bash error = ( not a valid identifier)
Test  32: ‚úÖ‚ö†Ô∏è  export 123 
mini error = ( 'export 123' 'e' Handling regular token 'x' Handling regular token 'p' Handling regular token 'o' Handling regular token 'r' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='export' Created node with args[0]='export' 'export'] -> NULL Position update indicated, continuing '1' Handling regular token '2' Handling regular token '3' Handling regular token Creating token type=ARGS, content='123' Created node with args[0]='123' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='123', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Tokenization completed with result=1 'export'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'export' Redirection AST build complete No redirection root created Using first command as AST root not a valid identifier)
bash error = ( not a valid identifier)
Test  33: ‚úÖ‚ö†Ô∏è  unset 
mini error = ( 'unset' 'u' Handling regular token 'n' Handling regular token 's' Handling regular token 'e' Handling regular token 't' Handling regular token Creating token type=CMD, content='unset' Created node with args[0]='unset' 'unset'] -> NULL Tokenization completed with result=1 'unset'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'unset' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  34: ‚úÖ‚ö†Ô∏è  unset HELLO 
mini error = ( 'unset HELLO' 'u' Handling regular token 'n' Handling regular token 's' Handling regular token 'e' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='unset' Created node with args[0]='unset' 'unset'] -> NULL Position update indicated, continuing 'H' Handling regular token 'E' Handling regular token 'L' Handling regular token 'L' Handling regular token 'O' Handling regular token Creating token type=ARGS, content='HELLO' Created node with args[0]='HELLO' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='HELLO', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'unset'] -> NULL Tokenization completed with result=1 'unset'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'unset' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  35: ‚úÖ‚ö†Ô∏è  unset HELLO1 HELLO2 
mini error = ( 'unset HELLO1 HELLO2' 'u' Handling regular token 'n' Handling regular token 's' Handling regular token 'e' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='unset' Created node with args[0]='unset' 'unset'] -> NULL Position update indicated, continuing 'H' Handling regular token 'E' Handling regular token 'L' Handling regular token 'L' Handling regular token 'O' Handling regular token '1' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='HELLO1' Created node with args[0]='HELLO1' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='HELLO1', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'unset'] -> NULL Position update indicated, continuing 'H' Handling regular token 'E' Handling regular token 'L' Handling regular token 'L' Handling regular token 'O' Handling regular token '2' Handling regular token Creating token type=ARGS, content='HELLO2' Created node with args[0]='HELLO2' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='HELLO2', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'unset'] -> NULL Tokenization completed with result=1 'unset'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'unset' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  36: ‚úÖ‚ö†Ô∏è  unset HOME 
mini error = ( 'unset HOME' 'u' Handling regular token 'n' Handling regular token 's' Handling regular token 'e' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='unset' Created node with args[0]='unset' 'unset'] -> NULL Position update indicated, continuing 'H' Handling regular token 'O' Handling regular token 'M' Handling regular token 'E' Handling regular token Creating token type=ARGS, content='HOME' Created node with args[0]='HOME' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='HOME', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'unset'] -> NULL Tokenization completed with result=1 'unset'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'unset' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  37: ‚úÖ‚ö†Ô∏è  unset PATH 
mini error = ( 'unset PATH' 'u' Handling regular token 'n' Handling regular token 's' Handling regular token 'e' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='unset' Created node with args[0]='unset' 'unset'] -> NULL Position update indicated, continuing 'P' Handling regular token 'A' Handling regular token 'T' Handling regular token 'H' Handling regular token Creating token type=ARGS, content='PATH' Created node with args[0]='PATH' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='PATH', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'unset'] -> NULL Tokenization completed with result=1 'unset'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'unset' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  38: ‚úÖ‚ö†Ô∏è  unset SHELL 
mini error = ( 'unset SHELL' 'u' Handling regular token 'n' Handling regular token 's' Handling regular token 'e' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='unset' Created node with args[0]='unset' 'unset'] -> NULL Position update indicated, continuing 'S' Handling regular token 'H' Handling regular token 'E' Handling regular token 'L' Handling regular token 'L' Handling regular token Creating token type=ARGS, content='SHELL' Created node with args[0]='SHELL' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='SHELL', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'unset'] -> NULL Tokenization completed with result=1 'unset'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'unset' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  39: ‚úÖ‚ö†Ô∏è  cd $PWD 
mini error = ( 'cd $PWD' 'c' Handling regular token 'd' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cd' Created node with args[0]='cd' 'cd'] -> NULL Position update indicated, continuing '$' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='/home/bleow/Coding/Core/minishell/minishell_tester', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'cd'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'cd' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  40: ‚úÖ‚ö†Ô∏è  cd $PWD hi 
mini error = ( 'cd $PWD hi' 'c' Handling regular token 'd' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cd' Created node with args[0]='cd' 'cd'] -> NULL Position update indicated, continuing '$' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='/home/bleow/Coding/Core/minishell/minishell_tester', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'cd'] -> NULL Tokenization completed with result=1 'cd'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'cd' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ( too many arguments)
Test  41: ‚úÖ‚ö†Ô∏è  cd 123123 
mini error = ( 'cd 123123' 'c' Handling regular token 'd' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cd' Created node with args[0]='cd' 'cd'] -> NULL Position update indicated, continuing '1' Handling regular token '2' Handling regular token '3' Handling regular token '1' Handling regular token '2' Handling regular token '3' Handling regular token Creating token type=ARGS, content='123123' Created node with args[0]='123123' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='123123', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'cd'] -> NULL Tokenization completed with result=1 'cd'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'cd' Redirection AST build complete No redirection root created Using first command as AST root No such file or directory)
bash error = ( No such file or directory)
Test  42: ‚úÖ‚ö†Ô∏è  exit 123 
mini error = ( 'exit 123' 'e' Handling regular token 'x' Handling regular token 'i' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='exit' Created node with args[0]='exit' 'exit'] -> NULL Position update indicated, continuing '1' Handling regular token '2' Handling regular token '3' Handling regular token Creating token type=ARGS, content='123' Created node with args[0]='123' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='123', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'exit'] -> NULL Tokenization completed with result=1 'exit'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'exit' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  43: ‚úÖ‚ö†Ô∏è  exit 298 
mini error = ( 'exit 298' 'e' Handling regular token 'x' Handling regular token 'i' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='exit' Created node with args[0]='exit' 'exit'] -> NULL Position update indicated, continuing '2' Handling regular token '9' Handling regular token '8' Handling regular token Creating token type=ARGS, content='298' Created node with args[0]='298' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='298', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'exit'] -> NULL Tokenization completed with result=1 'exit'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'exit' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  44: ‚úÖ‚ö†Ô∏è  exit +100 
mini error = ( 'exit +100' 'e' Handling regular token 'x' Handling regular token 'i' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='exit' Created node with args[0]='exit' 'exit'] -> NULL Position update indicated, continuing '+' Handling regular token '1' Handling regular token '0' Handling regular token '0' Handling regular token Creating token type=ARGS, content='+100' Created node with args[0]='+100' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='+100', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'exit'] -> NULL Tokenization completed with result=1 'exit'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'exit' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  45: ‚úÖ‚ö†Ô∏è  exit "+100" 
mini error = ( 'exit "+100"' 'e' Handling regular token 'x' Handling regular token 'i' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='exit' Created node with args[0]='exit' 'exit'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='+100', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'exit'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'exit' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  46: ‚úÖ‚ö†Ô∏è  exit +"100" 
mini error = ( 'exit +"100"' 'e' Handling regular token 'x' Handling regular token 'i' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='exit' Created node with args[0]='exit' 'exit'] -> NULL Position update indicated, continuing '+' Handling regular token '"' Handling regular token Creating token type=ARGS, content='+' Created node with args[0]='+' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='+', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'exit'] -> NULL Position update indicated, continuing Tokenization completed with result=1 'exit'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'exit' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  47: ‚úÖ‚ö†Ô∏è  exit -100 
mini error = ( 'exit -100' 'e' Handling regular token 'x' Handling regular token 'i' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='exit' Created node with args[0]='exit' 'exit'] -> NULL Position update indicated, continuing '-' Handling regular token '1' Handling regular token '0' Handling regular token '0' Handling regular token Creating token type=ARGS, content='-100' Created node with args[0]='-100' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='-100', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'exit'] -> NULL Tokenization completed with result=1 'exit'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'exit' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  48: ‚úÖ‚ö†Ô∏è  exit "-100" 
mini error = ( 'exit "-100"' 'e' Handling regular token 'x' Handling regular token 'i' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='exit' Created node with args[0]='exit' 'exit'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='-100', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'exit'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'exit' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  49: ‚úÖ‚ö†Ô∏è  exit -"100" 
mini error = ( 'exit -"100"' 'e' Handling regular token 'x' Handling regular token 'i' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='exit' Created node with args[0]='exit' 'exit'] -> NULL Position update indicated, continuing '-' Handling regular token '"' Handling regular token Creating token type=ARGS, content='-' Created node with args[0]='-' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='-', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'exit'] -> NULL Position update indicated, continuing Tokenization completed with result=1 'exit'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'exit' Redirection AST build complete No redirection root created Using first command as AST root)
bash error = ()
Test  50: ‚úÖ‚ö†Ô∏è  exit hello 
mini error = ( 'exit hello' 'e' Handling regular token 'x' Handling regular token 'i' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='exit' Created node with args[0]='exit' 'exit'] -> NULL Position update indicated, continuing 'h' Handling regular token 'e' Handling regular token 'l' Handling regular token 'l' Handling regular token 'o' Handling regular token Creating token type=ARGS, content='hello' Created node with args[0]='hello' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hello', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'exit'] -> NULL Tokenization completed with result=1 'exit'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'exit' Redirection AST build complete No redirection root created Using first command as AST root numeric argument required)
bash error = ( numeric argument required)
Test  51: ‚úÖ‚ö†Ô∏è  exit 42 world 
mini error = ( 'exit 42 world' 'e' Handling regular token 'x' Handling regular token 'i' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='exit' Created node with args[0]='exit' 'exit'] -> NULL Position update indicated, continuing '4' Handling regular token '2' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='42' Created node with args[0]='42' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='42', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'exit'] -> NULL Position update indicated, continuing 'w' Handling regular token 'o' Handling regular token 'r' Handling regular token 'l' Handling regular token 'd' Handling regular token Creating token type=ARGS, content='world' Created node with args[0]='world' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='world', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'exit'] -> NULL Tokenization completed with result=1 'exit'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST 'exit' Redirection AST build complete No redirection root created Using first command as AST root too many arguments)
bash error = ( too many arguments)
Test  52: ‚úÖ  
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî pipes
Test  53: ‚úÖ‚ö†Ô∏è  env | sort | grep -v SHLVL | grep -v ^_ 
mini error = ( 'env | sort | grep -v SHLVL | grep -v ^_' 'e' Handling regular token 'n' Handling regular token 'v' Handling regular token ' ' Handling regular token Creating token type=CMD, content='env' Created node with args[0]='env' 'env'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 4, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 's' Handling regular token 'o' Handling regular token 'r' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='sort' Created node with args[0]='sort' 'sort'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 11, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'g' Handling regular token 'r' Handling regular token 'e' Handling regular token 'p' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='grep' Created node with args[0]='grep' 'grep'] -> NULL Position update indicated, continuing '-' Handling regular token 'v' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='-v' Created node with args[0]='-v' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x561068b43210, next=(nil) Adding arg='-v', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x561068b43210, next=(nil) Successfully appended argument 'grep'] -> NULL Position update indicated, continuing 'S' Handling regular token 'H' Handling regular token 'L' Handling regular token 'V' Handling regular token 'L' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='SHLVL' Created node with args[0]='SHLVL' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x561068b43210, next=(nil) Adding arg='SHLVL', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x561068b43210, next=(nil) Successfully appended argument 'grep'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 27, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'g' Handling regular token 'r' Handling regular token 'e' Handling regular token 'p' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='grep' Created node with args[0]='grep' 'grep'] -> NULL Position update indicated, continuing '-' Handling regular token 'v' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='-v' Created node with args[0]='-v' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x561068b433b0, next=(nil) Adding arg='-v', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x561068b433b0, next=(nil) Successfully appended argument 'grep'] -> NULL Position update indicated, continuing '^' Handling regular token '_' Handling regular token Creating token type=ARGS, content='^_' Created node with args[0]='^_' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x561068b433b0, next=(nil) Adding arg='^_', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x561068b433b0, next=(nil) Successfully appended argument 'grep'] -> NULL Tokenization completed with result=1 'grep'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x561068b43070 left=(nil), right=(nil), redir=(nil), prev=0x561068b273e0, next=0x561068b43140 left=(nil), right=(nil), redir=(nil), prev=0x561068b43070, next=0x561068b43210 left=(nil), right=(nil), redir=(nil), prev=0x561068b43140, next=0x561068b432e0 left=(nil), right=(nil), redir=(nil), prev=0x561068b43210, next=0x561068b433b0 left=(nil), right=(nil), redir=(nil), prev=0x561068b432e0, next=0x561068b435e0 left=(nil), right=(nil), redir=(nil), prev=0x561068b433b0, next=(nil) Found 4 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x561068b43070 left=(nil), right=(nil), redir=(nil), prev=0x561068b43070, next=0x561068b43210 left=(nil), right=(nil), redir=(nil), prev=0x561068b43210, next=0x561068b433b0 left=(nil), right=(nil), redir=(nil), prev=0x561068b433b0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x561068b273e0, next=0x561068b43140 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x561068b43070 left=(nil), right=(nil), redir=(nil), prev=0x561068b43210, next=0x561068b433b0 left=0x561068b273e0, right=0x561068b432e0, redir=(nil), prev=0x561068b273e0, next=0x561068b43140 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x561068b43140, next=0x561068b432e0 left=(nil), right=(nil), redir=(nil), prev=0x561068b43070, next=0x561068b43210 left=(nil), right=(nil), redir=(nil), prev=0x561068b433b0, next=(nil) left=0x561068b43140, right=0x561068b435e0, redir=(nil), prev=0x561068b43140, next=0x561068b432e0 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x561068b432e0, next=0x561068b435e0 left=(nil), right=(nil), redir=(nil), prev=0x561068b43210, next=0x561068b433b0 left=(nil), right=(nil), redir=(nil), prev=0x561068b433b0, next=(nil) left=0x561068b432e0, right=0x561068b435e0, redir=(nil), prev=0x561068b432e0, next=0x561068b435e0 left=0x561068b273e0, right=0x561068b43210, redir=(nil), prev=0x561068b273e0, next=0x561068b43140 Building redirection AST 'env' 'sort' 'grep' 'grep' Redirection AST build complete No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x561068b273e0, right=0x561068b43210, redir=(nil), prev=0x561068b273e0, next=0x561068b43140 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x561068b43070 left=0x561068b43140, right=0x561068b433b0, redir=(nil), prev=0x561068b43140, next=0x561068b432e0 Created left child with pid=793148 Created right child with pid=793149 Parent closing pipe ends Waiting for left child (pid=793148) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x561068b43070 [0]='env' None Left stdout redirected to pipe write end ===== RIGHT PIPE EXECUTION DETAILS ===== Type=|, Args=['env' '|' left=0x561068b43140, right=0x561068b433b0, redir=(nil), prev=0x561068b43140, next=0x561068b432e0 [0]='|' None Stdin redirected from pipe read end '|' ===== PIPE EXECUTION DETAILS ===== 0 left=0x561068b43140, right=0x561068b433b0, redir=(nil), prev=0x561068b43140, next=0x561068b432e0 left=(nil), right=(nil), redir=(nil), prev=0x561068b43070, next=0x561068b43210 left=0x561068b432e0, right=0x561068b435e0, redir=(nil), prev=0x561068b432e0, next=0x561068b435e0 Created left child with pid=793150 Created right child with pid=793151 Parent closing pipe ends Waiting for left child (pid=793150) Left child exited with status 0 Waiting for right child (pid=793149) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x561068b43070, next=0x561068b43210 [0]='sort' None Left stdout redirected to pipe write end 'sort' ===== RIGHT PIPE EXECUTION DETAILS ===== left=0x561068b432e0, right=0x561068b435e0, redir=(nil), prev=0x561068b432e0, next=0x561068b435e0 [0]='|' None Stdin redirected from pipe read end '|' ===== PIPE EXECUTION DETAILS ===== left=0x561068b432e0, right=0x561068b435e0, redir=(nil), prev=0x561068b432e0, next=0x561068b435e0 left=(nil), right=(nil), redir=(nil), prev=0x561068b43210, next=0x561068b433b0 left=(nil), right=(nil), redir=(nil), prev=0x561068b433b0, next=(nil) Created left child with pid=793153 Created right child with pid=793154 Parent closing pipe ends Waiting for left child (pid=793153) ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x561068b433b0, next=(nil) [0]='grep' [1]='-v' [2]='^_' None Stdin redirected from pipe read end 'grep' '-v' '^_' 0 Left child exited with status 0 Waiting for right child (pid=793151) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x561068b43210, next=0x561068b433b0 [0]='grep' [1]='-v' [2]='SHLVL' None Left stdout redirected to pipe write end 'grep' '-v' 'SHLVL' 0 Left child exited with status 0 Waiting for right child (pid=793154) 0 Right child exited with status 0 Pipe execution complete, returning status 0 0 Right child exited with status 0 Pipe execution complete, returning status 0 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  54: ‚úÖ‚ö†Ô∏è  cat ./test_files/infile_big | grep oi 
mini error = ( 'cat ./test_files/infile_big | grep oi' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '.' Handling regular token '/' Handling regular token 't' Handling regular token 'e' Handling regular token 's' Handling regular token 't' Handling regular token '_' Handling regular token 'f' Handling regular token 'i' Handling regular token 'l' Handling regular token 'e' Handling regular token 's' Handling regular token '/' Handling regular token 'i' Handling regular token 'n' Handling regular token 'f' Handling regular token 'i' Handling regular token 'l' Handling regular token 'e' Handling regular token '_' Handling regular token 'b' Handling regular token 'i' Handling regular token 'g' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='./test_files/infile_big' Created node with args[0]='./test_files/infile_big' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='./test_files/infile_big', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'cat'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 28, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'g' Handling regular token 'r' Handling regular token 'e' Handling regular token 'p' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='grep' Created node with args[0]='grep' 'grep'] -> NULL Position update indicated, continuing 'o' Handling regular token 'i' Handling regular token Creating token type=ARGS, content='oi' Created node with args[0]='oi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x64b612a895e0, next=(nil) Adding arg='oi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x64b612a895e0, next=(nil) Successfully appended argument 'grep'] -> NULL Tokenization completed with result=1 'grep'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64b612a895e0 left=(nil), right=(nil), redir=(nil), prev=0x64b612a6d950, next=0x64b612a89810 left=(nil), right=(nil), redir=(nil), prev=0x64b612a895e0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64b612a895e0 left=(nil), right=(nil), redir=(nil), prev=0x64b612a895e0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x64b612a6d950, next=0x64b612a89810 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64b612a895e0 left=(nil), right=(nil), redir=(nil), prev=0x64b612a895e0, next=(nil) left=0x64b612a6d950, right=0x64b612a89810, redir=(nil), prev=0x64b612a6d950, next=0x64b612a89810 left=0x64b612a6d950, right=0x64b612a89810, redir=(nil), prev=0x64b612a6d950, next=0x64b612a89810 Building redirection AST 'cat' 'grep' Redirection AST build complete No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x64b612a6d950, right=0x64b612a89810, redir=(nil), prev=0x64b612a6d950, next=0x64b612a89810 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64b612a895e0 left=(nil), right=(nil), redir=(nil), prev=0x64b612a895e0, next=(nil) Created left child with pid=793209 ===== LEFT PIPE EXECUTION DETAILS ===== Created right child with pid=793210 Parent closing pipe ends Waiting for left child (pid=793209) left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64b612a895e0 [0]='cat' [1]='./test_files/infile_big' None Left stdout redirected to pipe write end 'cat' './test_files/infile_big' ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x64b612a895e0, next=(nil) [0]='grep' [1]='oi' None Stdin redirected from pipe read end 'grep' 'oi' 0 Left child exited with status 0 Waiting for right child (pid=793210) 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  55: ‚úÖ‚ö†Ô∏è  cat minishell.h | grep ");"$ 
mini error = ( 'cat minishell.h | grep ");"$' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing 'm' Handling regular token 'i' Handling regular token 'n' Handling regular token 'i' Handling regular token 's' Handling regular token 'h' Handling regular token 'e' Handling regular token 'l' Handling regular token 'l' Handling regular token '.' Handling regular token 'h' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='minishell.h' Created node with args[0]='minishell.h' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='minishell.h', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'cat'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 16, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'g' Handling regular token 'r' Handling regular token 'e' Handling regular token 'p' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='grep' Created node with args[0]='grep' 'grep'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5682e7c26af0, next=(nil) Adding arg=');', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5682e7c26af0, next=(nil) Successfully appended argument Position update indicated, continuing '$' Handling regular token Position update indicated, continuing Creating token type=$, content='$' Created node with args[0]='$' '$'] -> NULL Tokenization completed with result=1 '$'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5682e7c26af0 left=(nil), right=(nil), redir=(nil), prev=0x5682e7c0ae60, next=0x5682e7c26cc0 left=(nil), right=(nil), redir=(nil), prev=0x5682e7c26af0, next=0x5682e7c26df0 left=(nil), right=(nil), redir=(nil), prev=0x5682e7c26cc0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5682e7c26af0 left=(nil), right=(nil), redir=(nil), prev=0x5682e7c26af0, next=0x5682e7c26df0 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5682e7c0ae60, next=0x5682e7c26cc0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5682e7c26af0 left=(nil), right=(nil), redir=(nil), prev=0x5682e7c26af0, next=0x5682e7c26df0 left=0x5682e7c0ae60, right=0x5682e7c26cc0, redir=(nil), prev=0x5682e7c0ae60, next=0x5682e7c26cc0 left=0x5682e7c0ae60, right=0x5682e7c26cc0, redir=(nil), prev=0x5682e7c0ae60, next=0x5682e7c26cc0 Building redirection AST 'cat' 'grep' Redirection AST build complete No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5682e7c0ae60, right=0x5682e7c26cc0, redir=(nil), prev=0x5682e7c0ae60, next=0x5682e7c26cc0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5682e7c26af0 left=(nil), right=(nil), redir=(nil), prev=0x5682e7c26af0, next=0x5682e7c26df0 Created left child with pid=793261 Created right child with pid=793262 Parent closing pipe ends Waiting for left child (pid=793261) ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5682e7c26af0, next=0x5682e7c26df0 [0]='grep' [1]=');$' None Stdin redirected from pipe read end 'grep' ');$' ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5682e7c26af0 [0]='cat' [1]='minishell.h' None Left stdout redirected to pipe write end 'cat' 'minishell.h' No such file or directory 1 Left child exited with status 256 Waiting for right child (pid=793262) 1 Right child exited with status 256 Pipe execution complete, returning status 1)
bash error = ( No such file or directory)
Test  56: ‚úÖ‚ö†Ô∏è  export GHOST=123 | env | grep GHOST 
mini error = ( 'export GHOST=123 | env | grep GHOST' 'e' Handling regular token 'x' Handling regular token 'p' Handling regular token 'o' Handling regular token 'r' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='export' Created node with args[0]='export' 'export'] -> NULL Position update indicated, continuing 'G' Handling regular token 'H' Handling regular token 'O' Handling regular token 'S' Handling regular token 'T' Handling regular token '=' Handling regular token '1' Handling regular token '2' Handling regular token '3' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='GHOST=123' Created node with args[0]='GHOST=123' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='GHOST=123', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'export'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 17, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'n' Handling regular token 'v' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='env' Created node with args[0]='env' 'env'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 23, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'g' Handling regular token 'r' Handling regular token 'e' Handling regular token 'p' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='grep' Created node with args[0]='grep' 'grep'] -> NULL Position update indicated, continuing 'G' Handling regular token 'H' Handling regular token 'O' Handling regular token 'S' Handling regular token 'T' Handling regular token Creating token type=ARGS, content='GHOST' Created node with args[0]='GHOST' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x64964496e4c0, next=(nil) Adding arg='GHOST', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x64964496e4c0, next=(nil) Successfully appended argument 'grep'] -> NULL Tokenization completed with result=1 'grep'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64964496e250 left=(nil), right=(nil), redir=(nil), prev=0x6496449525b0, next=0x64964496e410 left=(nil), right=(nil), redir=(nil), prev=0x64964496e250, next=0x64964496e4c0 left=(nil), right=(nil), redir=(nil), prev=0x64964496e410, next=0x64964496e590 left=(nil), right=(nil), redir=(nil), prev=0x64964496e4c0, next=(nil) Found 3 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64964496e250 left=(nil), right=(nil), redir=(nil), prev=0x64964496e250, next=0x64964496e4c0 left=(nil), right=(nil), redir=(nil), prev=0x64964496e4c0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x6496449525b0, next=0x64964496e410 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64964496e250 left=(nil), right=(nil), redir=(nil), prev=0x64964496e4c0, next=(nil) left=0x6496449525b0, right=0x64964496e590, redir=(nil), prev=0x6496449525b0, next=0x64964496e410 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x64964496e410, next=0x64964496e590 left=(nil), right=(nil), redir=(nil), prev=0x64964496e250, next=0x64964496e4c0 left=(nil), right=(nil), redir=(nil), prev=0x64964496e4c0, next=(nil) left=0x64964496e410, right=0x64964496e590, redir=(nil), prev=0x64964496e410, next=0x64964496e590 left=0x6496449525b0, right=0x64964496e4c0, redir=(nil), prev=0x6496449525b0, next=0x64964496e410 Building redirection AST 'export' 'env' 'grep' Redirection AST build complete No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x6496449525b0, right=0x64964496e4c0, redir=(nil), prev=0x6496449525b0, next=0x64964496e410 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64964496e250 left=0x64964496e410, right=0x64964496e590, redir=(nil), prev=0x64964496e410, next=0x64964496e590 Created left child with pid=793315 Created right child with pid=793316 Parent closing pipe ends Waiting for left child (pid=793315) ===== RIGHT PIPE EXECUTION DETAILS ===== left=0x64964496e410, right=0x64964496e590, redir=(nil), prev=0x64964496e410, next=0x64964496e590 [0]='|' None Stdin redirected from pipe read end '|' ===== PIPE EXECUTION DETAILS ===== left=0x64964496e410, right=0x64964496e590, redir=(nil), prev=0x64964496e410, next=0x64964496e590 left=(nil), right=(nil), redir=(nil), prev=0x64964496e250, next=0x64964496e4c0 left=(nil), right=(nil), redir=(nil), prev=0x64964496e4c0, next=(nil) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x64964496e250 [0]='export' [1]='GHOST=123' None Left stdout redirected to pipe write end 'export' 'GHOST=123' 0 Created left child with pid=793317 Created right child with pid=793318 Parent closing pipe ends Waiting for left child (pid=793317) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x64964496e250, next=0x64964496e4c0 [0]='env' None Left stdout redirected to pipe write end 'env' 0 Left child exited with status 0 Waiting for right child (pid=793316) Left child exited with status 0 Waiting for right child (pid=793318) ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x64964496e4c0, next=(nil) [0]='grep' [1]='GHOST' None Stdin redirected from pipe read end 'grep' 'GHOST' 1 Right child exited with status 256 Pipe execution complete, returning status 1 1 Right child exited with status 256 Pipe execution complete, returning status 1)
bash error = ()
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî redirects
Test  57: ‚ùå grep hi <./test_files/infile 
mini output = ()
bash output = (hi)
mini exit code =
bash exit code = 0
mini error = ( 'grep hi <./test_files/infile' 'g' Handling regular token 'r' Handling regular token 'e' Handling regular token 'p' Handling regular token ' ' Handling regular token Creating token type=CMD, content='grep' Created node with args[0]='grep' 'grep'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'grep'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 8, type=< Handling redirection type=< Handling redirection token at pos 8 '<' Looking for filename at position 9 Processing filename at pos 9 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Extracted non-quoted filename from pos 9 to 27 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x61f700cb7b40 left=(nil), right=(nil), redir=(nil), prev=0x61f700cb7a70, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x61f700cb7b40 No pipe root created Building redirection AST 'grep' '<' with filename './test_files/infile' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test  58: ‚úÖ‚ö†Ô∏è  grep hi "<infile" <         ./test_files/infile 
mini error = ( 'grep hi "<infile" < ./test_files/infile' 'g' Handling regular token 'r' Handling regular token 'e' Handling regular token 'p' Handling regular token ' ' Handling regular token Creating token type=CMD, content='grep' Created node with args[0]='grep' 'grep'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'grep'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='<infile', quote_type=5 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument Position update indicated, continuing ' ' Handling regular token Creating token type=", content='"<infile"' Created node with args[0]='"<infile"' '"<infile"'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 18, type=< Handling redirection type=< Handling redirection token at pos 18 '<' Looking for filename at position 19 Processing filename at pos 19 Skipping whitespace ' ' at pos 19 Skipping whitespace ' ' at pos 20 Skipping whitespace ' ' at pos 21 Skipping whitespace ' ' at pos 22 Skipping whitespace ' ' at pos 23 Skipping whitespace ' ' at pos 24 Skipping whitespace ' ' at pos 25 Skipping whitespace ' ' at pos 26 Skipping whitespace ' ' at pos 27 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Extracted non-quoted filename from pos 28 to 46 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x57d85aa80430 left=(nil), right=(nil), redir=(nil), prev=0x57d85aa80360, next=0x57d85aa805f0 left=(nil), right=(nil), redir=(nil), prev=0x57d85aa80430, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x57d85aa80430 No pipe root created Building redirection AST 'grep' '<' with filename './test_files/infile' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root No such file or directory)
bash error = ( No such file or directory)
Test  59: ‚úÖ‚ö†Ô∏è  echo hi < ./test_files/infile bye bye 
mini error = ( 'echo hi < ./test_files/infile bye bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 8, type=< Handling redirection type=< Handling redirection token at pos 8 '<' Looking for filename at position 9 Processing filename at pos 9 Skipping whitespace ' ' at pos 9 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Extracted non-quoted filename from pos 10 to 28 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'bye'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'bye'] -> NULL Tokenization completed with result=1 'bye'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b56bc1bac70 left=(nil), right=(nil), redir=(nil), prev=0x5b56bc19efe0, next=0x5b56bc1bae00 left=(nil), right=(nil), redir=(nil), prev=0x5b56bc1bac70, next=0x5b56bc1bae70 left=(nil), right=(nil), redir=(nil), prev=0x5b56bc1bae00, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b56bc1bac70 No pipe root created Building redirection AST 'echo' '<' with filename './test_files/infile' Processing redirection type=<, filename='./test_files/infile' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection './test_files/infile' Found argument 'bye' to add to command 'echo' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b56bc1bac70 Adding arg='bye', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b56bc1bac70 Successfully appended argument Found argument 'bye' to add to command 'echo' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b56bc1bac70 Adding arg='bye', quote_type=0 3 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b56bc1bac70 Successfully appended argument Finished collecting args for command 'echo' Set redir_root to redirection with filename './test_files/infile' Redirection AST build complete left=0x5b56bc19efe0, right=(nil), redir=(nil), prev=0x5b56bc19efe0, next=0x5b56bc1bae00 Using redir_root as AST root './test_files/infile' ===== REDIRECTION CHAIN START ===== echo (pid=793442) < [./test_files/infile] stdin=0, stdout=1, stderr=2 './test_files/infile' Current redirection_fd=-1, out_mode=0 ===== SETUP REDIRECTION START ===== Redirection type=<, file='./test_files/infile' Initial redirection_fd=-1, out_mode=0 stdin=0, stdout=1, stderr=2 Target command is 'echo' Updating last_in_redir './test_files/infile' (len=19) No matching outer quotes found ===== INPUT REDIRECTION START ===== './test_files/infile' stdin=0, redirection_fd=-1 Checking file access for './test_files/infile' './test_files/infile' File './test_files/infile' exists and is accessible ===== SETUP INPUT FILE START ===== './test_files/infile' stdin=0, redirection_fd=-1 Opening file './test_files/infile' Opened file with fd=5 Redirecting stdin to fd 5 stdin=0, redirection_fd=5 ===== SETUP INPUT FILE END (SUCCESS) ===== stdin=0, redirection_fd=5 ===== INPUT REDIRECTION END (SUCCESS) ===== Final redirection_fd=5, out_mode=0 stdin=0, stdout=1, stderr=2 ===== SETUP REDIRECTION END (SUCCESS) ===== (nil) stdin=0, stdout=1, stderr=2 Chain completed successfully ===== REDIRECTION CHAIN END =====)
bash error = ()
Test  60: ‚ùå grep hi <./test_files/infile_big <./test_files/infile 
mini output = ()
bash output = (hi)
mini exit code =
bash exit code = 0
mini error = ( 'grep hi <./test_files/infile_big <./test_files/infile' 'g' Handling regular token 'r' Handling regular token 'e' Handling regular token 'p' Handling regular token ' ' Handling regular token Creating token type=CMD, content='grep' Created node with args[0]='grep' 'grep'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'grep'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 8, type=< Handling redirection type=< Handling redirection token at pos 8 '<' Looking for filename at position 9 Processing filename at pos 9 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' '_' 'b' 'i' 'g' Extracted non-quoted filename from pos 9 to 31 './test_files/infile_big' '<' './test_files/infile_big' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile_big' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 33, type=< Handling redirection type=< Handling redirection token at pos 33 '<' Looking for filename at position 34 Processing filename at pos 34 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Extracted non-quoted filename from pos 34 to 52 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile_big' Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b8075fdfb60 left=(nil), right=(nil), redir=(nil), prev=0x5b8075fdfa90, next=0x5b8075fdfcf0 left=(nil), right=(nil), redir=(nil), prev=0x5b8075fdfb60, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b8075fdfb60 No pipe root created Building redirection AST 'grep' '<' with filename './test_files/infile_big' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test  61: ‚úÖ‚ö†Ô∏è  echo <"./test_files/infile" "bonjour       42" 
mini error = ( 'echo <"./test_files/infile" "bonjour 42"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 5, type=< Handling redirection type=< Handling redirection token at pos 5 '<' Looking for filename at position 6 Processing filename at pos 6 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 26 Extracted quoted filename from pos 7 to 25 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x65512b3daba0 Adding arg='bonjour 42', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x65512b3daba0 Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x65512b3daba0 left=(nil), right=(nil), redir=(nil), prev=0x65512b3daad0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x65512b3daba0 No pipe root created Building redirection AST 'echo' '<' with filename './test_files/infile' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test  62: ‚ùå cat <"./test_files/file name with spaces" 
mini output = ()
bash output = (üòà üòà üòà This will break your minishell üòà üòà üòà)
mini exit code =
bash exit code = 0
mini error = ( 'cat <"./test_files/file name with spaces"' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'f' 'i' 'l' 'e' ' ' 'n' 'a' 'm' 'e' ' ' 'w' 'i' 't' 'h' ' ' 's' 'p' 'a' 'c' 'e' 's' Found closing " quote at pos 40 Extracted quoted filename from pos 6 to 39 './test_files/file name with spaces' '<' './test_files/file name with spaces' Redirection token handled successfully Redirection operator='<', filename='./test_files/file name with spaces' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/file name with spaces'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/file name with spaces' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x63be14d97190 left=(nil), right=(nil), redir=(nil), prev=0x63be14d970c0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x63be14d97190 No pipe root created Building redirection AST 'cat' '<' with filename './test_files/file name with spaces' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test  63: ‚úÖ‚ö†Ô∏è  cat <./test_files/infile_big ./test_files/infile 
mini error = ( 'cat <./test_files/infile_big ./test_files/infile' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' '_' 'b' 'i' 'g' Extracted non-quoted filename from pos 5 to 27 './test_files/infile_big' '<' './test_files/infile_big' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile_big' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '.' Handling regular token '/' Handling regular token 't' Handling regular token 'e' Handling regular token 's' Handling regular token 't' Handling regular token '_' Handling regular token 'f' Handling regular token 'i' Handling regular token 'l' Handling regular token 'e' Handling regular token 's' Handling regular token '/' Handling regular token 'i' Handling regular token 'n' Handling regular token 'f' Handling regular token 'i' Handling regular token 'l' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='./test_files/infile' Created node with args[0]='./test_files/infile' './test_files/infile'] -> NULL Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile_big' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x615a4d1767b0 left=(nil), right=(nil), redir=(nil), prev=0x615a4d1766e0, next=0x615a4d176880 left=(nil), right=(nil), redir=(nil), prev=0x615a4d1767b0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x615a4d1767b0 No pipe root created Building redirection AST 'cat' '<' with filename './test_files/infile_big' Processing redirection type=<, filename='./test_files/infile_big' Target command is 'cat' Set left pointer to command 'cat' Linking previous redirections for command 'cat' Checking for args after redirection './test_files/infile_big' Found argument './test_files/infile' to add to command 'cat' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x615a4d1767b0 Adding arg='./test_files/infile', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x615a4d1767b0 Successfully appended argument Finished collecting args for command 'cat' Set redir_root to redirection with filename './test_files/infile_big' Redirection AST build complete left=0x615a4d1766e0, right=(nil), redir=(nil), prev=0x615a4d1766e0, next=0x615a4d176880 Using redir_root as AST root './test_files/infile_big' ===== REDIRECTION CHAIN START ===== cat (pid=793598) < [./test_files/infile_big] stdin=0, stdout=1, stderr=2 './test_files/infile_big' Current redirection_fd=-1, out_mode=0 ===== SETUP REDIRECTION START ===== Redirection type=<, file='./test_files/infile_big' Initial redirection_fd=-1, out_mode=0 stdin=0, stdout=1, stderr=2 Target command is 'cat' Updating last_in_redir './test_files/infile_big' (len=23) No matching outer quotes found ===== INPUT REDIRECTION START ===== './test_files/infile_big' stdin=0, redirection_fd=-1 Checking file access for './test_files/infile_big' './test_files/infile_big' File './test_files/infile_big' exists and is accessible ===== SETUP INPUT FILE START ===== './test_files/infile_big' stdin=0, redirection_fd=-1 Opening file './test_files/infile_big' Opened file with fd=5 Redirecting stdin to fd 5 stdin=0, redirection_fd=5 ===== SETUP INPUT FILE END (SUCCESS) ===== stdin=0, redirection_fd=5 ===== INPUT REDIRECTION END (SUCCESS) ===== Final redirection_fd=5, out_mode=0 stdin=0, stdout=1, stderr=2 ===== SETUP REDIRECTION END (SUCCESS) ===== (nil) stdin=0, stdout=1, stderr=2 Chain completed successfully ===== REDIRECTION CHAIN END =====)
bash error = ()
Test  64: ‚ùå cat <"1""2""3""4""5" 
mini exit code =
bash exit code = 1
mini error = ( 'cat <"1""2""3""4""5"' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 '"' Found opening " quote '1' Found closing " quote at pos 7 Extracted quoted filename from pos 6 to 6 '1' '<' '1' Redirection token handled successfully Redirection operator='<', filename='1' handle_redirection_token returned 1 Position update indicated, continuing '"' Handling regular token Position update indicated, continuing '"' Handling regular token Position update indicated, continuing '"' Handling regular token Position update indicated, continuing '"' Handling regular token Position update indicated, continuing Tokenization completed with result=1 '12345'] -> NULL Validating redirection targets Checking redirection node type=<, filename='12345' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x55dca8834a20 left=(nil), right=(nil), redir=(nil), prev=0x55dca8818d90, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x55dca8834a20 No pipe root created Building redirection AST 'cat' '<' with filename '12345' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( No such file or directory)
Test  65: ‚ùå echo <"./test_files/infile" <missing <"./test_files/infile" 
mini exit code = 0
bash exit code = 1
mini error = ( 'echo <"./test_files/infile" <missing <"./test_files/infile"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 5, type=< Handling redirection type=< Handling redirection token at pos 5 '<' Looking for filename at position 6 Processing filename at pos 6 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 26 Extracted quoted filename from pos 7 to 25 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 28, type=< Handling redirection type=< Handling redirection token at pos 28 '<' Looking for filename at position 29 Processing filename at pos 29 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 29 to 35 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 37, type=< Handling redirection type=< Handling redirection token at pos 37 '<' Looking for filename at position 38 Processing filename at pos 38 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 58 Extracted quoted filename from pos 39 to 57 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile' Checking redirection node type=<, filename='missing' Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x640d214e7460 left=(nil), right=(nil), redir=(nil), prev=0x640d214e7390, next=0x640d214e7510 left=(nil), right=(nil), redir=(nil), prev=0x640d214e7460, next=0x640d214e75e0 left=(nil), right=(nil), redir=(nil), prev=0x640d214e7510, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x640d214e7460 No pipe root created Building redirection AST 'echo' '<' with filename './test_files/infile' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( No such file or directory)
Test  66: ‚ùå echo <missing <"./test_files/infile" <missing 
mini exit code = 0
bash exit code = 1
mini error = ( 'echo <missing <"./test_files/infile" <missing' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 5, type=< Handling redirection type=< Handling redirection token at pos 5 '<' Looking for filename at position 6 Processing filename at pos 6 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 6 to 12 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 14, type=< Handling redirection type=< Handling redirection token at pos 14 '<' Looking for filename at position 15 Processing filename at pos 15 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 35 Extracted quoted filename from pos 16 to 34 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 37, type=< Handling redirection type=< Handling redirection token at pos 37 '<' Looking for filename at position 38 Processing filename at pos 38 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 38 to 44 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 'missing'] -> NULL Validating redirection targets Checking redirection node type=<, filename='missing' Checking redirection node type=<, filename='./test_files/infile' Checking redirection node type=<, filename='missing' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f70b1c7d650 left=(nil), right=(nil), redir=(nil), prev=0x5f70b1c7d580, next=0x5f70b1c7d700 left=(nil), right=(nil), redir=(nil), prev=0x5f70b1c7d650, next=0x5f70b1c7d7d0 left=(nil), right=(nil), redir=(nil), prev=0x5f70b1c7d700, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f70b1c7d650 No pipe root created Building redirection AST 'echo' '<' with filename 'missing' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( No such file or directory)
Test  67: ‚ùå cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code =
bash exit code = 0
mini error = ( 'cat <"./test_files/infile"' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 25 Extracted quoted filename from pos 6 to 24 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x560ef4ea63c0 left=(nil), right=(nil), redir=(nil), prev=0x560ef4ea62f0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x560ef4ea63c0 No pipe root created Building redirection AST 'cat' '<' with filename './test_files/infile' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test  68: ‚ùå echo <"./test_files/infile_big" | cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini error = ( 'echo <"./test_files/infile_big" | cat <"./test_files/infile"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 5, type=< Handling redirection type=< Handling redirection token at pos 5 '<' Looking for filename at position 6 Processing filename at pos 6 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' '_' 'b' 'i' 'g' Found closing " quote at pos 30 Extracted quoted filename from pos 7 to 29 './test_files/infile_big' '<' './test_files/infile_big' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile_big' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 32, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 38, type=< Handling redirection type=< Handling redirection token at pos 38 '<' Looking for filename at position 39 Processing filename at pos 39 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 59 Extracted quoted filename from pos 40 to 58 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile_big' Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x623d73b94cb0 left=(nil), right=(nil), redir=(nil), prev=0x623d73b94be0, next=0x623d73b94d60 left=(nil), right=(nil), redir=(nil), prev=0x623d73b94cb0, next=0x623d73b94e50 left=(nil), right=(nil), redir=(nil), prev=0x623d73b94d60, next=0x623d73b94f20 left=(nil), right=(nil), redir=(nil), prev=0x623d73b94e50, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x623d73b94cb0 left=(nil), right=(nil), redir=(nil), prev=0x623d73b94d60, next=0x623d73b94f20 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x623d73b94cb0, next=0x623d73b94e50 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x623d73b94cb0 left=(nil), right=(nil), redir=(nil), prev=0x623d73b94d60, next=0x623d73b94f20 left=0x623d73b94be0, right=0x623d73b94e50, redir=(nil), prev=0x623d73b94cb0, next=0x623d73b94e50 left=0x623d73b94be0, right=0x623d73b94e50, redir=(nil), prev=0x623d73b94cb0, next=0x623d73b94e50 Building redirection AST 'echo' '<' with filename './test_files/infile_big' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x623d73b94be0, right=0x623d73b94e50, redir=(nil), prev=0x623d73b94cb0, next=0x623d73b94e50 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x623d73b94cb0 left=(nil), right=(nil), redir=(nil), prev=0x623d73b94d60, next=0x623d73b94f20 Created left child with pid=793799 Created right child with pid=793800 ===== LEFT PIPE EXECUTION DETAILS ===== Parent closing pipe ends Waiting for left child (pid=793799) left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x623d73b94cb0 [0]='echo' None Left stdout redirected to pipe write end 'echo' 0 ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x623d73b94d60, next=0x623d73b94f20 [0]='cat' None Stdin redirected from pipe read end 'cat' Left child exited with status 0 Waiting for right child (pid=793800) 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  69: ‚úÖ‚ö†Ô∏è  echo <"./test_files/infile_big" | cat "./test_files/infile" 
mini error = ( 'echo <"./test_files/infile_big" | cat "./test_files/infile"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 5, type=< Handling redirection type=< Handling redirection token at pos 5 '<' Looking for filename at position 6 Processing filename at pos 6 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' '_' 'b' 'i' 'g' Found closing " quote at pos 30 Extracted quoted filename from pos 7 to 29 './test_files/infile_big' '<' './test_files/infile_big' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile_big' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 32, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x65023cbd05d0, next=(nil) Adding arg='./test_files/infile', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x65023cbd05d0, next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'cat'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile_big' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x65023cbd0520 left=(nil), right=(nil), redir=(nil), prev=0x65023cbb48a0, next=0x65023cbd05d0 left=(nil), right=(nil), redir=(nil), prev=0x65023cbd0520, next=0x65023cbd06c0 left=(nil), right=(nil), redir=(nil), prev=0x65023cbd05d0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x65023cbd0520 left=(nil), right=(nil), redir=(nil), prev=0x65023cbd05d0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x65023cbd0520, next=0x65023cbd06c0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x65023cbd0520 left=(nil), right=(nil), redir=(nil), prev=0x65023cbd05d0, next=(nil) left=0x65023cbb48a0, right=0x65023cbd06c0, redir=(nil), prev=0x65023cbd0520, next=0x65023cbd06c0 left=0x65023cbb48a0, right=0x65023cbd06c0, redir=(nil), prev=0x65023cbd0520, next=0x65023cbd06c0 Building redirection AST 'echo' '<' with filename './test_files/infile_big' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x65023cbb48a0, right=0x65023cbd06c0, redir=(nil), prev=0x65023cbd0520, next=0x65023cbd06c0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x65023cbd0520 left=(nil), right=(nil), redir=(nil), prev=0x65023cbd05d0, next=(nil) Created left child with pid=793848 Created right child with pid=793849 Parent closing pipe ends Waiting for left child (pid=793848) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x65023cbd0520 [0]='echo' None Left stdout redirected to pipe write end 'echo' 0 ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x65023cbd05d0, next=(nil) [0]='cat' [1]='./test_files/infile' None Stdin redirected from pipe read end 'cat' './test_files/infile' Left child exited with status 0 Waiting for right child (pid=793849) 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  70: ‚úÖ‚ö†Ô∏è  echo <"./test_files/infile_big" | echo <"./test_files/infile" 
mini error = ( 'echo <"./test_files/infile_big" | echo <"./test_files/infile"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 5, type=< Handling redirection type=< Handling redirection token at pos 5 '<' Looking for filename at position 6 Processing filename at pos 6 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' '_' 'b' 'i' 'g' Found closing " quote at pos 30 Extracted quoted filename from pos 7 to 29 './test_files/infile_big' '<' './test_files/infile_big' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile_big' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 32, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 39, type=< Handling redirection type=< Handling redirection token at pos 39 '<' Looking for filename at position 40 Processing filename at pos 40 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 60 Extracted quoted filename from pos 41 to 59 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile_big' Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b8e7108d2f0 left=(nil), right=(nil), redir=(nil), prev=0x5b8e71071660, next=0x5b8e7108d3a0 left=(nil), right=(nil), redir=(nil), prev=0x5b8e7108d2f0, next=0x5b8e7108d490 left=(nil), right=(nil), redir=(nil), prev=0x5b8e7108d3a0, next=0x5b8e7108d560 left=(nil), right=(nil), redir=(nil), prev=0x5b8e7108d490, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b8e7108d2f0 left=(nil), right=(nil), redir=(nil), prev=0x5b8e7108d3a0, next=0x5b8e7108d560 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5b8e7108d2f0, next=0x5b8e7108d490 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b8e7108d2f0 left=(nil), right=(nil), redir=(nil), prev=0x5b8e7108d3a0, next=0x5b8e7108d560 left=0x5b8e71071660, right=0x5b8e7108d490, redir=(nil), prev=0x5b8e7108d2f0, next=0x5b8e7108d490 left=0x5b8e71071660, right=0x5b8e7108d490, redir=(nil), prev=0x5b8e7108d2f0, next=0x5b8e7108d490 Building redirection AST 'echo' '<' with filename './test_files/infile_big' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5b8e71071660, right=0x5b8e7108d490, redir=(nil), prev=0x5b8e7108d2f0, next=0x5b8e7108d490 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b8e7108d2f0 left=(nil), right=(nil), redir=(nil), prev=0x5b8e7108d3a0, next=0x5b8e7108d560 Created left child with pid=793895 Created right child with pid=793896 Parent closing pipe ends Waiting for left child (pid=793895) ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5b8e7108d3a0, next=0x5b8e7108d560 [0]='echo' ===== LEFT PIPE EXECUTION DETAILS ===== Stdin redirected from pipe read end 'echo' 0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b8e7108d2f0 [0]='echo' None Left stdout redirected to pipe write end 'echo' 0 Left child exited with status 0 Waiting for right child (pid=793896) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  71: ‚ùå echo hi | cat <"./test_files/infile" 
mini output = (hi)
bash output = (hi hello world 42)
mini error = ( 'echo hi | cat <"./test_files/infile"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 8, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 14, type=< Handling redirection type=< Handling redirection token at pos 14 '<' Looking for filename at position 15 Processing filename at pos 15 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 35 Extracted quoted filename from pos 16 to 34 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c865a7673a0 left=(nil), right=(nil), redir=(nil), prev=0x5c865a74b710, next=0x5c865a767530 left=(nil), right=(nil), redir=(nil), prev=0x5c865a7673a0, next=0x5c865a7675a0 left=(nil), right=(nil), redir=(nil), prev=0x5c865a767530, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c865a7673a0 left=(nil), right=(nil), redir=(nil), prev=0x5c865a7673a0, next=0x5c865a7675a0 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5c865a74b710, next=0x5c865a767530 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c865a7673a0 left=(nil), right=(nil), redir=(nil), prev=0x5c865a7673a0, next=0x5c865a7675a0 left=0x5c865a74b710, right=0x5c865a767530, redir=(nil), prev=0x5c865a74b710, next=0x5c865a767530 left=0x5c865a74b710, right=0x5c865a767530, redir=(nil), prev=0x5c865a74b710, next=0x5c865a767530 Building redirection AST 'echo' 'cat' '<' with filename './test_files/infile' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5c865a74b710, right=0x5c865a767530, redir=(nil), prev=0x5c865a74b710, next=0x5c865a767530 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c865a7673a0 left=(nil), right=(nil), redir=(nil), prev=0x5c865a7673a0, next=0x5c865a7675a0 Created left child with pid=793943 ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c865a7673a0 [0]='echo' [1]='hi' None Created right child with pid=793944 Left stdout redirected to pipe write end 'echo' 'hi' Parent closing pipe ends Waiting for left child (pid=793943) 0 ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5c865a7673a0, next=0x5c865a7675a0 [0]='cat' None Stdin redirected from pipe read end 'cat' Left child exited with status 0 Waiting for right child (pid=793944) 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  72: ‚úÖ‚ö†Ô∏è  echo hi | cat "./test_files/infile" 
mini error = ( 'echo hi | cat "./test_files/infile"' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 8, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '"' Handling regular token Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x623cb804a8c0, next=(nil) Adding arg='./test_files/infile', quote_type=5 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x623cb804a8c0, next=(nil) Successfully appended argument Position update indicated, continuing Tokenization completed with result=1 'cat'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x623cb804a8c0 left=(nil), right=(nil), redir=(nil), prev=0x623cb804a7f0, next=0x623cb8066600 left=(nil), right=(nil), redir=(nil), prev=0x623cb804a8c0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x623cb804a8c0 left=(nil), right=(nil), redir=(nil), prev=0x623cb804a8c0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x623cb804a7f0, next=0x623cb8066600 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x623cb804a8c0 left=(nil), right=(nil), redir=(nil), prev=0x623cb804a8c0, next=(nil) left=0x623cb804a7f0, right=0x623cb8066600, redir=(nil), prev=0x623cb804a7f0, next=0x623cb8066600 left=0x623cb804a7f0, right=0x623cb8066600, redir=(nil), prev=0x623cb804a7f0, next=0x623cb8066600 Building redirection AST 'echo' 'cat' Redirection AST build complete No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x623cb804a7f0, right=0x623cb8066600, redir=(nil), prev=0x623cb804a7f0, next=0x623cb8066600 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x623cb804a8c0 left=(nil), right=(nil), redir=(nil), prev=0x623cb804a8c0, next=(nil) Created left child with pid=793992 ===== LEFT PIPE EXECUTION DETAILS ===== Created right child with pid=793993 Parent closing pipe ends Waiting for left child (pid=793992) left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x623cb804a8c0 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x623cb804a8c0, next=(nil) [0]='cat' [1]='./test_files/infile' None Stdin redirected from pipe read end 'cat' './test_files/infile' Left child exited with status 0 Waiting for right child (pid=793993) 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  73: ‚ùå cat <"./test_files/infile" | echo hi 
mini exit code = hi
bash exit code = 0
mini error = ( 'cat <"./test_files/infile" | echo hi' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 25 Extracted quoted filename from pos 6 to 24 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 27, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x6006351aacd0, next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x6006351aacd0, next=(nil) Successfully appended argument 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6006351aac20 left=(nil), right=(nil), redir=(nil), prev=0x60063518ef90, next=0x6006351aacd0 left=(nil), right=(nil), redir=(nil), prev=0x6006351aac20, next=0x6006351aadc0 left=(nil), right=(nil), redir=(nil), prev=0x6006351aacd0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6006351aac20 left=(nil), right=(nil), redir=(nil), prev=0x6006351aacd0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x6006351aac20, next=0x6006351aadc0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6006351aac20 left=(nil), right=(nil), redir=(nil), prev=0x6006351aacd0, next=(nil) left=0x60063518ef90, right=0x6006351aadc0, redir=(nil), prev=0x6006351aac20, next=0x6006351aadc0 left=0x60063518ef90, right=0x6006351aadc0, redir=(nil), prev=0x6006351aac20, next=0x6006351aadc0 Building redirection AST 'cat' '<' with filename './test_files/infile' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x60063518ef90, right=0x6006351aadc0, redir=(nil), prev=0x6006351aac20, next=0x6006351aadc0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6006351aac20 left=(nil), right=(nil), redir=(nil), prev=0x6006351aacd0, next=(nil) Created left child with pid=794041 ===== LEFT PIPE EXECUTION DETAILS ===== Created right child with pid=794042 Parent closing pipe ends Waiting for left child (pid=794041) left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6006351aac20 [0]='cat' None Left stdout redirected to pipe write end 'cat' 0 ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x6006351aacd0, next=(nil) [0]='echo' [1]='hi' None Stdin redirected from pipe read end 'echo' 'hi' 0 Left child exited with status 0 Waiting for right child (pid=794042) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( Broken pipe)
Test  74: ‚ùå cat <"./test_files/infile" | grep hello 
mini output = ()
bash output = (hello)
mini exit code =
bash exit code = 0
mini error = ( 'cat <"./test_files/infile" | grep hello' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 25 Extracted quoted filename from pos 6 to 24 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 27, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'g' Handling regular token 'r' Handling regular token 'e' Handling regular token 'p' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='grep' Created node with args[0]='grep' 'grep'] -> NULL Position update indicated, continuing 'h' Handling regular token 'e' Handling regular token 'l' Handling regular token 'l' Handling regular token 'o' Handling regular token Creating token type=ARGS, content='hello' Created node with args[0]='hello' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5d17f6d381f0, next=(nil) Adding arg='hello', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5d17f6d381f0, next=(nil) Successfully appended argument 'grep'] -> NULL Tokenization completed with result=1 'grep'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5d17f6d38140 left=(nil), right=(nil), redir=(nil), prev=0x5d17f6d1c4b0, next=0x5d17f6d381f0 left=(nil), right=(nil), redir=(nil), prev=0x5d17f6d38140, next=0x5d17f6d382e0 left=(nil), right=(nil), redir=(nil), prev=0x5d17f6d381f0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5d17f6d38140 left=(nil), right=(nil), redir=(nil), prev=0x5d17f6d381f0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5d17f6d38140, next=0x5d17f6d382e0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5d17f6d38140 left=(nil), right=(nil), redir=(nil), prev=0x5d17f6d381f0, next=(nil) left=0x5d17f6d1c4b0, right=0x5d17f6d382e0, redir=(nil), prev=0x5d17f6d38140, next=0x5d17f6d382e0 left=0x5d17f6d1c4b0, right=0x5d17f6d382e0, redir=(nil), prev=0x5d17f6d38140, next=0x5d17f6d382e0 Building redirection AST 'cat' '<' with filename './test_files/infile' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5d17f6d1c4b0, right=0x5d17f6d382e0, redir=(nil), prev=0x5d17f6d38140, next=0x5d17f6d382e0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5d17f6d38140 left=(nil), right=(nil), redir=(nil), prev=0x5d17f6d381f0, next=(nil) Created left child with pid=794092 Created right child with pid=794093 Parent closing pipe ends Waiting for left child (pid=794092) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5d17f6d38140 [0]='cat' None Left stdout redirected to pipe write end 'cat' ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5d17f6d381f0, next=(nil) [0]='grep' [1]='hello' None Stdin redirected from pipe read end 'grep' 'hello' 0 Left child exited with status 0 Waiting for right child (pid=794093) 1 Right child exited with status 256 Pipe execution complete, returning status 1)
bash error = ()
Test  75: ‚ùå cat <"./test_files/infile_big" | echo hi 
mini exit code = hi
bash exit code = 0
mini error = ( 'cat <"./test_files/infile_big" | echo hi' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' '_' 'b' 'i' 'g' Found closing " quote at pos 29 Extracted quoted filename from pos 6 to 28 './test_files/infile_big' '<' './test_files/infile_big' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile_big' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 31, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x628590cbf800, next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x628590cbf800, next=(nil) Successfully appended argument 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile_big' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x628590cbf730 left=(nil), right=(nil), redir=(nil), prev=0x628590cbf660, next=0x628590cbf800 left=(nil), right=(nil), redir=(nil), prev=0x628590cbf730, next=0x628590cbf8f0 left=(nil), right=(nil), redir=(nil), prev=0x628590cbf800, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x628590cbf730 left=(nil), right=(nil), redir=(nil), prev=0x628590cbf800, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x628590cbf730, next=0x628590cbf8f0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x628590cbf730 left=(nil), right=(nil), redir=(nil), prev=0x628590cbf800, next=(nil) left=0x628590cbf660, right=0x628590cbf8f0, redir=(nil), prev=0x628590cbf730, next=0x628590cbf8f0 left=0x628590cbf660, right=0x628590cbf8f0, redir=(nil), prev=0x628590cbf730, next=0x628590cbf8f0 Building redirection AST 'cat' '<' with filename './test_files/infile_big' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x628590cbf660, right=0x628590cbf8f0, redir=(nil), prev=0x628590cbf730, next=0x628590cbf8f0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x628590cbf730 left=(nil), right=(nil), redir=(nil), prev=0x628590cbf800, next=(nil) Created left child with pid=794142 Created right child with pid=794143 Parent closing pipe ends Waiting for left child (pid=794142) ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x628590cbf800, next=(nil) [0]='echo' [1]='hi' None Stdin redirected from pipe read end 'echo' 'hi' ===== LEFT PIPE EXECUTION DETAILS ===== 0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x628590cbf730 [0]='cat' None Left stdout redirected to pipe write end 'cat' 0 Left child exited with status 0 Waiting for right child (pid=794143) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( Broken pipe)
Test  76: ‚ùå cat <missing 
mini exit code =
bash exit code = 1
mini error = ( 'cat <missing' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 5 to 11 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 'missing'] -> NULL Validating redirection targets Checking redirection node type=<, filename='missing' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x60e02b7b6930 left=(nil), right=(nil), redir=(nil), prev=0x60e02b7b6860, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x60e02b7b6930 No pipe root created Building redirection AST 'cat' '<' with filename 'missing' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( No such file or directory)
Test  77: ‚ùå cat <missing | cat 
mini exit code =
bash exit code = 0
mini error = ( 'cat <missing | cat' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 5 to 11 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 13, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'c' Handling regular token 'a' Handling regular token 't' Handling regular token Creating token type=ARGS, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Tokenization completed with result=1 'cat'] -> NULL Validating redirection targets Checking redirection node type=<, filename='missing' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x608cb1d2b440 left=(nil), right=(nil), redir=(nil), prev=0x608cb1d0f7b0, next=0x608cb1d2b4f0 left=(nil), right=(nil), redir=(nil), prev=0x608cb1d2b440, next=0x608cb1d2b5e0 left=(nil), right=(nil), redir=(nil), prev=0x608cb1d2b4f0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x608cb1d2b440 left=(nil), right=(nil), redir=(nil), prev=0x608cb1d2b4f0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x608cb1d2b440, next=0x608cb1d2b5e0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x608cb1d2b440 left=(nil), right=(nil), redir=(nil), prev=0x608cb1d2b4f0, next=(nil) left=0x608cb1d0f7b0, right=0x608cb1d2b5e0, redir=(nil), prev=0x608cb1d2b440, next=0x608cb1d2b5e0 left=0x608cb1d0f7b0, right=0x608cb1d2b5e0, redir=(nil), prev=0x608cb1d2b440, next=0x608cb1d2b5e0 Building redirection AST 'cat' '<' with filename 'missing' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x608cb1d0f7b0, right=0x608cb1d2b5e0, redir=(nil), prev=0x608cb1d2b440, next=0x608cb1d2b5e0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x608cb1d2b440 left=(nil), right=(nil), redir=(nil), prev=0x608cb1d2b4f0, next=(nil) Created left child with pid=794234 Created right child with pid=794235 Parent closing pipe ends Waiting for left child (pid=794234) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x608cb1d2b440 [0]='cat' None Left stdout redirected to pipe write end 'cat' ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x608cb1d2b4f0, next=(nil) [0]='cat' None Stdin redirected from pipe read end 'cat' 0 Left child exited with status 0 Waiting for right child (pid=794235) 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( No such file or directory)
Test  78: ‚ùå cat <missing | echo oi 
mini exit code = oi
bash exit code = 0
mini error = ( 'cat <missing | echo oi' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 5 to 11 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 13, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'o' Handling regular token 'i' Handling regular token Creating token type=ARGS, content='oi' Created node with args[0]='oi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5c1f08fedc00, next=(nil) Adding arg='oi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5c1f08fedc00, next=(nil) Successfully appended argument 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=<, filename='missing' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c1f08fedb50 left=(nil), right=(nil), redir=(nil), prev=0x5c1f08fd1ed0, next=0x5c1f08fedc00 left=(nil), right=(nil), redir=(nil), prev=0x5c1f08fedb50, next=0x5c1f08fedcf0 left=(nil), right=(nil), redir=(nil), prev=0x5c1f08fedc00, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c1f08fedb50 left=(nil), right=(nil), redir=(nil), prev=0x5c1f08fedc00, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5c1f08fedb50, next=0x5c1f08fedcf0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c1f08fedb50 left=(nil), right=(nil), redir=(nil), prev=0x5c1f08fedc00, next=(nil) left=0x5c1f08fd1ed0, right=0x5c1f08fedcf0, redir=(nil), prev=0x5c1f08fedb50, next=0x5c1f08fedcf0 left=0x5c1f08fd1ed0, right=0x5c1f08fedcf0, redir=(nil), prev=0x5c1f08fedb50, next=0x5c1f08fedcf0 Building redirection AST 'cat' '<' with filename 'missing' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5c1f08fd1ed0, right=0x5c1f08fedcf0, redir=(nil), prev=0x5c1f08fedb50, next=0x5c1f08fedcf0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c1f08fedb50 left=(nil), right=(nil), redir=(nil), prev=0x5c1f08fedc00, next=(nil) Created left child with pid=794284 ===== LEFT PIPE EXECUTION DETAILS ===== Created right child with pid=794285 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c1f08fedb50 [0]='cat' Parent closing pipe ends None Waiting for left child (pid=794284) Left stdout redirected to pipe write end 'cat' ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5c1f08fedc00, next=(nil) [0]='echo' [1]='oi' None Stdin redirected from pipe read end 'echo' 'oi' 0 0 Left child exited with status 0 Waiting for right child (pid=794285) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( No such file or directory)
Test  79: ‚ùå cat <missing | cat <"./test_files/infile" 
mini output = ()
bash output = (hi hello world 42)
mini exit code =
bash exit code = 0
mini error = ( 'cat <missing | cat <"./test_files/infile"' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 5 to 11 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 13, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 19, type=< Handling redirection type=< Handling redirection token at pos 19 '<' Looking for filename at position 20 Processing filename at pos 20 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 40 Extracted quoted filename from pos 21 to 39 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='missing' Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f71e303f300 left=(nil), right=(nil), redir=(nil), prev=0x5f71e30009b0, next=0x5f71e303f3b0 left=(nil), right=(nil), redir=(nil), prev=0x5f71e303f300, next=0x5f71e303f4a0 left=(nil), right=(nil), redir=(nil), prev=0x5f71e303f3b0, next=0x5f71e303f570 left=(nil), right=(nil), redir=(nil), prev=0x5f71e303f4a0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f71e303f300 left=(nil), right=(nil), redir=(nil), prev=0x5f71e303f3b0, next=0x5f71e303f570 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5f71e303f300, next=0x5f71e303f4a0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f71e303f300 left=(nil), right=(nil), redir=(nil), prev=0x5f71e303f3b0, next=0x5f71e303f570 left=0x5f71e30009b0, right=0x5f71e303f4a0, redir=(nil), prev=0x5f71e303f300, next=0x5f71e303f4a0 left=0x5f71e30009b0, right=0x5f71e303f4a0, redir=(nil), prev=0x5f71e303f300, next=0x5f71e303f4a0 Building redirection AST 'cat' '<' with filename 'missing' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5f71e30009b0, right=0x5f71e303f4a0, redir=(nil), prev=0x5f71e303f300, next=0x5f71e303f4a0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f71e303f300 left=(nil), right=(nil), redir=(nil), prev=0x5f71e303f3b0, next=0x5f71e303f570 Created left child with pid=794335 ===== LEFT PIPE EXECUTION DETAILS ===== Created right child with pid=794336 Parent closing pipe ends Waiting for left child (pid=794335) left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f71e303f300 [0]='cat' None Left stdout redirected to pipe write end 'cat' ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5f71e303f3b0, next=0x5f71e303f570 [0]='cat' None Stdin redirected from pipe read end 'cat' 0 Left child exited with status 0 Waiting for right child (pid=794336) 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( No such file or directory)
Test  80: ‚úÖ‚ö†Ô∏è  echo <123 <456 hi | echo 42 
mini error = ( 'echo <123 <456 hi | echo 42' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 5, type=< Handling redirection type=< Handling redirection token at pos 5 '<' Looking for filename at position 6 Processing filename at pos 6 '1' '1' '2' '3' Extracted non-quoted filename from pos 6 to 8 '123' '<' '123' Redirection token handled successfully Redirection operator='<', filename='123' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 10, type=< Handling redirection type=< Handling redirection token at pos 10 '<' Looking for filename at position 11 Processing filename at pos 11 '4' '4' '5' '6' Extracted non-quoted filename from pos 11 to 13 '456' '<' '456' Redirection token handled successfully Redirection operator='<', filename='456' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' 'hi'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 18, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '4' Handling regular token '2' Handling regular token Creating token type=ARGS, content='42' Created node with args[0]='42' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x6135336d20a0, next=(nil) Adding arg='42', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x6135336d20a0, next=(nil) Successfully appended argument 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=<, filename='123' Checking redirection node type=<, filename='456' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6135336d1e30 left=(nil), right=(nil), redir=(nil), prev=0x6135336b61a0, next=0x6135336d1ee0 left=(nil), right=(nil), redir=(nil), prev=0x6135336d1e30, next=0x6135336d1fd0 left=(nil), right=(nil), redir=(nil), prev=0x6135336d1ee0, next=0x6135336d20a0 left=(nil), right=(nil), redir=(nil), prev=0x6135336d1fd0, next=0x6135336d2170 left=(nil), right=(nil), redir=(nil), prev=0x6135336d20a0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6135336d1e30 left=(nil), right=(nil), redir=(nil), prev=0x6135336d20a0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x6135336d1fd0, next=0x6135336d2170 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6135336d1e30 left=(nil), right=(nil), redir=(nil), prev=0x6135336d20a0, next=(nil) left=0x6135336b61a0, right=0x6135336d2170, redir=(nil), prev=0x6135336d1fd0, next=0x6135336d2170 left=0x6135336b61a0, right=0x6135336d2170, redir=(nil), prev=0x6135336d1fd0, next=0x6135336d2170 Building redirection AST 'echo' '<' with filename '123' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6135336d1e30 Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6135336d1e30 Successfully appended argument Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x6135336b61a0, right=0x6135336d2170, redir=(nil), prev=0x6135336d1fd0, next=0x6135336d2170 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6135336d1e30 left=(nil), right=(nil), redir=(nil), prev=0x6135336d20a0, next=(nil) Created left child with pid=794383 Created right child with pid=794384 Parent closing pipe ends Waiting for left child (pid=794383) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6135336d1e30 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' ===== RIGHT PIPE EXECUTION DETAILS ===== 0 left=(nil), right=(nil), redir=(nil), prev=0x6135336d20a0, next=(nil) [0]='echo' [1]='42' None Stdin redirected from pipe read end 'echo' '42' 0 Left child exited with status 0 Waiting for right child (pid=794384) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( No such file or directory)
Test  81: ‚ùå ls >./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'ls >./outfiles/outfile01' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 4 to 23 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile01'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x598f12dda940 left=(nil), right=(nil), redir=(nil), prev=0x598f12dbecb0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x598f12dda940 No pipe root created Building redirection AST 'ls' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test  82: ‚ùå ls >         ./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'ls > ./outfiles/outfile01' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 Skipping whitespace ' ' at pos 4 Skipping whitespace ' ' at pos 5 Skipping whitespace ' ' at pos 6 Skipping whitespace ' ' at pos 7 Skipping whitespace ' ' at pos 8 Skipping whitespace ' ' at pos 9 Skipping whitespace ' ' at pos 10 Skipping whitespace ' ' at pos 11 Skipping whitespace ' ' at pos 12 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 13 to 32 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile01'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x62ea99b95f40 left=(nil), right=(nil), redir=(nil), prev=0x62ea99b95e70, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x62ea99b95f40 No pipe root created Building redirection AST 'ls' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test  83: ‚úÖ‚ö†Ô∏è  echo hi >         ./outfiles/outfile01 bye 
mini error = ( 'echo hi > ./outfiles/outfile01 bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=> Handling redirection type=> Handling redirection token at pos 8 '>' Looking for filename at position 9 Processing filename at pos 9 Skipping whitespace ' ' at pos 9 Skipping whitespace ' ' at pos 10 Skipping whitespace ' ' at pos 11 Skipping whitespace ' ' at pos 12 Skipping whitespace ' ' at pos 13 Skipping whitespace ' ' at pos 14 Skipping whitespace ' ' at pos 15 Skipping whitespace ' ' at pos 16 Skipping whitespace ' ' at pos 17 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 18 to 37 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'bye'] -> NULL Tokenization completed with result=1 'bye'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5aeb3e74c8f0 left=(nil), right=(nil), redir=(nil), prev=0x5aeb3e74c820, next=0x5aeb3e74ca80 left=(nil), right=(nil), redir=(nil), prev=0x5aeb3e74c8f0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5aeb3e74c8f0 No pipe root created Building redirection AST 'echo' '>' with filename './outfiles/outfile01' Processing redirection type=>, filename='./outfiles/outfile01' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection './outfiles/outfile01' Found argument 'bye' to add to command 'echo' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5aeb3e74c8f0 Adding arg='bye', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5aeb3e74c8f0 Successfully appended argument Finished collecting args for command 'echo' Set redir_root to redirection with filename './outfiles/outfile01' Redirection AST build complete left=0x5aeb3e74c820, right=(nil), redir=(nil), prev=0x5aeb3e74c820, next=0x5aeb3e74ca80 Using redir_root as AST root './outfiles/outfile01' ===== REDIRECTION CHAIN START ===== echo (pid=794509) > [./outfiles/outfile01] stdin=0, stdout=1, stderr=2 './outfiles/outfile01' Current redirection_fd=-1, out_mode=0 ===== SETUP REDIRECTION START ===== Redirection type=>, file='./outfiles/outfile01' Initial redirection_fd=-1, out_mode=0 stdin=0, stdout=1, stderr=2 Target command is 'echo' Updating last_out_redir './outfiles/outfile01' (len=20) No matching outer quotes found ===== OUTPUT REDIRECTION START ===== './outfiles/outfile01' stdout=1, redirection_fd=-1, out_mode=1 Using truncate mode Checking permissions for './outfiles/outfile01' ===== SETUP OUTPUT FILE START ===== './outfiles/outfile01' stdout=1, redirection_fd=-1 1 Using truncate mode Opening file './outfiles/outfile01' with mode 577 Opened file with fd=5 Redirecting stdout to fd 5 stdout=1, redirection_fd=5 ===== SETUP OUTPUT FILE END (SUCCESS) ===== stdout=1, redirection_fd=5, out_mode=1 ===== OUTPUT REDIRECTION END (SUCCESS) ===== Final redirection_fd=5, out_mode=1 stdin=0, stdout=1, stderr=2 ===== SETUP REDIRECTION END (SUCCESS) ===== (nil) stdin=0, stdout=1, stderr=2 Chain completed successfully ===== REDIRECTION CHAIN END =====)
bash error = ()
Test  84: ‚ùå ls >./outfiles/outfile01 >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'ls >./outfiles/outfile01 >./outfiles/outfile02' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 4 to 23 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 25, type=> Handling redirection type=> Handling redirection token at pos 25 '>' Looking for filename at position 26 Processing filename at pos 26 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 26 to 45 './outfiles/outfile02' '>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile02'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f2adea3f3a0 left=(nil), right=(nil), redir=(nil), prev=0x5f2adea3f2d0, next=0x5f2adea3f450 left=(nil), right=(nil), redir=(nil), prev=0x5f2adea3f3a0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f2adea3f3a0 No pipe root created Building redirection AST 'ls' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test  85: ‚ùå ls >./outfiles/outfile01 >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >./outfiles/outfile01 >./test_files/invalid_permission' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 4 to 23 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 25, type=> Handling redirection type=> Handling redirection token at pos 25 '>' Looking for filename at position 26 Processing filename at pos 26 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 26 to 56 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x607577e7f590 left=(nil), right=(nil), redir=(nil), prev=0x607577e7f4c0, next=0x607577e7f640 left=(nil), right=(nil), redir=(nil), prev=0x607577e7f590, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x607577e7f590 No pipe root created Building redirection AST 'ls' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test  86: ‚ùå ls >"./outfiles/outfile with spaces" 
Only in ./bash_outfiles: outfile with spaces
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'ls >"./outfiles/outfile with spaces"' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '"' Found opening " quote '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' ' ' 'w' 'i' 't' 'h' ' ' 's' 'p' 'a' 'c' 'e' 's' Found closing " quote at pos 35 Extracted quoted filename from pos 5 to 34 './outfiles/outfile with spaces' '>' './outfiles/outfile with spaces' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile with spaces' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile with spaces'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile with spaces' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x607335de7f70 left=(nil), right=(nil), redir=(nil), prev=0x607335dcc2e0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x607335de7f70 No pipe root created Building redirection AST 'ls' '>' with filename './outfiles/outfile with spaces' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test  87: ‚ùå ls >"./outfiles/outfile""1""2""3""4""5" 
Only in ./bash_outfiles: outfile12345
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'ls >"./outfiles/outfile""1""2""3""4""5"' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '"' Found opening " quote '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' Found closing " quote at pos 23 Extracted quoted filename from pos 5 to 22 './outfiles/outfile' '>' './outfiles/outfile' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile' handle_redirection_token returned 1 Position update indicated, continuing '"' Handling regular token Position update indicated, continuing '"' Handling regular token Position update indicated, continuing '"' Handling regular token Position update indicated, continuing '"' Handling regular token Position update indicated, continuing '"' Handling regular token Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile12345'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile12345' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5d50b6159b30 left=(nil), right=(nil), redir=(nil), prev=0x5d50b613dea0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5d50b6159b30 No pipe root created Building redirection AST 'ls' '>' with filename './outfiles/outfile12345' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test  88: ‚ùå ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02" 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02"' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '"' Found opening " quote '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Found closing " quote at pos 25 Extracted quoted filename from pos 5 to 24 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 27, type=> Handling redirection type=> Handling redirection token at pos 27 '>' Looking for filename at position 28 Processing filename at pos 28 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 28 to 58 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 60, type=> Handling redirection type=> Handling redirection token at pos 60 '>' Looking for filename at position 61 Processing filename at pos 61 '"' Found opening " quote '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Found closing " quote at pos 82 Extracted quoted filename from pos 62 to 81 './outfiles/outfile02' '>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile02'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./test_files/invalid_permission' Checking redirection node type=>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b23d33a3ad0 left=(nil), right=(nil), redir=(nil), prev=0x5b23d33a3a00, next=0x5b23d33a3b80 left=(nil), right=(nil), redir=(nil), prev=0x5b23d33a3ad0, next=0x5b23d33a3c50 left=(nil), right=(nil), redir=(nil), prev=0x5b23d33a3b80, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b23d33a3ad0 No pipe root created Building redirection AST 'ls' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test  89: ‚ùå ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission 
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 4 to 34 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 36, type=> Handling redirection type=> Handling redirection token at pos 36 '>' Looking for filename at position 37 Processing filename at pos 37 '"' Found opening " quote '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Found closing " quote at pos 58 Extracted quoted filename from pos 38 to 57 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 60, type=> Handling redirection type=> Handling redirection token at pos 60 '>' Looking for filename at position 61 Processing filename at pos 61 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 61 to 91 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./test_files/invalid_permission' Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x582888ae2880 left=(nil), right=(nil), redir=(nil), prev=0x582888aa46f0, next=0x582888ae2930 left=(nil), right=(nil), redir=(nil), prev=0x582888ae2880, next=0x582888ae29e0 left=(nil), right=(nil), redir=(nil), prev=0x582888ae2930, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x582888ae2880 No pipe root created Building redirection AST 'ls' '>' with filename './test_files/invalid_permission' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test  90: ‚ùå cat <"./test_files/infile" >"./outfiles/outfile01" 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
hello
world
42
mini exit code =
bash exit code = 0
mini error = ( 'cat <"./test_files/infile" >"./outfiles/outfile01"' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 25 Extracted quoted filename from pos 6 to 24 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 27, type=> Handling redirection type=> Handling redirection token at pos 27 '>' Looking for filename at position 28 Processing filename at pos 28 '"' Found opening " quote '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Found closing " quote at pos 49 Extracted quoted filename from pos 29 to 48 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile01'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile' Checking redirection node type=>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6204056251e0 left=(nil), right=(nil), redir=(nil), prev=0x620405609550, next=0x620405625290 left=(nil), right=(nil), redir=(nil), prev=0x6204056251e0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6204056251e0 No pipe root created Building redirection AST 'cat' '<' with filename './test_files/infile' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test  91: ‚ùå echo hi >./outfiles/outfile01 | echo bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
mini error = ( 'echo hi >./outfiles/outfile01 | echo bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=> Handling redirection type=> Handling redirection token at pos 8 '>' Looking for filename at position 9 Processing filename at pos 9 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 9 to 28 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 30, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5e81a75f3f60, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5e81a75f3f60, next=(nil) Successfully appended argument 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5e81a75f3df0 left=(nil), right=(nil), redir=(nil), prev=0x5e81a75d8150, next=0x5e81a75f3f60 left=(nil), right=(nil), redir=(nil), prev=0x5e81a75f3df0, next=0x5e81a75f3fb0 left=(nil), right=(nil), redir=(nil), prev=0x5e81a75f3f60, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5e81a75f3df0 left=(nil), right=(nil), redir=(nil), prev=0x5e81a75f3f60, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5e81a75f3df0, next=0x5e81a75f3fb0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5e81a75f3df0 left=(nil), right=(nil), redir=(nil), prev=0x5e81a75f3f60, next=(nil) left=0x5e81a75d8150, right=0x5e81a75f3fb0, redir=(nil), prev=0x5e81a75f3df0, next=0x5e81a75f3fb0 left=0x5e81a75d8150, right=0x5e81a75f3fb0, redir=(nil), prev=0x5e81a75f3df0, next=0x5e81a75f3fb0 Building redirection AST 'echo' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5e81a75d8150, right=0x5e81a75f3fb0, redir=(nil), prev=0x5e81a75f3df0, next=0x5e81a75f3fb0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5e81a75f3df0 left=(nil), right=(nil), redir=(nil), prev=0x5e81a75f3f60, next=(nil) Created left child with pid=794850 ===== LEFT PIPE EXECUTION DETAILS ===== Created right child with pid=794851 Parent closing pipe ends Waiting for left child (pid=794850) left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5e81a75f3df0 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5e81a75f3f60, next=(nil) [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 Left child exited with status 0 Waiting for right child (pid=794851) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  92: ‚ùå echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
mini error = ( 'echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=> Handling redirection type=> Handling redirection token at pos 8 '>' Looking for filename at position 9 Processing filename at pos 9 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 9 to 28 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 30, type=> Handling redirection type=> Handling redirection token at pos 30 '>' Looking for filename at position 31 Processing filename at pos 31 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 31 to 50 './outfiles/outfile02' '>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 52, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5c3f19b16e40, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5c3f19b16e40, next=(nil) Successfully appended argument 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c3f19b16c60 left=(nil), right=(nil), redir=(nil), prev=0x5c3f19b16b90, next=0x5c3f19b16df0 left=(nil), right=(nil), redir=(nil), prev=0x5c3f19b16c60, next=0x5c3f19b16e40 left=(nil), right=(nil), redir=(nil), prev=0x5c3f19b16df0, next=0x5c3f19b16f10 left=(nil), right=(nil), redir=(nil), prev=0x5c3f19b16e40, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c3f19b16c60 left=(nil), right=(nil), redir=(nil), prev=0x5c3f19b16e40, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5c3f19b16df0, next=0x5c3f19b16f10 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c3f19b16c60 left=(nil), right=(nil), redir=(nil), prev=0x5c3f19b16e40, next=(nil) left=0x5c3f19b16b90, right=0x5c3f19b16f10, redir=(nil), prev=0x5c3f19b16df0, next=0x5c3f19b16f10 left=0x5c3f19b16b90, right=0x5c3f19b16f10, redir=(nil), prev=0x5c3f19b16df0, next=0x5c3f19b16f10 Building redirection AST 'echo' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5c3f19b16b90, right=0x5c3f19b16f10, redir=(nil), prev=0x5c3f19b16df0, next=0x5c3f19b16f10 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c3f19b16c60 left=(nil), right=(nil), redir=(nil), prev=0x5c3f19b16e40, next=(nil) Created left child with pid=794898 Created right child with pid=794899 Parent closing pipe ends Waiting for left child (pid=794898) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c3f19b16c60 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5c3f19b16e40, next=(nil) [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 Left child exited with status 0 Waiting for right child (pid=794899) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  93: ‚úÖ‚ö†Ô∏è  echo hi | echo >./outfiles/outfile01 bye 
mini error = ( 'echo hi | echo >./outfiles/outfile01 bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 8, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 15, type=> Handling redirection type=> Handling redirection token at pos 15 '>' Looking for filename at position 16 Processing filename at pos 16 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 16 to 35 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'bye'] -> NULL Tokenization completed with result=1 'bye'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x601725c37950 left=(nil), right=(nil), redir=(nil), prev=0x601725c37860, next=0x601725c37ae0 left=(nil), right=(nil), redir=(nil), prev=0x601725c37950, next=0x601725c37b30 left=(nil), right=(nil), redir=(nil), prev=0x601725c37ae0, next=0x601725c37c00 left=(nil), right=(nil), redir=(nil), prev=0x601725c37b30, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x601725c37950 left=(nil), right=(nil), redir=(nil), prev=0x601725c37950, next=0x601725c37b30 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x601725c37860, next=0x601725c37ae0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x601725c37950 left=(nil), right=(nil), redir=(nil), prev=0x601725c37950, next=0x601725c37b30 left=0x601725c37860, right=0x601725c37ae0, redir=(nil), prev=0x601725c37860, next=0x601725c37ae0 left=0x601725c37860, right=0x601725c37ae0, redir=(nil), prev=0x601725c37860, next=0x601725c37ae0 Building redirection AST 'echo' 'echo' '>' with filename './outfiles/outfile01' Processing redirection type=>, filename='./outfiles/outfile01' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection './outfiles/outfile01' Found argument 'bye' to add to command 'echo' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x601725c37950, next=0x601725c37b30 Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x601725c37950, next=0x601725c37b30 Successfully appended argument Finished collecting args for command 'echo' Set redir_root to redirection with filename './outfiles/outfile01' Redirection AST build complete left=0x601725c37ae0, right=(nil), redir=(nil), prev=0x601725c37ae0, next=0x601725c37c00 Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x601725c37860, right=0x601725c37ae0, redir=(nil), prev=0x601725c37860, next=0x601725c37ae0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x601725c37950 left=(nil), right=(nil), redir=0x601725c37b30, prev=0x601725c37950, next=0x601725c37b30 Created left child with pid=794946 ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x601725c37950 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 Created right child with pid=794947 Parent closing pipe ends Waiting for left child (pid=794946) ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=0x601725c37b30, prev=0x601725c37950, next=0x601725c37b30 [0]='echo' [1]='bye' >[./outfiles/outfile01] Stdin redirected from pipe read end Processing redirections ===== REDIRECTION CHAIN START ===== echo (pid=794947) > [./outfiles/outfile01] stdin=0, stdout=1, stderr=2 './outfiles/outfile01' Current redirection_fd=-1, out_mode=0 ===== SETUP REDIRECTION START ===== Redirection type=>, file='./outfiles/outfile01' Initial redirection_fd=-1, out_mode=0 stdin=0, stdout=1, stderr=2 Target command is 'echo' Updating last_out_redir './outfiles/outfile01' (len=20) No matching outer quotes found ===== OUTPUT REDIRECTION START ===== './outfiles/outfile01' stdout=1, redirection_fd=-1, out_mode=1 Using truncate mode Checking permissions for './outfiles/outfile01' ===== SETUP OUTPUT FILE START ===== './outfiles/outfile01' stdout=1, redirection_fd=-1 1 Using truncate mode Opening file './outfiles/outfile01' with mode 577 Opened file with fd=3 Redirecting stdout to fd 3 stdout=1, redirection_fd=3 ===== SETUP OUTPUT FILE END (SUCCESS) ===== stdout=1, redirection_fd=3, out_mode=1 ===== OUTPUT REDIRECTION END (SUCCESS) ===== Final redirection_fd=3, out_mode=1 stdin=0, stdout=1, stderr=2 ===== SETUP REDIRECTION END (SUCCESS) ===== (nil) stdin=0, stdout=1, stderr=2 Chain completed successfully ===== REDIRECTION CHAIN END ===== 'echo' 'bye' 0 Left child exited with status 0 Waiting for right child (pid=794947) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  94: ‚ùå echo hi | echo bye >./outfiles/outfile01 >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bye
mini output = (bye)
bash output = ()
mini error = ( 'echo hi | echo bye >./outfiles/outfile01 >./outfiles/outfile02' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 8, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5610d5baeca0, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5610d5baeca0, next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 19, type=> Handling redirection type=> Handling redirection token at pos 19 '>' Looking for filename at position 20 Processing filename at pos 20 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 20 to 39 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 41, type=> Handling redirection type=> Handling redirection token at pos 41 '>' Looking for filename at position 42 Processing filename at pos 42 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 42 to 61 './outfiles/outfile02' '>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile02'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5610d5baeca0 left=(nil), right=(nil), redir=(nil), prev=0x5610d5baebd0, next=0x5610d5baee30 left=(nil), right=(nil), redir=(nil), prev=0x5610d5baeca0, next=0x5610d5baee80 left=(nil), right=(nil), redir=(nil), prev=0x5610d5baee30, next=0x5610d5baf010 left=(nil), right=(nil), redir=(nil), prev=0x5610d5baee80, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5610d5baeca0 left=(nil), right=(nil), redir=(nil), prev=0x5610d5baeca0, next=0x5610d5baee80 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5610d5baebd0, next=0x5610d5baee30 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5610d5baeca0 left=(nil), right=(nil), redir=(nil), prev=0x5610d5baeca0, next=0x5610d5baee80 left=0x5610d5baebd0, right=0x5610d5baee30, redir=(nil), prev=0x5610d5baebd0, next=0x5610d5baee30 left=0x5610d5baebd0, right=0x5610d5baee30, redir=(nil), prev=0x5610d5baebd0, next=0x5610d5baee30 Building redirection AST 'echo' 'echo' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5610d5baebd0, right=0x5610d5baee30, redir=(nil), prev=0x5610d5baebd0, next=0x5610d5baee30 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5610d5baeca0 left=(nil), right=(nil), redir=(nil), prev=0x5610d5baeca0, next=0x5610d5baee80 Created left child with pid=794992 ===== LEFT PIPE EXECUTION DETAILS ===== Created right child with pid=794993 Parent closing pipe ends Waiting for left child (pid=794992) left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5610d5baeca0 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5610d5baeca0, next=0x5610d5baee80 [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 Left child exited with status 0 Waiting for right child (pid=794993) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  95: ‚ùå echo hi >./outfiles/outfile01 | echo bye >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
bye
mini output = (bye)
bash output = ()
mini error = ( 'echo hi >./outfiles/outfile01 | echo bye >./outfiles/outfile02' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=> Handling redirection type=> Handling redirection token at pos 8 '>' Looking for filename at position 9 Processing filename at pos 9 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 9 to 28 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 30, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5adc95c68b20, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5adc95c68b20, next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 41, type=> Handling redirection type=> Handling redirection token at pos 41 '>' Looking for filename at position 42 Processing filename at pos 42 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 42 to 61 './outfiles/outfile02' '>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile02'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5adc95c68990 left=(nil), right=(nil), redir=(nil), prev=0x5adc95c688c0, next=0x5adc95c68b20 left=(nil), right=(nil), redir=(nil), prev=0x5adc95c68990, next=0x5adc95c68b70 left=(nil), right=(nil), redir=(nil), prev=0x5adc95c68b20, next=0x5adc95c68c40 left=(nil), right=(nil), redir=(nil), prev=0x5adc95c68b70, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5adc95c68990 left=(nil), right=(nil), redir=(nil), prev=0x5adc95c68b20, next=0x5adc95c68c40 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5adc95c68990, next=0x5adc95c68b70 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5adc95c68990 left=(nil), right=(nil), redir=(nil), prev=0x5adc95c68b20, next=0x5adc95c68c40 left=0x5adc95c688c0, right=0x5adc95c68b70, redir=(nil), prev=0x5adc95c68990, next=0x5adc95c68b70 left=0x5adc95c688c0, right=0x5adc95c68b70, redir=(nil), prev=0x5adc95c68990, next=0x5adc95c68b70 Building redirection AST 'echo' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5adc95c688c0, right=0x5adc95c68b70, redir=(nil), prev=0x5adc95c68990, next=0x5adc95c68b70 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5adc95c68990 left=(nil), right=(nil), redir=(nil), prev=0x5adc95c68b20, next=0x5adc95c68c40 Created left child with pid=795040 Created right child with pid=795041 Parent closing pipe ends Waiting for left child (pid=795040) ===== LEFT PIPE EXECUTION DETAILS ===== ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5adc95c68990 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 left=(nil), right=(nil), redir=(nil), prev=0x5adc95c68b20, next=0x5adc95c68c40 [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 Left child exited with status 0 Waiting for right child (pid=795041) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test  96: ‚ùå echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini error = ( 'echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=> Handling redirection type=> Handling redirection token at pos 8 '>' Looking for filename at position 9 Processing filename at pos 9 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 9 to 28 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 30, type=> Handling redirection type=> Handling redirection token at pos 30 '>' Looking for filename at position 31 Processing filename at pos 31 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 31 to 61 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 63, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x587751b657a0, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x587751b657a0, next=(nil) Successfully appended argument 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x587751b655c0 left=(nil), right=(nil), redir=(nil), prev=0x587751b654d0, next=0x587751b65750 left=(nil), right=(nil), redir=(nil), prev=0x587751b655c0, next=0x587751b657a0 left=(nil), right=(nil), redir=(nil), prev=0x587751b65750, next=0x587751b65850 left=(nil), right=(nil), redir=(nil), prev=0x587751b657a0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x587751b655c0 left=(nil), right=(nil), redir=(nil), prev=0x587751b657a0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x587751b65750, next=0x587751b65850 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x587751b655c0 left=(nil), right=(nil), redir=(nil), prev=0x587751b657a0, next=(nil) left=0x587751b654d0, right=0x587751b65850, redir=(nil), prev=0x587751b65750, next=0x587751b65850 left=0x587751b654d0, right=0x587751b65850, redir=(nil), prev=0x587751b65750, next=0x587751b65850 Building redirection AST 'echo' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x587751b654d0, right=0x587751b65850, redir=(nil), prev=0x587751b65750, next=0x587751b65850 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x587751b655c0 left=(nil), right=(nil), redir=(nil), prev=0x587751b657a0, next=(nil) Created left child with pid=795088 Created right child with pid=795089 Parent closing pipe ends Waiting for left child (pid=795088) ===== RIGHT PIPE EXECUTION DETAILS ===== ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x587751b657a0, next=(nil) [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x587751b655c0 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 Left child exited with status 0 Waiting for right child (pid=795089) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( Permission denied)

Test  99: ‚ùå echo hi | echo bye >./test_files/invalid_permission 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >./test_files/invalid_permission' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 8, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5afa623e19b0, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5afa623e19b0, next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 19, type=> Handling redirection type=> Handling redirection token at pos 19 '>' Looking for filename at position 20 Processing filename at pos 20 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 20 to 50 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5afa623e19b0 left=(nil), right=(nil), redir=(nil), prev=0x5afa623c5d10, next=0x5afa623e1b20 left=(nil), right=(nil), redir=(nil), prev=0x5afa623e19b0, next=0x5afa623e1b70 left=(nil), right=(nil), redir=(nil), prev=0x5afa623e1b20, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5afa623e19b0 left=(nil), right=(nil), redir=(nil), prev=0x5afa623e19b0, next=0x5afa623e1b70 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5afa623c5d10, next=0x5afa623e1b20 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5afa623e19b0 left=(nil), right=(nil), redir=(nil), prev=0x5afa623e19b0, next=0x5afa623e1b70 left=0x5afa623c5d10, right=0x5afa623e1b20, redir=(nil), prev=0x5afa623c5d10, next=0x5afa623e1b20 left=0x5afa623c5d10, right=0x5afa623e1b20, redir=(nil), prev=0x5afa623c5d10, next=0x5afa623e1b20 Building redirection AST 'echo' 'echo' '>' with filename './test_files/invalid_permission' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5afa623c5d10, right=0x5afa623e1b20, redir=(nil), prev=0x5afa623c5d10, next=0x5afa623e1b20 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5afa623e19b0 left=(nil), right=(nil), redir=(nil), prev=0x5afa623e19b0, next=0x5afa623e1b70 Created left child with pid=795228 Created right child with pid=795229 Parent closing pipe ends Waiting for left child (pid=795228) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5afa623e19b0 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 Left child exited with status 0 Waiting for right child (pid=795229) ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5afa623e19b0, next=0x5afa623e1b70 [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( Permission denied)
Test 100: ‚ùå echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (hi echo bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 8, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 10, type=> Handling redirection type=> Handling redirection token at pos 10 '>' Looking for filename at position 11 Processing filename at pos 11 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 11 to 30 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'bye'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 41, type=> Handling redirection type=> Handling redirection token at pos 41 '>' Looking for filename at position 42 Processing filename at pos 42 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 42 to 72 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x59fde8d3e360 left=(nil), right=(nil), redir=(nil), prev=0x59fde8d3e270, next=0x59fde8d3e4f0 left=(nil), right=(nil), redir=(nil), prev=0x59fde8d3e360, next=0x59fde8d3e540 left=(nil), right=(nil), redir=(nil), prev=0x59fde8d3e4f0, next=0x59fde8d3e610 left=(nil), right=(nil), redir=(nil), prev=0x59fde8d3e540, next=0x59fde8d3e6e0 left=(nil), right=(nil), redir=(nil), prev=0x59fde8d3e610, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x59fde8d3e360 No pipe root created Building redirection AST 'echo' '>' with filename './outfiles/outfile01' Processing redirection type=>, filename='./outfiles/outfile01' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection './outfiles/outfile01' Found argument 'echo' to add to command 'echo' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x59fde8d3e360 Adding arg='echo', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x59fde8d3e360 Successfully appended argument Found argument 'bye' to add to command 'echo' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x59fde8d3e360 Adding arg='bye', quote_type=0 3 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x59fde8d3e360 Successfully appended argument Finished collecting args for command 'echo' Set redir_root to redirection with filename './outfiles/outfile01' '>' with filename './test_files/invalid_permission' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test 101: ‚ùå echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 8, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5cca72c9c150, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5cca72c9c150, next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 19, type=> Handling redirection type=> Handling redirection token at pos 19 '>' Looking for filename at position 20 Processing filename at pos 20 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 20 to 50 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 52, type=> Handling redirection type=> Handling redirection token at pos 52 '>' Looking for filename at position 53 Processing filename at pos 53 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 53 to 72 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile01'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./test_files/invalid_permission' Checking redirection node type=>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5cca72c9c150 left=(nil), right=(nil), redir=(nil), prev=0x5cca72c9c0a0, next=0x5cca72c9c2e0 left=(nil), right=(nil), redir=(nil), prev=0x5cca72c9c150, next=0x5cca72c9c350 left=(nil), right=(nil), redir=(nil), prev=0x5cca72c9c2e0, next=0x5cca72c9c4e0 left=(nil), right=(nil), redir=(nil), prev=0x5cca72c9c350, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5cca72c9c150 left=(nil), right=(nil), redir=(nil), prev=0x5cca72c9c150, next=0x5cca72c9c350 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5cca72c9c0a0, next=0x5cca72c9c2e0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5cca72c9c150 left=(nil), right=(nil), redir=(nil), prev=0x5cca72c9c150, next=0x5cca72c9c350 left=0x5cca72c9c0a0, right=0x5cca72c9c2e0, redir=(nil), prev=0x5cca72c9c0a0, next=0x5cca72c9c2e0 left=0x5cca72c9c0a0, right=0x5cca72c9c2e0, redir=(nil), prev=0x5cca72c9c0a0, next=0x5cca72c9c2e0 Building redirection AST 'echo' 'echo' '>' with filename './test_files/invalid_permission' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5cca72c9c0a0, right=0x5cca72c9c2e0, redir=(nil), prev=0x5cca72c9c0a0, next=0x5cca72c9c2e0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5cca72c9c150 left=(nil), right=(nil), redir=(nil), prev=0x5cca72c9c150, next=0x5cca72c9c350 Created left child with pid=795316 Created right child with pid=795317 Parent closing pipe ends Waiting for left child (pid=795316) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5cca72c9c150 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5cca72c9c150, next=0x5cca72c9c350 [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 Left child exited with status 0 Waiting for right child (pid=795317) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( Permission denied)
Test 102: ‚ùå cat <"./test_files/infile" >./test_files/invalid_permission 
mini exit code =
bash exit code = 1
mini error = ( 'cat <"./test_files/infile" >./test_files/invalid_permission' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 25 Extracted quoted filename from pos 6 to 24 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 27, type=> Handling redirection type=> Handling redirection token at pos 27 '>' Looking for filename at position 28 Processing filename at pos 28 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 28 to 58 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=<, filename='./test_files/infile' Checking redirection node type=>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6385def346e0 left=(nil), right=(nil), redir=(nil), prev=0x6385def34610, next=0x6385def34790 left=(nil), right=(nil), redir=(nil), prev=0x6385def346e0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6385def346e0 No pipe root created Building redirection AST 'cat' '<' with filename './test_files/infile' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test 103: ‚ùå cat >./test_files/invalid_permission <"./test_files/infile" 
mini exit code =
bash exit code = 1
mini error = ( 'cat >./test_files/invalid_permission <"./test_files/infile"' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 4, type=> Handling redirection type=> Handling redirection token at pos 4 '>' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 5 to 35 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 37, type=< Handling redirection type=< Handling redirection token at pos 37 '<' Looking for filename at position 38 Processing filename at pos 38 '"' Found opening " quote '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'f' 'i' 'l' 'e' Found closing " quote at pos 58 Extracted quoted filename from pos 39 to 57 './test_files/infile' '<' './test_files/infile' Redirection token handled successfully Redirection operator='<', filename='./test_files/infile' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/infile'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./test_files/invalid_permission' Checking redirection node type=<, filename='./test_files/infile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5eefd7955190 left=(nil), right=(nil), redir=(nil), prev=0x5eefd79550c0, next=0x5eefd7955240 left=(nil), right=(nil), redir=(nil), prev=0x5eefd7955190, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5eefd7955190 No pipe root created Building redirection AST 'cat' '>' with filename './test_files/invalid_permission' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test 104: ‚ùå cat <missing >./outfiles/outfile01 
mini exit code =
bash exit code = 1
mini error = ( 'cat <missing >./outfiles/outfile01' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 5 to 11 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 13, type=> Handling redirection type=> Handling redirection token at pos 13 '>' Looking for filename at position 14 Processing filename at pos 14 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 14 to 33 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile01'] -> NULL Validating redirection targets Checking redirection node type=<, filename='missing' Checking redirection node type=>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b2afa001980 left=(nil), right=(nil), redir=(nil), prev=0x5b2af9fc3eb0, next=0x5b2afa001a10 left=(nil), right=(nil), redir=(nil), prev=0x5b2afa001980, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b2afa001980 No pipe root created Building redirection AST 'cat' '<' with filename 'missing' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( No such file or directory)
Test 105: ‚ùå cat >./outfiles/outfile01 <missing 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini exit code =
bash exit code = 1
mini error = ( 'cat >./outfiles/outfile01 <missing' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 4, type=> Handling redirection type=> Handling redirection token at pos 4 '>' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 5 to 24 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 26, type=< Handling redirection type=< Handling redirection token at pos 26 '<' Looking for filename at position 27 Processing filename at pos 27 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 27 to 33 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 'missing'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=<, filename='missing' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x634e0379ce90 left=(nil), right=(nil), redir=(nil), prev=0x634e03781610, next=0x634e0379cf40 left=(nil), right=(nil), redir=(nil), prev=0x634e0379ce90, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x634e0379ce90 No pipe root created Building redirection AST 'cat' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( No such file or directory)
Test 106: ‚ùå cat <missing >./test_files/invalid_permission 
mini exit code =
bash exit code = 1
mini error = ( 'cat <missing >./test_files/invalid_permission' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 5 to 11 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 13, type=> Handling redirection type=> Handling redirection token at pos 13 '>' Looking for filename at position 14 Processing filename at pos 14 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 14 to 44 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=<, filename='missing' Checking redirection node type=>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x618f2de2ea90 left=(nil), right=(nil), redir=(nil), prev=0x618f2de2e9c0, next=0x618f2de2eb40 left=(nil), right=(nil), redir=(nil), prev=0x618f2de2ea90, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x618f2de2ea90 No pipe root created Building redirection AST 'cat' '<' with filename 'missing' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( No such file or directory)
Test 107: ‚ùå cat >./test_files/invalid_permission <missing 
mini exit code =
bash exit code = 1
mini error = ( 'cat >./test_files/invalid_permission <missing' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 4, type=> Handling redirection type=> Handling redirection token at pos 4 '>' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 5 to 35 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 37, type=< Handling redirection type=< Handling redirection token at pos 37 '<' Looking for filename at position 38 Processing filename at pos 38 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 38 to 44 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 'missing'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./test_files/invalid_permission' Checking redirection node type=<, filename='missing' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x56677ae61a40 left=(nil), right=(nil), redir=(nil), prev=0x56677ae61970, next=0x56677ae61af0 left=(nil), right=(nil), redir=(nil), prev=0x56677ae61a40, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x56677ae61a40 No pipe root created Building redirection AST 'cat' '>' with filename './test_files/invalid_permission' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test 108: ‚ùå cat >./outfiles/outfile01 <missing >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini exit code =
bash exit code = 1
mini error = ( 'cat >./outfiles/outfile01 <missing >./test_files/invalid_permission' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 4, type=> Handling redirection type=> Handling redirection token at pos 4 '>' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 5 to 24 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 26, type=< Handling redirection type=< Handling redirection token at pos 26 '<' Looking for filename at position 27 Processing filename at pos 27 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 27 to 33 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 35, type=> Handling redirection type=> Handling redirection token at pos 35 '>' Looking for filename at position 36 Processing filename at pos 36 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 36 to 66 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=<, filename='missing' Checking redirection node type=>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5df6f85bd2c0 left=(nil), right=(nil), redir=(nil), prev=0x5df6f85bd1f0, next=0x5df6f85bd370 left=(nil), right=(nil), redir=(nil), prev=0x5df6f85bd2c0, next=0x5df6f85bd440 left=(nil), right=(nil), redir=(nil), prev=0x5df6f85bd370, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5df6f85bd2c0 No pipe root created Building redirection AST 'cat' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( No such file or directory)
Test 109: ‚ùå ls >>./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'ls >>./outfiles/outfile01' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=>> Handling redirection type=>> Handling redirection token at pos 3 '>>' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 5 to 24 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile01'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5fa305df66b0 left=(nil), right=(nil), redir=(nil), prev=0x5fa305db8f60, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5fa305df66b0 No pipe root created Building redirection AST 'ls' '>>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test 110: ‚ùå ls >>      ./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'ls >> ./outfiles/outfile01' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=>> Handling redirection type=>> Handling redirection token at pos 3 '>>' Looking for filename at position 5 Processing filename at pos 5 Skipping whitespace ' ' at pos 5 Skipping whitespace ' ' at pos 6 Skipping whitespace ' ' at pos 7 Skipping whitespace ' ' at pos 8 Skipping whitespace ' ' at pos 9 Skipping whitespace ' ' at pos 10 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 11 to 30 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile01'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x596a1cf02e10 left=(nil), right=(nil), redir=(nil), prev=0x596a1cee7180, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x596a1cf02e10 No pipe root created Building redirection AST 'ls' '>>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test 111: ‚ùå ls >>./outfiles/outfile01 >./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'ls >>./outfiles/outfile01 >./outfiles/outfile01' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=>> Handling redirection type=>> Handling redirection token at pos 3 '>>' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 5 to 24 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 26, type=> Handling redirection type=> Handling redirection token at pos 26 '>' Looking for filename at position 27 Processing filename at pos 27 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 27 to 46 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile01'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5fa9c9d10be0 left=(nil), right=(nil), redir=(nil), prev=0x5fa9c9cd5740, next=0x5fa9c9d10cb0 left=(nil), right=(nil), redir=(nil), prev=0x5fa9c9d10be0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5fa9c9d10be0 No pipe root created Building redirection AST 'ls' '>>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test 112: ‚ùå ls >./outfiles/outfile01 >>./outfiles/outfile01 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'ls >./outfiles/outfile01 >>./outfiles/outfile01' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 4 to 23 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 25, type=>> Handling redirection type=>> Handling redirection token at pos 25 '>>' Looking for filename at position 27 Processing filename at pos 27 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 27 to 46 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile01'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5668c093f980 left=(nil), right=(nil), redir=(nil), prev=0x5668c093f8b0, next=0x5668c093fa30 left=(nil), right=(nil), redir=(nil), prev=0x5668c093f980, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5668c093f980 No pipe root created Building redirection AST 'ls' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test 113: ‚ùå ls >./outfiles/outfile01 >>./outfiles/outfile01 >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'ls >./outfiles/outfile01 >>./outfiles/outfile01 >./outfiles/outfile02' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 4 to 23 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 25, type=>> Handling redirection type=>> Handling redirection token at pos 25 '>>' Looking for filename at position 27 Processing filename at pos 27 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 27 to 46 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 48, type=> Handling redirection type=> Handling redirection token at pos 48 '>' Looking for filename at position 49 Processing filename at pos 49 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 49 to 68 './outfiles/outfile02' '>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile02'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6234eb8168d0 left=(nil), right=(nil), redir=(nil), prev=0x6234eb816800, next=0x6234eb816980 left=(nil), right=(nil), redir=(nil), prev=0x6234eb8168d0, next=0x6234eb816a50 left=(nil), right=(nil), redir=(nil), prev=0x6234eb816980, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x6234eb8168d0 No pipe root created Building redirection AST 'ls' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test 114: ‚ùå ls >>./outfiles/outfile01 >>./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'ls >>./outfiles/outfile01 >>./outfiles/outfile02' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=>> Handling redirection type=>> Handling redirection token at pos 3 '>>' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 5 to 24 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 26, type=>> Handling redirection type=>> Handling redirection token at pos 26 '>>' Looking for filename at position 28 Processing filename at pos 28 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 28 to 47 './outfiles/outfile02' '>>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile02'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./outfiles/outfile01' Checking redirection node type=>>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5abec8404840 left=(nil), right=(nil), redir=(nil), prev=0x5abec8404770, next=0x5abec84048f0 left=(nil), right=(nil), redir=(nil), prev=0x5abec8404840, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5abec8404840 No pipe root created Building redirection AST 'ls' '>>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ()
Test 115: ‚ùå ls >>./test_files/invalid_permission 
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >>./test_files/invalid_permission' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=>> Handling redirection type=>> Handling redirection token at pos 3 '>>' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 5 to 35 './test_files/invalid_permission' '>>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5fd1c5cc97c0 left=(nil), right=(nil), redir=(nil), prev=0x5fd1c5cadb30, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5fd1c5cc97c0 No pipe root created Building redirection AST 'ls' '>>' with filename './test_files/invalid_permission' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test 116: ‚ùå ls >>./test_files/invalid_permission >>./outfiles/outfile01 
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >>./test_files/invalid_permission >>./outfiles/outfile01' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=>> Handling redirection type=>> Handling redirection token at pos 3 '>>' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 5 to 35 './test_files/invalid_permission' '>>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 37, type=>> Handling redirection type=>> Handling redirection token at pos 37 '>>' Looking for filename at position 39 Processing filename at pos 39 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 39 to 58 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile01'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./test_files/invalid_permission' Checking redirection node type=>>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5561094b40a0 left=(nil), right=(nil), redir=(nil), prev=0x5561094b3fd0, next=0x5561094b4150 left=(nil), right=(nil), redir=(nil), prev=0x5561094b40a0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5561094b40a0 No pipe root created Building redirection AST 'ls' '>>' with filename './test_files/invalid_permission' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test 117: ‚ùå ls >>./outfiles/outfile01 >>./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >>./outfiles/outfile01 >>./test_files/invalid_permission' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=>> Handling redirection type=>> Handling redirection token at pos 3 '>>' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 5 to 24 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 26, type=>> Handling redirection type=>> Handling redirection token at pos 26 '>>' Looking for filename at position 28 Processing filename at pos 28 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 28 to 58 './test_files/invalid_permission' '>>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./outfiles/outfile01' Checking redirection node type=>>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f5187742160 left=(nil), right=(nil), redir=(nil), prev=0x5f5187742090, next=0x5f5187742210 left=(nil), right=(nil), redir=(nil), prev=0x5f5187742160, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f5187742160 No pipe root created Building redirection AST 'ls' '>>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test 118: ‚ùå ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=> Handling redirection type=> Handling redirection token at pos 3 '>' Looking for filename at position 4 Processing filename at pos 4 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 4 to 23 './outfiles/outfile01' '>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 25, type=>> Handling redirection type=>> Handling redirection token at pos 25 '>>' Looking for filename at position 27 Processing filename at pos 27 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 27 to 57 './test_files/invalid_permission' '>>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 59, type=>> Handling redirection type=>> Handling redirection token at pos 59 '>>' Looking for filename at position 61 Processing filename at pos 61 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 61 to 80 './outfiles/outfile02' '>>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile02'] -> NULL Validating redirection targets Checking redirection node type=>, filename='./outfiles/outfile01' Checking redirection node type=>>, filename='./test_files/invalid_permission' Checking redirection node type=>>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5653030d6b50 left=(nil), right=(nil), redir=(nil), prev=0x5653030d6a80, next=0x5653030d6c00 left=(nil), right=(nil), redir=(nil), prev=0x5653030d6b50, next=0x5653030d6cd0 left=(nil), right=(nil), redir=(nil), prev=0x5653030d6c00, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5653030d6b50 No pipe root created Building redirection AST 'ls' '>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test 119: ‚ùå ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02 
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 3, type=< Handling redirection type=< Handling redirection token at pos 3 '<' Looking for filename at position 4 Processing filename at pos 4 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 4 to 10 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 12, type=>> Handling redirection type=>> Handling redirection token at pos 12 '>>' Looking for filename at position 14 Processing filename at pos 14 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 14 to 44 './test_files/invalid_permission' '>>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 46, type=>> Handling redirection type=>> Handling redirection token at pos 46 '>>' Looking for filename at position 48 Processing filename at pos 48 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 48 to 67 './outfiles/outfile02' '>>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile02'] -> NULL Validating redirection targets Checking redirection node type=<, filename='missing' Checking redirection node type=>>, filename='./test_files/invalid_permission' Checking redirection node type=>>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x609124ff9150 left=(nil), right=(nil), redir=(nil), prev=0x609124ff9080, next=0x609124ff9200 left=(nil), right=(nil), redir=(nil), prev=0x609124ff9150, next=0x609124ff92d0 left=(nil), right=(nil), redir=(nil), prev=0x609124ff9200, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x609124ff9150 No pipe root created Building redirection AST 'ls' '<' with filename 'missing' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( No such file or directory)
Test 120: ‚ùå ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing 
mini output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing' 'l' Handling regular token 's' Handling regular token ' ' Handling regular token Creating token type=CMD, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 3, type=>> Handling redirection type=>> Handling redirection token at pos 3 '>>' Looking for filename at position 5 Processing filename at pos 5 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 5 to 35 './test_files/invalid_permission' '>>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 37, type=>> Handling redirection type=>> Handling redirection token at pos 37 '>>' Looking for filename at position 39 Processing filename at pos 39 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 39 to 58 './outfiles/outfile02' '>>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 60, type=< Handling redirection type=< Handling redirection token at pos 60 '<' Looking for filename at position 61 Processing filename at pos 61 'm' 'm' 'i' 's' 's' 'i' 'n' 'g' Extracted non-quoted filename from pos 61 to 67 'missing' '<' 'missing' Redirection token handled successfully Redirection operator='<', filename='missing' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 'missing'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./test_files/invalid_permission' Checking redirection node type=>>, filename='./outfiles/outfile02' Checking redirection node type=<, filename='missing' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b27bf9ca240 left=(nil), right=(nil), redir=(nil), prev=0x5b27bf9ca170, next=0x5b27bf9ca2f0 left=(nil), right=(nil), redir=(nil), prev=0x5b27bf9ca240, next=0x5b27bf9ca3a0 left=(nil), right=(nil), redir=(nil), prev=0x5b27bf9ca2f0, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b27bf9ca240 No pipe root created Building redirection AST 'ls' '>>' with filename './test_files/invalid_permission' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( Permission denied)
Test 121: ‚ùå echo hi >>./outfiles/outfile01 | echo bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
mini error = ( 'echo hi >>./outfiles/outfile01 | echo bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=>> Handling redirection type=>> Handling redirection token at pos 8 '>>' Looking for filename at position 10 Processing filename at pos 10 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 10 to 29 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 31, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5f1853b5dea0, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5f1853b5dea0, next=(nil) Successfully appended argument 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./outfiles/outfile01' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f1853b5dd10 left=(nil), right=(nil), redir=(nil), prev=0x5f1853b5dc40, next=0x5f1853b5dea0 left=(nil), right=(nil), redir=(nil), prev=0x5f1853b5dd10, next=0x5f1853b5def0 left=(nil), right=(nil), redir=(nil), prev=0x5f1853b5dea0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f1853b5dd10 left=(nil), right=(nil), redir=(nil), prev=0x5f1853b5dea0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5f1853b5dd10, next=0x5f1853b5def0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f1853b5dd10 left=(nil), right=(nil), redir=(nil), prev=0x5f1853b5dea0, next=(nil) left=0x5f1853b5dc40, right=0x5f1853b5def0, redir=(nil), prev=0x5f1853b5dd10, next=0x5f1853b5def0 left=0x5f1853b5dc40, right=0x5f1853b5def0, redir=(nil), prev=0x5f1853b5dd10, next=0x5f1853b5def0 Building redirection AST 'echo' '>>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5f1853b5dc40, right=0x5f1853b5def0, redir=(nil), prev=0x5f1853b5dd10, next=0x5f1853b5def0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f1853b5dd10 left=(nil), right=(nil), redir=(nil), prev=0x5f1853b5dea0, next=(nil) Created left child with pid=796161 ===== LEFT PIPE EXECUTION DETAILS ===== Created right child with pid=796162 Parent closing pipe ends Waiting for left child (pid=796161) left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5f1853b5dd10 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5f1853b5dea0, next=(nil) [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 Left child exited with status 0 Waiting for right child (pid=796162) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test 122: ‚ùå echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
mini error = ( 'echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=>> Handling redirection type=>> Handling redirection token at pos 8 '>>' Looking for filename at position 10 Processing filename at pos 10 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 10 to 29 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 31, type=>> Handling redirection type=>> Handling redirection token at pos 31 '>>' Looking for filename at position 33 Processing filename at pos 33 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 33 to 52 './outfiles/outfile02' '>>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 54, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x59dcbdd1d410, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x59dcbdd1d410, next=(nil) Successfully appended argument 'echo'] -> NULL Tokenization completed with result=1 'echo'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./outfiles/outfile01' Checking redirection node type=>>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x59dcbdd1d230 left=(nil), right=(nil), redir=(nil), prev=0x59dcbdd1d160, next=0x59dcbdd1d3c0 left=(nil), right=(nil), redir=(nil), prev=0x59dcbdd1d230, next=0x59dcbdd1d410 left=(nil), right=(nil), redir=(nil), prev=0x59dcbdd1d3c0, next=0x59dcbdd1d4e0 left=(nil), right=(nil), redir=(nil), prev=0x59dcbdd1d410, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x59dcbdd1d230 left=(nil), right=(nil), redir=(nil), prev=0x59dcbdd1d410, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x59dcbdd1d3c0, next=0x59dcbdd1d4e0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x59dcbdd1d230 left=(nil), right=(nil), redir=(nil), prev=0x59dcbdd1d410, next=(nil) left=0x59dcbdd1d160, right=0x59dcbdd1d4e0, redir=(nil), prev=0x59dcbdd1d3c0, next=0x59dcbdd1d4e0 left=0x59dcbdd1d160, right=0x59dcbdd1d4e0, redir=(nil), prev=0x59dcbdd1d3c0, next=0x59dcbdd1d4e0 Building redirection AST 'echo' '>>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x59dcbdd1d160, right=0x59dcbdd1d4e0, redir=(nil), prev=0x59dcbdd1d3c0, next=0x59dcbdd1d4e0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x59dcbdd1d230 left=(nil), right=(nil), redir=(nil), prev=0x59dcbdd1d410, next=(nil) Created left child with pid=796209 Created right child with pid=796210 Parent closing pipe ends Waiting for left child (pid=796209) ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x59dcbdd1d410, next=(nil) [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x59dcbdd1d230 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 Left child exited with status 0 Waiting for right child (pid=796210) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()

Test 124: ‚ùå echo hi | echo bye >>./outfiles/outfile01 >>./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
bye
mini output = (bye)
bash output = ()
mini error = ( 'echo hi | echo bye >>./outfiles/outfile01 >>./outfiles/outfile02' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 8, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x62fffa9f87c0, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x62fffa9f87c0, next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 19, type=>> Handling redirection type=>> Handling redirection token at pos 19 '>>' Looking for filename at position 21 Processing filename at pos 21 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 21 to 40 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 42, type=>> Handling redirection type=>> Handling redirection token at pos 42 '>>' Looking for filename at position 44 Processing filename at pos 44 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 44 to 63 './outfiles/outfile02' '>>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile02'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./outfiles/outfile01' Checking redirection node type=>>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x62fffa9f87c0 left=(nil), right=(nil), redir=(nil), prev=0x62fffa9dcb30, next=0x62fffa9f8950 left=(nil), right=(nil), redir=(nil), prev=0x62fffa9f87c0, next=0x62fffa9f89a0 left=(nil), right=(nil), redir=(nil), prev=0x62fffa9f8950, next=0x62fffa9f8b30 left=(nil), right=(nil), redir=(nil), prev=0x62fffa9f89a0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x62fffa9f87c0 left=(nil), right=(nil), redir=(nil), prev=0x62fffa9f87c0, next=0x62fffa9f89a0 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x62fffa9dcb30, next=0x62fffa9f8950 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x62fffa9f87c0 left=(nil), right=(nil), redir=(nil), prev=0x62fffa9f87c0, next=0x62fffa9f89a0 left=0x62fffa9dcb30, right=0x62fffa9f8950, redir=(nil), prev=0x62fffa9dcb30, next=0x62fffa9f8950 left=0x62fffa9dcb30, right=0x62fffa9f8950, redir=(nil), prev=0x62fffa9dcb30, next=0x62fffa9f8950 Building redirection AST 'echo' 'echo' '>>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x62fffa9dcb30, right=0x62fffa9f8950, redir=(nil), prev=0x62fffa9dcb30, next=0x62fffa9f8950 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x62fffa9f87c0 left=(nil), right=(nil), redir=(nil), prev=0x62fffa9f87c0, next=0x62fffa9f89a0 Created left child with pid=796303 Created right child with pid=796304 Parent closing pipe ends Waiting for left child (pid=796303) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x62fffa9f87c0 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 Left child exited with status 0 Waiting for right child (pid=796304) ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x62fffa9f87c0, next=0x62fffa9f89a0 [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()
Test 125: ‚ùå echo hi >>./outfiles/outfile01 | echo bye >>./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
Only in ./bash_outfiles: outfile02
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
hi
bye
mini output = (bye)
bash output = ()
mini error = ( 'echo hi >>./outfiles/outfile01 | echo bye >>./outfiles/outfile02' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 8, type=>> Handling redirection type=>> Handling redirection token at pos 8 '>>' Looking for filename at position 10 Processing filename at pos 10 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 10 to 29 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 31, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5c705cc45f80, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5c705cc45f80, next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 42, type=>> Handling redirection type=>> Handling redirection token at pos 42 '>>' Looking for filename at position 44 Processing filename at pos 44 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '2' Extracted non-quoted filename from pos 44 to 63 './outfiles/outfile02' '>>' './outfiles/outfile02' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile02' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile02'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./outfiles/outfile01' Checking redirection node type=>>, filename='./outfiles/outfile02' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c705cc45df0 left=(nil), right=(nil), redir=(nil), prev=0x5c705cc2a160, next=0x5c705cc45f80 left=(nil), right=(nil), redir=(nil), prev=0x5c705cc45df0, next=0x5c705cc45fd0 left=(nil), right=(nil), redir=(nil), prev=0x5c705cc45f80, next=0x5c705cc460a0 left=(nil), right=(nil), redir=(nil), prev=0x5c705cc45fd0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c705cc45df0 left=(nil), right=(nil), redir=(nil), prev=0x5c705cc45f80, next=0x5c705cc460a0 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5c705cc45df0, next=0x5c705cc45fd0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c705cc45df0 left=(nil), right=(nil), redir=(nil), prev=0x5c705cc45f80, next=0x5c705cc460a0 left=0x5c705cc2a160, right=0x5c705cc45fd0, redir=(nil), prev=0x5c705cc45df0, next=0x5c705cc45fd0 left=0x5c705cc2a160, right=0x5c705cc45fd0, redir=(nil), prev=0x5c705cc45df0, next=0x5c705cc45fd0 Building redirection AST 'echo' '>>' with filename './outfiles/outfile01' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5c705cc2a160, right=0x5c705cc45fd0, redir=(nil), prev=0x5c705cc45df0, next=0x5c705cc45fd0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c705cc45df0 left=(nil), right=(nil), redir=(nil), prev=0x5c705cc45f80, next=0x5c705cc460a0 Created left child with pid=796351 Created right child with pid=796352 Parent closing pipe ends Waiting for left child (pid=796351) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5c705cc45df0 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 Left child exited with status 0 Waiting for right child (pid=796352) ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5c705cc45f80, next=0x5c705cc460a0 [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ()

Test 128: ‚ùå echo hi | echo bye >>./test_files/invalid_permission 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >>./test_files/invalid_permission' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 8, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5e6335319030, next=(nil) Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5e6335319030, next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 19, type=>> Handling redirection type=>> Handling redirection token at pos 19 '>>' Looking for filename at position 21 Processing filename at pos 21 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 21 to 51 './test_files/invalid_permission' '>>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5e6335319030 left=(nil), right=(nil), redir=(nil), prev=0x5e6335318f60, next=0x5e63353191c0 left=(nil), right=(nil), redir=(nil), prev=0x5e6335319030, next=0x5e6335319210 left=(nil), right=(nil), redir=(nil), prev=0x5e63353191c0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5e6335319030 left=(nil), right=(nil), redir=(nil), prev=0x5e6335319030, next=0x5e6335319210 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5e6335318f60, next=0x5e63353191c0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5e6335319030 left=(nil), right=(nil), redir=(nil), prev=0x5e6335319030, next=0x5e6335319210 left=0x5e6335318f60, right=0x5e63353191c0, redir=(nil), prev=0x5e6335318f60, next=0x5e63353191c0 left=0x5e6335318f60, right=0x5e63353191c0, redir=(nil), prev=0x5e6335318f60, next=0x5e63353191c0 Building redirection AST 'echo' 'echo' '>>' with filename './test_files/invalid_permission' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5e6335318f60, right=0x5e63353191c0, redir=(nil), prev=0x5e6335318f60, next=0x5e63353191c0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5e6335319030 left=(nil), right=(nil), redir=(nil), prev=0x5e6335319030, next=0x5e6335319210 Created left child with pid=796491 Created right child with pid=796492 Parent closing pipe ends Waiting for left child (pid=796491) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5e6335319030 [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5e6335319030, next=0x5e6335319210 [0]='echo' [1]='bye' None Stdin redirected from pipe read end 'echo' 'bye' 0 Left child exited with status 0 Waiting for right child (pid=796492) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( Permission denied)
Test 129: ‚ùå echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission' 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=CMD, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument 'echo'] -> NULL Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 8, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' 'echo'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 15, type=>> Handling redirection type=>> Handling redirection token at pos 15 '>>' Looking for filename at position 17 Processing filename at pos 17 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' '0' '1' Extracted non-quoted filename from pos 17 to 36 './outfiles/outfile01' '>>' './outfiles/outfile01' Redirection token handled successfully Redirection operator='>>', filename='./outfiles/outfile01' handle_redirection_token returned 1 Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'b' Handling regular token 'y' Handling regular token 'e' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='bye' Created node with args[0]='bye' 'bye'] -> NULL Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 42, type=> Handling redirection type=> Handling redirection token at pos 42 '>' Looking for filename at position 43 Processing filename at pos 43 '.' '.' '/' 't' 'e' 's' 't' '_' 'f' 'i' 'l' 'e' 's' '/' 'i' 'n' 'v' 'a' 'l' 'i' 'd' '_' 'p' 'e' 'r' 'm' 'i' 's' 's' 'i' 'o' 'n' Extracted non-quoted filename from pos 43 to 73 './test_files/invalid_permission' '>' './test_files/invalid_permission' Redirection token handled successfully Redirection operator='>', filename='./test_files/invalid_permission' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets Checking redirection node type=>>, filename='./outfiles/outfile01' Checking redirection node type=>, filename='./test_files/invalid_permission' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b75c4e22f10 left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e22e60, next=0x5b75c4e230a0 left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e22f10, next=0x5b75c4e23110 left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e230a0, next=0x5b75c4e231e0 left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e23110, next=0x5b75c4e232b0 left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e231e0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b75c4e22f10 left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e22f10, next=0x5b75c4e23110 ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e22e60, next=0x5b75c4e230a0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b75c4e22f10 left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e22f10, next=0x5b75c4e23110 left=0x5b75c4e22e60, right=0x5b75c4e230a0, redir=(nil), prev=0x5b75c4e22e60, next=0x5b75c4e230a0 left=0x5b75c4e22e60, right=0x5b75c4e230a0, redir=(nil), prev=0x5b75c4e22e60, next=0x5b75c4e230a0 Building redirection AST 'echo' 'echo' '>>' with filename './outfiles/outfile01' Processing redirection type=>>, filename='./outfiles/outfile01' Target command is 'echo' Set left pointer to command 'echo' Linking previous redirections for command 'echo' Checking for args after redirection './outfiles/outfile01' Found argument 'bye' to add to command 'echo' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e22f10, next=0x5b75c4e23110 Adding arg='bye', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e22f10, next=0x5b75c4e23110 Successfully appended argument Finished collecting args for command 'echo' Set redir_root to redirection with filename './outfiles/outfile01' '>' with filename './test_files/invalid_permission' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x5b75c4e22e60, right=0x5b75c4e230a0, redir=(nil), prev=0x5b75c4e22e60, next=0x5b75c4e230a0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b75c4e22f10 left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e22f10, next=0x5b75c4e23110 Created left child with pid=796537 Created right child with pid=796538 Parent closing pipe ends Waiting for left child (pid=796537) ===== RIGHT PIPE EXECUTION DETAILS ===== ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x5b75c4e22f10, next=0x5b75c4e23110 Type=CMD[0]='echo' , Args=[[1]='bye' , None'hi' Stdin redirected from pipe read end left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5b75c4e22f10 'bye' [0]='echo' [1]='hi' None Left stdout redirected to pipe write end 'echo' 'hi' 0 0 Left child exited with status 0 Waiting for right child (pid=796538) Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( Permission denied)
Test 130: ‚ùå cat <minishell.h>./outfiles/outfile 
mini exit code =
bash exit code = 1
mini error = ( 'cat <minishell.h>./outfiles/outfile' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 'm' 'm' 'i' 'n' 'i' 's' 'h' 'e' 'l' 'l' '.' 'h' Extracted non-quoted filename from pos 5 to 15 'minishell.h' '<' 'minishell.h' Redirection token handled successfully Redirection operator='<', filename='minishell.h' handle_redirection_token returned 1 Position update indicated, continuing '>' Handling regular token Processing operator '>' at pos 16, type=> Handling redirection type=> Handling redirection token at pos 16 '>' Looking for filename at position 17 Processing filename at pos 17 '.' '.' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' 's' '/' 'o' 'u' 't' 'f' 'i' 'l' 'e' Extracted non-quoted filename from pos 17 to 34 './outfiles/outfile' '>' './outfiles/outfile' Redirection token handled successfully Redirection operator='>', filename='./outfiles/outfile' handle_redirection_token returned 1 Position update indicated, continuing Tokenization completed with result=1 './outfiles/outfile'] -> NULL Validating redirection targets Checking redirection node type=<, filename='minishell.h' Checking redirection node type=>, filename='./outfiles/outfile' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5856e6359660 left=(nil), right=(nil), redir=(nil), prev=0x5856e633d9d0, next=0x5856e6359710 left=(nil), right=(nil), redir=(nil), prev=0x5856e6359660, next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x5856e6359660 No pipe root created Building redirection AST 'cat' '<' with filename 'minishell.h' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using first command as AST root)
bash error = ( No such file or directory)
Test 131: ‚ùå cat <minishell.h|ls 
mini exit code = wildcards
bash exit code = 0
mini error = ( 'cat <minishell.h|ls' 'c' Handling regular token 'a' Handling regular token 't' Handling regular token ' ' Handling regular token Creating token type=CMD, content='cat' Created node with args[0]='cat' 'cat'] -> NULL Position update indicated, continuing '<' Handling regular token Processing operator '<' at pos 4, type=< Handling redirection type=< Handling redirection token at pos 4 '<' Looking for filename at position 5 Processing filename at pos 5 'm' 'm' 'i' 'n' 'i' 's' 'h' 'e' 'l' 'l' '.' 'h' Extracted non-quoted filename from pos 5 to 15 'minishell.h' '<' 'minishell.h' Redirection token handled successfully Redirection operator='<', filename='minishell.h' handle_redirection_token returned 1 Position update indicated, continuing '|' Handling regular token Processing operator '|' at pos 16, type=| Creating token type=|, content='|' Created node with args[0]='|' '|'] -> NULL Position update indicated, continuing 'l' Handling regular token 's' Handling regular token Creating token type=ARGS, content='ls' Created node with args[0]='ls' 'ls'] -> NULL Tokenization completed with result=1 'ls'] -> NULL Validating redirection targets Checking redirection node type=<, filename='minishell.h' All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x652b20492830 left=(nil), right=(nil), redir=(nil), prev=0x652b20476ba0, next=0x652b204928e0 left=(nil), right=(nil), redir=(nil), prev=0x652b20492830, next=0x652b204929d0 left=(nil), right=(nil), redir=(nil), prev=0x652b204928e0, next=(nil) Found 2 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x652b20492830 left=(nil), right=(nil), redir=(nil), prev=0x652b204928e0, next=(nil) ===== SETTING UP PIPE NODE ===== left=(nil), right=(nil), redir=(nil), prev=0x652b20492830, next=0x652b204929d0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x652b20492830 left=(nil), right=(nil), redir=(nil), prev=0x652b204928e0, next=(nil) left=0x652b20476ba0, right=0x652b204929d0, redir=(nil), prev=0x652b20492830, next=0x652b204929d0 left=0x652b20476ba0, right=0x652b204929d0, redir=(nil), prev=0x652b20492830, next=0x652b204929d0 Building redirection AST 'cat' '<' with filename 'minishell.h' Invalid redirection (missing filename) syntax error near unexpected token `newline' No redirection root created Using pipe_root as AST root ===== PIPE EXECUTION DETAILS ===== left=0x652b20476ba0, right=0x652b204929d0, redir=(nil), prev=0x652b20492830, next=0x652b204929d0 left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x652b20492830 left=(nil), right=(nil), redir=(nil), prev=0x652b204928e0, next=(nil) Created left child with pid=796630 Created right child with pid=796631 Parent closing pipe ends Waiting for left child (pid=796630) ===== LEFT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=0x652b20492830 [0]='cat' None Left stdout redirected to pipe write end 'cat' ===== RIGHT PIPE EXECUTION DETAILS ===== left=(nil), right=(nil), redir=(nil), prev=0x652b204928e0, next=(nil) [0]='ls' None Stdin redirected from pipe read end 'ls' 0 Left child exited with status 0 Waiting for right child (pid=796631) 0 Right child exited with status 0 Pipe execution complete, returning status 0)
bash error = ( No such file or directory)
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî extras

Test 133: ‚ùå $PWD 
mini exit code = 2
bash exit code = 126
mini error = ( '$PWD' '$' Handling regular token Position update indicated, continuing Tokenization completed with result=1 '/home/bleow/Coding/Core/minishell/minishell_tester'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST '/home/bleow/Coding/Core/minishell/minishell_tester' Redirection AST build complete No redirection root created Using first command as AST root Is a directory)
bash error = ( Is a directory)
Test 134: ‚ùå $EMPTY 
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY' '$' Handling regular token Position update indicated, continuing Tokenization completed with result=1 ''] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST '' Redirection AST build complete No redirection root created Using first command as AST root Permission denied)
bash error = ()
Test 135: ‚ùå $EMPTY echo hi 
mini output = ()
bash output = (hi)
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY echo hi' '$' Handling regular token Position update indicated, continuing ' ' Handling regular token Position update indicated, continuing 'e' Handling regular token 'c' Handling regular token 'h' Handling regular token 'o' Handling regular token ' ' Handling regular token Creating token type=ARGS, content='echo' Created node with args[0]='echo' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='echo', quote_type=0 1 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument ''] -> NULL Position update indicated, continuing 'h' Handling regular token 'i' Handling regular token Creating token type=ARGS, content='hi' Created node with args[0]='hi' Starting append_arg left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Adding arg='hi', quote_type=0 2 New args array created Freeing old arrays and assigning new ones left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Successfully appended argument ''] -> NULL Tokenization completed with result=1 ''] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST '' Redirection AST build complete No redirection root created Using first command as AST root Permission denied)
bash error = ()
Test 136: ‚ùå ./test_files/invalid_permission 
mini exit code = 127
bash exit code = 126
mini error = ( './test_files/invalid_permission' '.' Handling regular token '/' Handling regular token 't' Handling regular token 'e' Handling regular token 's' Handling regular token 't' Handling regular token '_' Handling regular token 'f' Handling regular token 'i' Handling regular token 'l' Handling regular token 'e' Handling regular token 's' Handling regular token '/' Handling regular token 'i' Handling regular token 'n' Handling regular token 'v' Handling regular token 'a' Handling regular token 'l' Handling regular token 'i' Handling regular token 'd' Handling regular token '_' Handling regular token 'p' Handling regular token 'e' Handling regular token 'r' Handling regular token 'm' Handling regular token 'i' Handling regular token 's' Handling regular token 's' Handling regular token 'i' Handling regular token 'o' Handling regular token 'n' Handling regular token Creating token type=CMD, content='./test_files/invalid_permission' Created node with args[0]='./test_files/invalid_permission' './test_files/invalid_permission'] -> NULL Tokenization completed with result=1 './test_files/invalid_permission'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST './test_files/invalid_permission' Redirection AST build complete No redirection root created Using first command as AST root Permission denied)
bash error = ( Permission denied)

Test 141: ‚ùå ./test_files 
mini exit code = 2
bash exit code = 126
mini error = ( './test_files' '.' Handling regular token '/' Handling regular token 't' Handling regular token 'e' Handling regular token 's' Handling regular token 't' Handling regular token '_' Handling regular token 'f' Handling regular token 'i' Handling regular token 'l' Handling regular token 'e' Handling regular token 's' Handling regular token Creating token type=CMD, content='./test_files' Created node with args[0]='./test_files' './test_files'] -> NULL Tokenization completed with result=1 './test_files'] -> NULL Validating redirection targets All redirection targets valid ===== PROCESSING TOKEN LIST ===== left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) Found 1 commands left=(nil), right=(nil), redir=(nil), prev=(nil), next=(nil) No pipe root created Building redirection AST './test_files' Redirection AST build complete No redirection root created Using first command as AST root Is a directory)
bash error = ( Is a directory)

81/146

