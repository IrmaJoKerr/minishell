
Test  59: ❌ echo hi < ./test_files/infile bye bye 
mini output = (hi bye)
bash output = (hi bye bye)
mini error = ( extracting 'echo' from position 0-3 'echo' as CMD extracting ' ' from position 4-4 extracting 'hi' from position 5-6 'hi' as ARGS Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) extracting ' ' from position 7-7 extracting '< ./test_files/infile' from position 8-28 extracting ' ' from position 29-29 extracting 'bye' from position 30-32 'bye' as ARGS extracting ' ' from position 33-33 Adding null token safety stop Null token added at the end of list extracting 'bye' from position 34-36 'bye' as ARGS Resetting redirection tracking state Building redirection AST (command-first approach) Checking redirection node type=< Valid redirection node < with embedded filename './test_files/infile' Processing command 'echo' Starting to link redirections for command 'echo' Found redirection < './test_files/infile' for command 'echo' Set first redirection for command 'echo' < './test_files/infile' -> END Starting argument verification Processing node type=CMD, args[0]='echo' Found command 'echo' Processing node type=<, args[0]='./test_files/infile' Found redirection, continuing with same command context Processing node type=ARGS, args[0]='bye' Node 'bye' is redirection target Processing node type=ARGS, args[0]='' Processing node type=ARGS, args[0]='bye' Found orphaned argument 'bye' for command 'echo' Appending 'bye' to node type=CMD 2 'echo' 'hi' Successfully created new args array with 3 elements 3) Appended argument 'bye' to command 'echo' Argument verification completed Starting redirection execution for node type=< 'echo' (pipeline_context=0) Saved stdin=3, stdout=4 About to process redirection chain Starting redirection chain processing < './test_files/infile' 'echo' Processing redirection < './test_files/infile' './test_files/infile' './test_files/infile' Checking access to file './test_files/infile' File './test_files/infile' is accessible END Chain processing completed successfully Redirection successful, executing command 'echo' Command execution completed with result=0)
bash error = ()

Test 100: ❌ echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini error = ( extracting 'echo' from position 0-3 'echo' as CMD extracting ' ' from position 4-4 extracting 'hi' from position 5-6 'hi' as ARGS Appending 'hi' to node type=CMD 1 'echo' Successfully created new args array with 2 elements 2) extracting ' ' from position 7-7 '|' as | extracting '|' from position 8-8 extracting ' ' from position 9-9 extracting '>./outfiles/outfile01' from position 10-30 extracting ' ' from position 31-31 extracting 'echo' from position 32-35 'echo' as ARGS extracting ' ' from position 36-36 extracting 'bye' from position 37-39 'bye' as ARGS extracting ' ' from position 40-40 extracting '>./test_files/invalid_permission' from position 41-72 Adding null token safety stop Null token added at the end of list Resetting redirection tracking state Building redirection AST (command-first approach) Checking redirection node type=> Valid redirection node > with embedded filename './outfiles/outfile01' Checking redirection node type=> Valid redirection node > with embedded filename './test_files/invalid_permission' Processing command 'echo' Starting to link redirections for command 'echo' No redirections found for cmd 'echo' Starting argument verification Processing node type=CMD, args[0]='echo' Found command 'echo' Processing node type=|, args[0]='|' Found pipe, resetting command context Processing node type=>, args[0]='./outfiles/outfile01' Found redirection, continuing with same command context Processing node type=ARGS, args[0]='echo' Processing node type=ARGS, args[0]='bye' Processing node type=>, args[0]='./test_files/invalid_permission' Found redirection, continuing with same command context Processing node type=ARGS, args[0]='' Argument verification completed Starting redirection execution for node type=> Missing left node, returning error)
bash error = ( Permission denied)

Test 131: ❌ cat <minishell.h|ls 
mini output = ()
bash output = (ast.txt bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax temp tester test_files tokens.txt wildcards)
mini error = ( extracting 'cat' from position 0-2 'cat' as CMD extracting ' ' from position 3-3 extracting '<minishell.h' from position 4-15 '|' as | extracting '|' from position 16-16 Adding null token safety stop Null token added at the end of list extracting 'ls' from position 17-18 'ls' as ARGS Resetting redirection tracking state Building redirection AST (command-first approach) Checking redirection node type=< Valid redirection node < with embedded filename 'minishell.h' Processing command 'cat' Starting to link redirections for command 'cat' Found redirection < 'minishell.h' for command 'cat' Set first redirection for command 'cat' < 'minishell.h' -> END Starting argument verification Processing node type=CMD, args[0]='cat' Found command 'cat' Processing node type=<, args[0]='minishell.h' Found redirection, continuing with same command context Processing node type=|, args[0]='|' Found pipe, resetting command context Processing node type=ARGS, args[0]='' Processing node type=ARGS, args[0]='ls' Argument verification completed Starting redirection execution for node type=< 'cat' (pipeline_context=1) Saved stdin=3, stdout=4 About to process redirection chain Starting redirection chain processing < 'minishell.h' 'cat' Processing redirection < 'minishell.h' 'minishell.h' 'minishell.h' Checking access to file 'minishell.h' File 'minishell.h' does not exist No such file or directory Handling missing input file (pipeline_context=0) Non-pipeline context - failing execution Redirection failed for 'minishell.h' Redirection failed, cleaning up and returning error_code=1 NOT executing command due to redirection failure Pipeline context - exiting with 0 for input redirection error)
bash error = ( No such file or directory)

Test 133: ❌ $PWD 
mini exit code = 2
bash exit code = 126
mini error = ( extracting '$PWD' from position 0-3 Adding null token safety stop Null token added at the end of list Resetting redirection tracking state Building redirection AST (command-first approach) Processing command '/home/bleow/Coding/Core/minishell/minishell_tester' Starting to link redirections for command '/home/bleow/Coding/Core/minishell/minishell_tester' No redirections found for cmd '/home/bleow/Coding/Core/minishell/minishell_tester' Starting argument verification Processing node type=CMD, args[0]='/home/bleow/Coding/Core/minishell/minishell_tester' Found command '/home/bleow/Coding/Core/minishell/minishell_tester' Processing node type=ARGS, args[0]='' Argument verification completed Is a directory)
bash error = ( Is a directory)
Test 134: ❌ $EMPTY 
mini exit code = 127
bash exit code = 0
mini error = ( extracting '$EMPTY' from position 0-5 Adding null token safety stop Null token added at the end of list Resetting redirection tracking state Building redirection AST (command-first approach) Processing command '' Starting to link redirections for command '' No redirections found for cmd '' Starting argument verification Processing node type=CMD, args[0]='' Found command '' Processing node type=ARGS, args[0]='' Argument verification completed Permission denied)
bash error = ()
Test 135: ❌ $EMPTY echo hi 
mini output = ()
bash output = (hi)
mini exit code = 127
bash exit code = 0
mini error = ( extracting '$EMPTY' from position 0-5 extracting ' ' from position 6-6 extracting 'echo' from position 7-10 'echo' as ARGS Appending 'echo' to node type=CMD 1 '' Successfully created new args array with 2 elements 2) extracting ' ' from position 11-11 Adding null token safety stop Null token added at the end of list extracting 'hi' from position 12-13 'hi' as ARGS Resetting redirection tracking state Building redirection AST (command-first approach) Processing command '' Starting to link redirections for command '' No redirections found for cmd '' Starting argument verification Processing node type=CMD, args[0]='' Found command '' Processing node type=ARGS, args[0]='' Processing node type=ARGS, args[0]='hi' Found orphaned argument 'hi' for command '' Appending 'hi' to node type=CMD 2 '' 'echo' Successfully created new args array with 3 elements 3) Appended argument 'hi' to command '' Argument verification completed Permission denied)
bash error = ()
Test 136: ❌ ./test_files/invalid_permission 
mini exit code = 127
bash exit code = 126
mini error = ( Adding null token safety stop extracting './test_files/invalid_permission' from position 0-30 './test_files/invalid_permission' as CMD Resetting redirection tracking state Building redirection AST (command-first approach) Processing command './test_files/invalid_permission' Starting to link redirections for command './test_files/invalid_permission' No redirections found for cmd './test_files/invalid_permission' Starting argument verification Processing node type=CMD, args[0]='./test_files/invalid_permission' Found command './test_files/invalid_permission' Argument verification completed Permission denied)
bash error = ( Permission denied)

Test 141: ❌ ./test_files 
mini exit code = 2
bash exit code = 126
mini error = ( Adding null token safety stop extracting './test_files' from position 0-11 './test_files' as CMD Resetting redirection tracking state Building redirection AST (command-first approach) Processing command './test_files' Starting to link redirections for command './test_files' No redirections found for cmd './test_files' Starting argument verification Processing node type=CMD, args[0]='./test_files' Found command './test_files' Argument verification completed Is a directory)
bash error = ( Is a directory)

138/146

