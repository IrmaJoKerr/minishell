Test  64: ❌ cat <"1""2""3""4""5" 
mini output = (2 bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini error = ( 'cat <"1""2""3""4""5"' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char '"' Processing at pos 5 with adjacency={0,1} Processing quoted string starting at position 5 with " '1' " Restored adjacency to {0,1} for content '1' 5) Handling as redirection target Handling quoted text '1' as potential redirection target Found redirection node type=7 Creating file node for redirection target Linked file '1' to redirection node Position check triggered continue Processing position 8, char '"' Creating token from '"1"' Token type set to 5 Creating token type=5 content='"1"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='1' type=5 content='"1"' Processing at pos 8 with adjacency={1,1} Processing quoted string starting at position 8 with " '2' " Restored adjacency to {1,1} for content '2' 5) Handling as redirection target Handling quoted text '2' as potential redirection target Found redirection node type=7 Redirection already has target '1', treating '2' as command argument Found command node 'cat' to attach argument Position check triggered continue Processing position 11, char '"' Creating token from '"2"' Token type set to 5 Creating token type=5 content='"2"' Linking token type=5 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='1' type=5 content='"1"' type=5 content='"2"' Processing at pos 11 with adjacency={1,1} Processing quoted string starting at position 11 with " '3' " Restored adjacency to {1,1} for content '3' 5) Handling as redirection target Handling quoted text '3' as potential redirection target Found redirection node type=7 Redirection already has target '1', treating '3' as command argument Found command node 'cat' to attach argument Position check triggered continue Processing position 14, char '"' Creating token from '"3"' Token type set to 5 Creating token type=5 content='"3"' Linking token type=5 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='1' type=5 content='"1"' type=5 content='"2"' type=5 content='"3"' Processing at pos 14 with adjacency={1,1} Processing quoted string starting at position 14 with " '4' " Restored adjacency to {1,1} for content '4' 5) Processing as regular quoted string Found command node 'cat' Entering merge_quoted_token. Checking adjacency={1,1} for content '4' '"3"' Joining '4' with last argument ('"3"') of current token ('"3"') '"3"4' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '4' 4 0x64d4ddb05b10 0x64d4ddb05b10 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 17, current_start 14 Set vars->start to 17 (current vars->pos) Loop ended. Current char '"' at pos 17. Text to process is from index 17 to 17. Calling handle_right_adj (from tokenize_utils.c) Processing text from 17 to 17 No text to process (pos 17 <= start 17) Exiting process_right_adj, new start for next token is 17 Token join SUCCEEDED. d' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Processing position 17, char '"' Processing at pos 17 with adjacency={1,1} Processing quoted string starting at position 17 with " '5' NONE Restored adjacency to {1,1} for content '5' 5) Processing as regular quoted string Found command node 'cat' Entering merge_quoted_token. Checking adjacency={1,1} for content '5' '"3"4' Joining '5' with last argument ('"3"4') of current token ('"3"4') '"3"45' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '5' 5 0x64d4ddb05ab0 0x64d4ddb05ab0 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 20, current_start 17 Set vars->start to 20 (current vars->pos) Loop ended. Current char '0' at pos 20. Text to process is from index 20 to 20. Calling handle_right_adj (from tokenize_utils.c) Processing text from 20 to 20 No text to process (pos 20 <= start 20) Exiting process_right_adj, new start for next token is 20 Token join SUCCEEDED. d' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Tokenization complete, finishing Building and executing command Building AST from token list type=2 content=[cat, 2, 3] type=7 content=[<] type=3 content=[1] type=5 content=["1"] type=5 content=["2"] type=5 content=["3"45] Building AST from token list Found 1 command nodes cat Processing pipes No pipes found in command Processing redirections Redirection node type=7, target cmd=0x64d4ddae9bb0, cmd type=2 cat 1 Linking redir 0x64d4ddb05840 to cmd 0x64d4ddae9bb0 and target 0x64d4ddb058f0 Starting collection after redirection Setting redirection root to node 0x64d4ddb05840 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] 2 [3] Skipping redirection node type=7 [cat] 2 [3] Command argument verification complete Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] 2 [3] Skipping redirection node type=7 [cat] 2 [3] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=7 cat Executing command tree Executing node type=7 at 0x64d4ddb05840 Executing redirection node type=7 0x64d4ddae9bb0 (type 2) cat with 2 args cat (nil)) Processing redirection node type=7 '1' Setting up input redirection from file '1' No such file or directory) No such file or directory Input redirection error in PID 196757 for file '1'. Continuing. Redirection setup failed (error code 1) 196755 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x64d4ddae9bb0 [cat] 2 [3] cat No such file or directory 1 1 1 1 Command execution completed with error code 1)
bash error = ( No such file or directory)

Test  65: ❌ echo <"./test_files/infile" <missing <"./test_files/infile" 
mini exit code = 0
bash exit code = 1
mini error = ( 'echo <"./test_files/infile" <missing <"./test_files/infile"' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' Position check triggered continue Processing position 6, char '"' Processing at pos 6 with adjacency={0,1} Processing quoted string starting at position 6 with " './test_files/infile' < Restored adjacency to {0,1} for content './test_files/infile' 5) Handling as redirection target Handling quoted text './test_files/infile' as potential redirection target Found redirection node type=7 Creating file node for redirection target Linked file './test_files/infile' to redirection node Position check triggered continue Processing position 27, char ' ' Creating token from '"./test_files/infile"' Token type set to 5 Creating token type=5 content='"./test_files/infile"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' Position check triggered continue Processing position 28, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' type=7 content='<' Position check triggered continue Processing position 29, char 'm' Position advanced to 30 Processing position 30, char 'i' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'n' Position advanced to 35 Processing position 35, char 'g' Position advanced to 36 Processing position 36, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 37, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' type=7 content='<' type=3 content='missing' type=7 content='<' Position check triggered continue Processing position 38, char '"' Processing at pos 38 with adjacency={0,1} Processing quoted string starting at position 38 with " './test_files/infile' NONE Restored adjacency to {0,1} for content './test_files/infile' 5) Handling as redirection target Handling quoted text './test_files/infile' as potential redirection target Found redirection node type=7 Creating file node for redirection target Linked file './test_files/infile' to redirection node Position check triggered continue Tokenization complete, finishing Creating token from '"./test_files/infile"' Token type set to 5 Creating token type=5 content='"./test_files/infile"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' type=7 content='<' type=3 content='missing' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' Building and executing command Building AST from token list type=2 content=[echo] type=7 content=[<] type=3 content=[./test_files/infile] type=5 content=["./test_files/infile"] type=7 content=[<] type=3 content=[missing] type=7 content=[<] type=3 content=[./test_files/infile] type=5 content=["./test_files/infile"] Building AST from token list Found 1 command nodes echo Processing pipes No pipes found in command Processing redirections Redirection node type=7, target cmd=0x5a79dba6f280, cmd type=2 echo ./test_files/infile Linking redir 0x5a79dba6f350 to cmd 0x5a79dba6f280 and target 0x5a79dba6f400 Starting collection after redirection Setting redirection root to node 0x5a79dba6f350 Redirection node type=7, target cmd=0x5a79dba6f280, cmd type=2 echo missing Linking redir 0x5a79dba6f640 to cmd 0x5a79dba6f280 and target 0x5a79dba6f710 Starting collection after redirection Redirection node type=7, target cmd=0x5a79dba6f280, cmd type=2 echo ./test_files/infile Linking redir 0x5a79dba6f7c0 to cmd 0x5a79dba6f280 and target 0x5a79dba6f870 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] Skipping redirection node type=7 Skipping redirection node type=7 Skipping redirection node type=7 [echo] Command argument verification complete Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] Skipping redirection node type=7 Skipping redirection node type=7 Skipping redirection node type=7 [echo] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=7 echo Executing command tree Executing node type=7 at 0x5a79dba6f350 Executing redirection node type=7 0x5a79dba6f280 (type 2) echo with 0 args echo (nil)) Processing redirection node type=7 './test_files/infile' Setting up input redirection from file './test_files/infile' Successfully opened './test_files/infile' with fd 5 Successfully redirected stdin to file './test_files/infile' Redirection setup successful Following redir link to next redirection node Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 196796 for file 'missing'. Continuing. Redirection setup failed (error code 1) 196794 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5a79dba6f280 [echo] echo 0 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test  66: ❌ echo <missing <"./test_files/infile" <missing 
mini exit code = 0
bash exit code = 1
mini error = ( 'echo <missing <"./test_files/infile" <missing' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' Position check triggered continue Processing position 6, char 'm' Position advanced to 7 Processing position 7, char 'i' Position advanced to 8 Processing position 8, char 's' Position advanced to 9 Processing position 9, char 's' Position advanced to 10 Processing position 10, char 'i' Position advanced to 11 Processing position 11, char 'n' Position advanced to 12 Processing position 12, char 'g' Position advanced to 13 Processing position 13, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 14, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='missing' type=7 content='<' Position check triggered continue Processing position 15, char '"' Processing at pos 15 with adjacency={0,1} Processing quoted string starting at position 15 with " './test_files/infile' < Restored adjacency to {0,1} for content './test_files/infile' 5) Handling as redirection target Handling quoted text './test_files/infile' as potential redirection target Found redirection node type=7 Creating file node for redirection target Linked file './test_files/infile' to redirection node Position check triggered continue Processing position 36, char ' ' Creating token from '"./test_files/infile"' Token type set to 5 Creating token type=5 content='"./test_files/infile"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='missing' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' Position check triggered continue Processing position 37, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='missing' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' type=7 content='<' Position check triggered continue Processing position 38, char 'm' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 's' Position advanced to 41 Processing position 41, char 's' Position advanced to 42 Processing position 42, char 'i' Position advanced to 43 Processing position 43, char 'n' Position advanced to 44 Processing position 44, char 'g' Position advanced to 45 Tokenization complete, finishing Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='missing' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' type=7 content='<' type=3 content='missing' Building and executing command Building AST from token list type=2 content=[echo] type=7 content=[<] type=3 content=[missing] type=7 content=[<] type=3 content=[./test_files/infile] type=5 content=["./test_files/infile"] type=7 content=[<] type=3 content=[missing] Building AST from token list Found 1 command nodes echo Processing pipes No pipes found in command Processing redirections Redirection node type=7, target cmd=0x5f940f648fe0, cmd type=2 echo missing Linking redir 0x5f940f6490b0 to cmd 0x5f940f648fe0 and target 0x5f940f649180 Starting collection after redirection Setting redirection root to node 0x5f940f6490b0 Redirection node type=7, target cmd=0x5f940f648fe0, cmd type=2 echo ./test_files/infile Linking redir 0x5f940f649230 to cmd 0x5f940f648fe0 and target 0x5f940f6492e0 Starting collection after redirection Redirection node type=7, target cmd=0x5f940f648fe0, cmd type=2 echo missing Linking redir 0x5f940f649520 to cmd 0x5f940f648fe0 and target 0x5f940f6495f0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] Skipping redirection node type=7 Skipping redirection node type=7 Skipping redirection node type=7 [echo] Command argument verification complete Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] Skipping redirection node type=7 Skipping redirection node type=7 Skipping redirection node type=7 [echo] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=7 echo Executing command tree Executing node type=7 at 0x5f940f6490b0 Executing redirection node type=7 0x5f940f648fe0 (type 2) echo with 0 args echo (nil)) Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 196832 for file 'missing'. Continuing. Redirection setup failed (error code 1) 196830 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5f940f648fe0 [echo] echo 0 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test  76: ❌ cat <missing 
mini exit code =
bash exit code = 1
mini error = ( 'cat <missing' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 's' Position advanced to 8 Processing position 8, char 's' Position advanced to 9 Processing position 9, char 'i' Position advanced to 10 Processing position 10, char 'n' Position advanced to 11 Processing position 11, char 'g' Position advanced to 12 Tokenization complete, finishing Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[missing] Building AST from token list Found 1 command nodes cat Processing pipes No pipes found in command Processing redirections Redirection node type=7, target cmd=0x649b47bf8500, cmd type=2 cat missing Linking redir 0x649b47bf85d0 to cmd 0x649b47bf8500 and target 0x649b47c14250 Starting collection after redirection Setting redirection root to node 0x649b47bf85d0 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Command argument verification complete Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=7 cat Executing command tree Executing node type=7 at 0x649b47bf85d0 Executing redirection node type=7 0x649b47bf8500 (type 2) cat with 0 args cat (nil)) Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 197303 for file 'missing'. Continuing. Redirection setup failed (error code 1) 197301 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x649b47bf8500 [cat] cat 0 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test  77: ❌ cat <missing | cat 
mini exit code =
bash exit code = 0
mini error = ( 'cat <missing | cat' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 's' Position advanced to 8 Processing position 8, char 's' Position advanced to 9 Processing position 9, char 'i' Position advanced to 10 Processing position 10, char 'n' Position advanced to 11 Processing position 11, char 'g' Position advanced to 12 Processing position 12, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 13, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' Position check triggered continue Processing position 14, char ' ' Position check triggered continue Processing position 15, char 'c' Position advanced to 16 Processing position 16, char 'a' Position advanced to 17 Processing position 17, char 't' Position advanced to 18 Tokenization complete, finishing Creating token from 'cat' Token type set to 2 Creating token type=3 content='cat' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='cat' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[missing] type=11 content=[|] type=2 content=[cat] Building AST from token list Found 2 command nodes cat cat Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=7, target cmd=0x62acedda6580, cmd type=2 cat missing Linking redir 0x62acedde4bc0 to cmd 0x62acedda6580 and target 0x62acedde4c70 Starting collection after redirection Setting redirection root to node 0x62acedde4bc0 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command cat [cat] [cat] Command argument verification complete Associated command 0x62acedda6580 with redirection 0x62acedde4bc0 (type 7) Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command cat [cat] [cat] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 cat Executing command tree Executing node type=11 at 0x62acedde4d20 Starting pipe execution for node 0x62acedde4d20 cat Forking left child Forking right child 197352) Processing redirections for left command cat 0x62acedde4d20) Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 197352 for file 'missing'. Continuing. Redirection setup failed (error code 1) 197350 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 197352) executing command Executing node type=2 at 0x62acedda6580 [cat] cat 197353) cat Right pipe process (PID 197353) executing command Executing node type=2 at 0x62acedde4df0 [cat] cat 0 0 0) Left command exited with code 0 197353) 0 0 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test  78: ❌ cat <missing | echo oi 
mini exit code = oi
bash exit code = 0
mini error = ( 'cat <missing | echo oi' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 's' Position advanced to 8 Processing position 8, char 's' Position advanced to 9 Processing position 9, char 'i' Position advanced to 10 Processing position 10, char 'n' Position advanced to 11 Processing position 11, char 'g' Position advanced to 12 Processing position 12, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 13, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' Position check triggered continue Processing position 14, char ' ' Position check triggered continue Processing position 15, char 'e' Position advanced to 16 Processing position 16, char 'c' Position advanced to 17 Processing position 17, char 'h' Position advanced to 18 Processing position 18, char 'o' Position advanced to 19 Processing position 19, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 20, char 'o' Position advanced to 21 Processing position 21, char 'i' Position advanced to 22 Tokenization complete, finishing Creating token from 'oi' Token type set to 3 Creating token type=3 content='oi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'oi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[missing] type=11 content=[|] type=2 content=[echo, oi] Building AST from token list Found 2 command nodes cat echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=7, target cmd=0x5b3ef84644f0, cmd type=2 cat missing Linking redir 0x5b3ef8480170 to cmd 0x5b3ef84644f0 and target 0x5b3ef8480240 Starting collection after redirection Setting redirection root to node 0x5b3ef8480170 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command echo [echo] [oi] [echo] [oi] Command argument verification complete Associated command 0x5b3ef84644f0 with redirection 0x5b3ef8480170 (type 7) Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command echo [echo] [oi] [echo] [oi] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5b3ef84802f0 Starting pipe execution for node 0x5b3ef84802f0 echo Forking left child Forking right child 197402) Processing redirections for left command cat 0x5b3ef84802f0) Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 197402 for file 'missing'. Continuing. Redirection setup failed (error code 1) 197400 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 197402) executing command Executing node type=2 at 0x5b3ef84644f0 [cat] cat 197403) echo Right pipe process (PID 197403) executing command Executing node type=2 at 0x5b3ef84803c0 [echo] [oi] echo 0 0 0 0 0) Left command exited with code 0 197403) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test  79: ❌ cat <missing | cat <"./test_files/infile" 
mini exit code = 42
bash exit code = 0
mini error = ( 'cat <missing | cat <"./test_files/infile"' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 's' Position advanced to 8 Processing position 8, char 's' Position advanced to 9 Processing position 9, char 'i' Position advanced to 10 Processing position 10, char 'n' Position advanced to 11 Processing position 11, char 'g' Position advanced to 12 Processing position 12, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 13, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' Position check triggered continue Processing position 14, char ' ' Position check triggered continue Processing position 15, char 'c' Position advanced to 16 Processing position 16, char 'a' Position advanced to 17 Processing position 17, char 't' Position advanced to 18 Processing position 18, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=3 content='cat' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='cat' Position check triggered continue Processing position 19, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 20, char '"' Processing at pos 20 with adjacency={0,1} Processing quoted string starting at position 20 with " './test_files/infile' NONE Restored adjacency to {0,1} for content './test_files/infile' 5) Handling as redirection target Handling quoted text './test_files/infile' as potential redirection target Found redirection node type=7 Creating file node for redirection target Linked file './test_files/infile' to redirection node Position check triggered continue Tokenization complete, finishing Creating token from '"./test_files/infile"' Token type set to 5 Creating token type=5 content='"./test_files/infile"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='cat' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[missing] type=11 content=[|] type=2 content=[cat] type=7 content=[<] type=3 content=[./test_files/infile] type=5 content=["./test_files/infile"] Building AST from token list Found 2 command nodes cat cat Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=7, target cmd=0x60a7b56f7a30, cmd type=2 cat missing Linking redir 0x60a7b57136c0 to cmd 0x60a7b56f7a30 and target 0x60a7b5713790 Starting collection after redirection Setting redirection root to node 0x60a7b57136c0 Redirection node type=7, target cmd=0x60a7b5713910, cmd type=2 cat ./test_files/infile Linking redir 0x60a7b57139e0 to cmd 0x60a7b5713910 and target 0x60a7b5713a90 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command cat [cat] Skipping redirection node type=7 [cat] Command argument verification complete Associated command 0x60a7b56f7a30 with redirection 0x60a7b57136c0 (type 7) Associated command 0x60a7b5713910 with redirection 0x60a7b57139e0 (type 7) Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command cat [cat] Skipping redirection node type=7 [cat] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 cat Executing command tree Executing node type=11 at 0x60a7b5713840 Starting pipe execution for node 0x60a7b5713840 cat Forking left child Forking right child 197453) Processing redirections for left command cat 0x60a7b5713840) Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 197453 for file 'missing'. Continuing. Redirection setup failed (error code 1) 197451 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 197453) executing command Executing node type=2 at 0x60a7b56f7a30 [cat] cat 197454) cat Processing redirections for right command cat 0x60a7b5713840) Processing redirection node type=7 './test_files/infile' Setting up input redirection from file './test_files/infile' Successfully opened './test_files/infile' with fd 3 Successfully redirected stdin to file './test_files/infile' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x60a7b57139e0 targeting 0x60a7b5713910 No more redirections found for cmd 0x60a7b5713910 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 197454) executing command Executing node type=2 at 0x60a7b5713910 [cat] cat 0 0 0) Left command exited with code 0 197454) 0 0 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test  85: ❌ ls >./outfiles/outfile01 >./test_files/invalid_permission 
mini output = (2 bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >./outfiles/outfile01 >./test_files/invalid_permission' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' Position check triggered continue Processing position 4, char '.' Position advanced to 5 Processing position 5, char '/' Position advanced to 6 Processing position 6, char 'o' Position advanced to 7 Processing position 7, char 'u' Position advanced to 8 Processing position 8, char 't' Position advanced to 9 Processing position 9, char 'f' Position advanced to 10 Processing position 10, char 'i' Position advanced to 11 Processing position 11, char 'l' Position advanced to 12 Processing position 12, char 'e' Position advanced to 13 Processing position 13, char 's' Position advanced to 14 Processing position 14, char '/' Position advanced to 15 Processing position 15, char 'o' Position advanced to 16 Processing position 16, char 'u' Position advanced to 17 Processing position 17, char 't' Position advanced to 18 Processing position 18, char 'f' Position advanced to 19 Processing position 19, char 'i' Position advanced to 20 Processing position 20, char 'l' Position advanced to 21 Processing position 21, char 'e' Position advanced to 22 Processing position 22, char '0' Position advanced to 23 Processing position 23, char '1' Position advanced to 24 Processing position 24, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 25, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' Position check triggered continue Processing position 26, char '.' Position advanced to 27 Processing position 27, char '/' Position advanced to 28 Processing position 28, char 't' Position advanced to 29 Processing position 29, char 'e' Position advanced to 30 Processing position 30, char 's' Position advanced to 31 Processing position 31, char 't' Position advanced to 32 Processing position 32, char '_' Position advanced to 33 Processing position 33, char 'f' Position advanced to 34 Processing position 34, char 'i' Position advanced to 35 Processing position 35, char 'l' Position advanced to 36 Processing position 36, char 'e' Position advanced to 37 Processing position 37, char 's' Position advanced to 38 Processing position 38, char '/' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'n' Position advanced to 41 Processing position 41, char 'v' Position advanced to 42 Processing position 42, char 'a' Position advanced to 43 Processing position 43, char 'l' Position advanced to 44 Processing position 44, char 'i' Position advanced to 45 Processing position 45, char 'd' Position advanced to 46 Processing position 46, char '_' Position advanced to 47 Processing position 47, char 'p' Position advanced to 48 Processing position 48, char 'e' Position advanced to 49 Processing position 49, char 'r' Position advanced to 50 Processing position 50, char 'm' Position advanced to 51 Processing position 51, char 'i' Position advanced to 52 Processing position 52, char 's' Position advanced to 53 Processing position 53, char 's' Position advanced to 54 Processing position 54, char 'i' Position advanced to 55 Processing position 55, char 'o' Position advanced to 56 Processing position 56, char 'n' Position advanced to 57 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[ls] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x57859658bcd0, cmd type=2 ls ./outfiles/outfile01 Linking redir 0x57859658bda0 to cmd 0x57859658bcd0 and target 0x57859658be70 Starting collection after redirection Setting redirection root to node 0x57859658bda0 Redirection node type=8, target cmd=0x57859658bcd0, cmd type=2 ls ./test_files/invalid_permission Linking redir 0x57859658bf80 to cmd 0x57859658bcd0 and target 0x57859658c030 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=8 Skipping redirection node type=8 [ls] Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=8 Skipping redirection node type=8 [ls] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 ls Executing command tree Executing node type=8 at 0x57859658bda0 Executing redirection node type=8 0x57859658bcd0 (type 2) ls with 0 args ls (nil)) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 5 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 197700 Redirection setup failed (error code 1) 197700 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x57859658bcd0 [ls] ls 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test  87: ❌ ls >"./outfiles/outfile""1""2""3""4""5" 
Only in ./mini_outfiles: outfile
Only in ./bash_outfiles: outfile12345
mini outfiles:
2
bash outfiles:
2
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini exit code = 2
bash exit code = 0
mini error = ( 'ls >"./outfiles/outfile""1""2""3""4""5"' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' Position check triggered continue Processing position 4, char '"' Processing at pos 4 with adjacency={0,1} Processing quoted string starting at position 4 with " './outfiles/outfile' " Restored adjacency to {0,1} for content './outfiles/outfile' 5) Handling as redirection target Handling quoted text './outfiles/outfile' as potential redirection target Found redirection node type=8 Creating file node for redirection target Linked file './outfiles/outfile' to redirection node Position check triggered continue Processing position 24, char '"' Creating token from '"./outfiles/outfile"' Token type set to 5 Creating token type=5 content='"./outfiles/outfile"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' Processing at pos 24 with adjacency={1,1} Processing quoted string starting at position 24 with " '1' " Restored adjacency to {1,1} for content '1' 5) Handling as redirection target Handling quoted text '1' as potential redirection target Found redirection node type=8 Redirection already has target './outfiles/outfile', treating '1' as command argument Found command node 'ls' to attach argument Position check triggered continue Processing position 27, char '"' Creating token from '"1"' Token type set to 5 Creating token type=5 content='"1"' Linking token type=5 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' type=5 content='"1"' Processing at pos 27 with adjacency={1,1} Processing quoted string starting at position 27 with " '2' " Restored adjacency to {1,1} for content '2' 5) Handling as redirection target Handling quoted text '2' as potential redirection target Found redirection node type=8 Redirection already has target './outfiles/outfile', treating '2' as command argument Found command node 'ls' to attach argument Position check triggered continue Processing position 30, char '"' Creating token from '"2"' Token type set to 5 Creating token type=5 content='"2"' Linking token type=5 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' type=5 content='"1"' type=5 content='"2"' Processing at pos 30 with adjacency={1,1} Processing quoted string starting at position 30 with " '3' " Restored adjacency to {1,1} for content '3' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '3' '"2"' Joining '3' with last argument ('"2"') of current token ('"2"') '"2"3' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '3' 4 0x61c96504cf90 0x61c96504cf90 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 33, current_start 30 Set vars->start to 33 (current vars->pos) Loop ended. Current char '"' at pos 33. Text to process is from index 33 to 33. Calling handle_right_adj (from tokenize_utils.c) Processing text from 33 to 33 No text to process (pos 33 <= start 33) Exiting process_right_adj, new start for next token is 33 Token join SUCCEEDED. a' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Processing position 33, char '"' Processing at pos 33 with adjacency={1,1} Processing quoted string starting at position 33 with " '4' " Restored adjacency to {1,1} for content '4' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '4' '"2"3' Joining '4' with last argument ('"2"3') of current token ('"2"3') '"2"34' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '4' 5 0x61c96504cf30 0x61c96504cf30 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 36, current_start 33 Set vars->start to 36 (current vars->pos) Loop ended. Current char '"' at pos 36. Text to process is from index 36 to 36. Calling handle_right_adj (from tokenize_utils.c) Processing text from 36 to 36 No text to process (pos 36 <= start 36) Exiting process_right_adj, new start for next token is 36 Token join SUCCEEDED. a' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Processing position 36, char '"' Processing at pos 36 with adjacency={1,1} Processing quoted string starting at position 36 with " '5' NONE Restored adjacency to {1,1} for content '5' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '5' '"2"34' Joining '5' with last argument ('"2"34') of current token ('"2"34') '"2"345' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '5' 6 0x61c96504d180 0x61c96504d180 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 39, current_start 36 Set vars->start to 39 (current vars->pos) Loop ended. Current char '0' at pos 39. Text to process is from index 39 to 39. Calling handle_right_adj (from tokenize_utils.c) Processing text from 39 to 39 No text to process (pos 39 <= start 39) Exiting process_right_adj, new start for next token is 39 Token join SUCCEEDED. 1 for content '' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Tokenization complete, finishing Building and executing command Building AST from token list type=2 content=[ls, 1, 2] type=8 content=[>] type=3 content=[./outfiles/outfile] type=5 content=["./outfiles/outfile"] type=5 content=["1"] type=5 content=["2"345] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x61c965030fb0, cmd type=2 ls ./outfiles/outfile Linking redir 0x61c96504cc40 to cmd 0x61c965030fb0 and target 0x61c96504ccf0 Starting collection after redirection Setting redirection root to node 0x61c96504cc40 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] [1] 2 Skipping redirection node type=8 [ls] [1] 2 Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] [1] 2 Skipping redirection node type=8 [ls] [1] 2 Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 ls Executing command tree Executing node type=8 at 0x61c96504cc40 Executing redirection node type=8 0x61c965030fb0 (type 2) ls with 2 args ls (nil)) Processing redirection node type=8 './outfiles/outfile' Setting up output redirection to file './outfiles/outfile' Successfully opened './outfiles/outfile' with fd 5 Successfully redirected stdout to file './outfiles/outfile' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x61c96504cc40 targeting 0x61c965030fb0 No more redirections found for cmd 0x61c965030fb0 No more redirections found for this command Finished processing redirection chain successfully Executing command after redirection setup Executing node type=2 at 0x61c965030fb0 [ls] [1] 2 ls No such file or directory 2 2 2 2 Command execution completed with error code 2)
bash error = ()

Test  88: ❌ ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02" 
mini output = (2 bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02"' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' Position check triggered continue Processing position 4, char '"' Processing at pos 4 with adjacency={0,1} Processing quoted string starting at position 4 with " './outfiles/outfile01' > Restored adjacency to {0,1} for content './outfiles/outfile01' 5) Handling as redirection target Handling quoted text './outfiles/outfile01' as potential redirection target Found redirection node type=8 Creating file node for redirection target Linked file './outfiles/outfile01' to redirection node Position check triggered continue Processing position 26, char ' ' Creating token from '"./outfiles/outfile01"' Token type set to 5 Creating token type=5 content='"./outfiles/outfile01"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' type=5 content='"./outfiles/outfile01"' Position check triggered continue Processing position 27, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' type=5 content='"./outfiles/outfile01"' type=8 content='>' Position check triggered continue Processing position 28, char '.' Position advanced to 29 Processing position 29, char '/' Position advanced to 30 Processing position 30, char 't' Position advanced to 31 Processing position 31, char 'e' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char 't' Position advanced to 34 Processing position 34, char '_' Position advanced to 35 Processing position 35, char 'f' Position advanced to 36 Processing position 36, char 'i' Position advanced to 37 Processing position 37, char 'l' Position advanced to 38 Processing position 38, char 'e' Position advanced to 39 Processing position 39, char 's' Position advanced to 40 Processing position 40, char '/' Position advanced to 41 Processing position 41, char 'i' Position advanced to 42 Processing position 42, char 'n' Position advanced to 43 Processing position 43, char 'v' Position advanced to 44 Processing position 44, char 'a' Position advanced to 45 Processing position 45, char 'l' Position advanced to 46 Processing position 46, char 'i' Position advanced to 47 Processing position 47, char 'd' Position advanced to 48 Processing position 48, char '_' Position advanced to 49 Processing position 49, char 'p' Position advanced to 50 Processing position 50, char 'e' Position advanced to 51 Processing position 51, char 'r' Position advanced to 52 Processing position 52, char 'm' Position advanced to 53 Processing position 53, char 'i' Position advanced to 54 Processing position 54, char 's' Position advanced to 55 Processing position 55, char 's' Position advanced to 56 Processing position 56, char 'i' Position advanced to 57 Processing position 57, char 'o' Position advanced to 58 Processing position 58, char 'n' Position advanced to 59 Processing position 59, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' type=5 content='"./outfiles/outfile01"' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 60, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' type=5 content='"./outfiles/outfile01"' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 61, char '"' Processing at pos 61 with adjacency={0,1} Processing quoted string starting at position 61 with " './outfiles/outfile02' NONE Restored adjacency to {0,1} for content './outfiles/outfile02' 5) Handling as redirection target Handling quoted text './outfiles/outfile02' as potential redirection target Found redirection node type=8 Creating file node for redirection target Linked file './outfiles/outfile02' to redirection node Position check triggered continue Tokenization complete, finishing Creating token from '"./outfiles/outfile02"' Token type set to 5 Creating token type=5 content='"./outfiles/outfile02"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' type=5 content='"./outfiles/outfile01"' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile02' type=5 content='"./outfiles/outfile02"' Building and executing command Building AST from token list type=2 content=[ls] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=5 content=["./outfiles/outfile01"] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile02] type=5 content=["./outfiles/outfile02"] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x599104373a00, cmd type=2 ls ./outfiles/outfile01 Linking redir 0x599104373ad0 to cmd 0x599104373a00 and target 0x599104373b80 Starting collection after redirection Setting redirection root to node 0x599104373ad0 Redirection node type=8, target cmd=0x599104373a00, cmd type=2 ls ./test_files/invalid_permission Linking redir 0x599104373dd0 to cmd 0x599104373a00 and target 0x599104373e80 Starting collection after redirection Redirection node type=8, target cmd=0x599104373a00, cmd type=2 ls ./outfiles/outfile02 Linking redir 0x599104373fa0 to cmd 0x599104373a00 and target 0x599104374070 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=8 Skipping redirection node type=8 Skipping redirection node type=8 [ls] Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=8 Skipping redirection node type=8 Skipping redirection node type=8 [ls] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 ls Executing command tree Executing node type=8 at 0x599104373ad0 Executing redirection node type=8 0x599104373a00 (type 2) ls with 0 args ls (nil)) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 5 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 197825 Redirection setup failed (error code 1) 197825 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x599104373a00 [ls] ls 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test  89: ❌ ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission 
mini output = (2 bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' Position check triggered continue Processing position 4, char '.' Position advanced to 5 Processing position 5, char '/' Position advanced to 6 Processing position 6, char 't' Position advanced to 7 Processing position 7, char 'e' Position advanced to 8 Processing position 8, char 's' Position advanced to 9 Processing position 9, char 't' Position advanced to 10 Processing position 10, char '_' Position advanced to 11 Processing position 11, char 'f' Position advanced to 12 Processing position 12, char 'i' Position advanced to 13 Processing position 13, char 'l' Position advanced to 14 Processing position 14, char 'e' Position advanced to 15 Processing position 15, char 's' Position advanced to 16 Processing position 16, char '/' Position advanced to 17 Processing position 17, char 'i' Position advanced to 18 Processing position 18, char 'n' Position advanced to 19 Processing position 19, char 'v' Position advanced to 20 Processing position 20, char 'a' Position advanced to 21 Processing position 21, char 'l' Position advanced to 22 Processing position 22, char 'i' Position advanced to 23 Processing position 23, char 'd' Position advanced to 24 Processing position 24, char '_' Position advanced to 25 Processing position 25, char 'p' Position advanced to 26 Processing position 26, char 'e' Position advanced to 27 Processing position 27, char 'r' Position advanced to 28 Processing position 28, char 'm' Position advanced to 29 Processing position 29, char 'i' Position advanced to 30 Processing position 30, char 's' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char 'i' Position advanced to 33 Processing position 33, char 'o' Position advanced to 34 Processing position 34, char 'n' Position advanced to 35 Processing position 35, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 36, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 37, char '"' Processing at pos 37 with adjacency={0,1} Processing quoted string starting at position 37 with " './outfiles/outfile01' > Restored adjacency to {0,1} for content './outfiles/outfile01' 5) Handling as redirection target Handling quoted text './outfiles/outfile01' as potential redirection target Found redirection node type=8 Creating file node for redirection target Linked file './outfiles/outfile01' to redirection node Position check triggered continue Processing position 59, char ' ' Creating token from '"./outfiles/outfile01"' Token type set to 5 Creating token type=5 content='"./outfiles/outfile01"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=5 content='"./outfiles/outfile01"' Position check triggered continue Processing position 60, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=5 content='"./outfiles/outfile01"' type=8 content='>' Position check triggered continue Processing position 61, char '.' Position advanced to 62 Processing position 62, char '/' Position advanced to 63 Processing position 63, char 't' Position advanced to 64 Processing position 64, char 'e' Position advanced to 65 Processing position 65, char 's' Position advanced to 66 Processing position 66, char 't' Position advanced to 67 Processing position 67, char '_' Position advanced to 68 Processing position 68, char 'f' Position advanced to 69 Processing position 69, char 'i' Position advanced to 70 Processing position 70, char 'l' Position advanced to 71 Processing position 71, char 'e' Position advanced to 72 Processing position 72, char 's' Position advanced to 73 Processing position 73, char '/' Position advanced to 74 Processing position 74, char 'i' Position advanced to 75 Processing position 75, char 'n' Position advanced to 76 Processing position 76, char 'v' Position advanced to 77 Processing position 77, char 'a' Position advanced to 78 Processing position 78, char 'l' Position advanced to 79 Processing position 79, char 'i' Position advanced to 80 Processing position 80, char 'd' Position advanced to 81 Processing position 81, char '_' Position advanced to 82 Processing position 82, char 'p' Position advanced to 83 Processing position 83, char 'e' Position advanced to 84 Processing position 84, char 'r' Position advanced to 85 Processing position 85, char 'm' Position advanced to 86 Processing position 86, char 'i' Position advanced to 87 Processing position 87, char 's' Position advanced to 88 Processing position 88, char 's' Position advanced to 89 Processing position 89, char 'i' Position advanced to 90 Processing position 90, char 'o' Position advanced to 91 Processing position 91, char 'n' Position advanced to 92 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=5 content='"./outfiles/outfile01"' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[ls] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=5 content=["./outfiles/outfile01"] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x62d9470b36f0, cmd type=2 ls ./test_files/invalid_permission Linking redir 0x62d9470f1880 to cmd 0x62d9470b36f0 and target 0x62d9470f1930 Starting collection after redirection Setting redirection root to node 0x62d9470f1880 Redirection node type=8, target cmd=0x62d9470b36f0, cmd type=2 ls ./outfiles/outfile01 Linking redir 0x62d9470f19c0 to cmd 0x62d9470b36f0 and target 0x62d9470f1a90 Starting collection after redirection Redirection node type=8, target cmd=0x62d9470b36f0, cmd type=2 ls ./test_files/invalid_permission Linking redir 0x62d9470f1ce0 to cmd 0x62d9470b36f0 and target 0x62d9470f1d90 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=8 Skipping redirection node type=8 Skipping redirection node type=8 [ls] Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=8 Skipping redirection node type=8 Skipping redirection node type=8 [ls] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 ls Executing command tree Executing node type=8 at 0x62d9470f1880 Executing redirection node type=8 0x62d9470b36f0 (type 2) ls with 0 args ls (nil)) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 197866 Redirection setup failed (error code 1) 197866 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x62d9470b36f0 [ls] ls 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test  92: ❌ echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye 
Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
mini outfiles:
bye
bash outfiles:
hi
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 'o' Position advanced to 12 Processing position 12, char 'u' Position advanced to 13 Processing position 13, char 't' Position advanced to 14 Processing position 14, char 'f' Position advanced to 15 Processing position 15, char 'i' Position advanced to 16 Processing position 16, char 'l' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Processing position 19, char '/' Position advanced to 20 Processing position 20, char 'o' Position advanced to 21 Processing position 21, char 'u' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'f' Position advanced to 24 Processing position 24, char 'i' Position advanced to 25 Processing position 25, char 'l' Position advanced to 26 Processing position 26, char 'e' Position advanced to 27 Processing position 27, char '0' Position advanced to 28 Processing position 28, char '1' Position advanced to 29 Processing position 29, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 30, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' Position check triggered continue Processing position 31, char '.' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 'o' Position advanced to 34 Processing position 34, char 'u' Position advanced to 35 Processing position 35, char 't' Position advanced to 36 Processing position 36, char 'f' Position advanced to 37 Processing position 37, char 'i' Position advanced to 38 Processing position 38, char 'l' Position advanced to 39 Processing position 39, char 'e' Position advanced to 40 Processing position 40, char 's' Position advanced to 41 Processing position 41, char '/' Position advanced to 42 Processing position 42, char 'o' Position advanced to 43 Processing position 43, char 'u' Position advanced to 44 Processing position 44, char 't' Position advanced to 45 Processing position 45, char 'f' Position advanced to 46 Processing position 46, char 'i' Position advanced to 47 Processing position 47, char 'l' Position advanced to 48 Processing position 48, char 'e' Position advanced to 49 Processing position 49, char '0' Position advanced to 50 Processing position 50, char '2' Position advanced to 51 Processing position 51, char ' ' Creating token from './outfiles/outfile02' Token type set to 3 Creating token type=3 content='./outfiles/outfile02' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' Position check triggered continue Processing position 52, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' Position check triggered continue Processing position 53, char ' ' Position check triggered continue Processing position 54, char 'e' Position advanced to 55 Processing position 55, char 'c' Position advanced to 56 Processing position 56, char 'h' Position advanced to 57 Processing position 57, char 'o' Position advanced to 58 Processing position 58, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 59, char 'b' Position advanced to 60 Processing position 60, char 'y' Position advanced to 61 Processing position 61, char 'e' Position advanced to 62 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=8 content=[>] type=3 content=[./outfiles/outfile02] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x6279ea248dc0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x6279ea248e90 to cmd 0x6279ea248dc0 and target 0x6279ea249020 Starting collection after redirection Setting redirection root to node 0x6279ea248e90 Redirection node type=8, target cmd=0x6279ea248dc0, cmd type=2 echo ./outfiles/outfile02 Linking redir 0x6279ea2490d0 to cmd 0x6279ea248dc0 and target 0x6279ea249180 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x6279ea248dc0 with redirection 0x6279ea248e90 (type 8) Associated command 0x6279ea249360 with redirection 0x6279ea2490d0 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x6279ea249290 Starting pipe execution for node 0x6279ea249290 echo Forking left child Forking right child 198000) Processing redirections for left command echo 0x6279ea249290) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile02' Successfully opened './outfiles/outfile02' with fd 4 Successfully redirected stdout to file './outfiles/outfile02' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x6279ea2490d0 targeting 0x6279ea248dc0 No more redirections found for cmd 0x6279ea248dc0 No more redirections found for this command Finished processing redirection chain successfully Left pipe process (PID 198000) executing command Executing node type=2 at 0x6279ea248dc0 [echo] [hi] echo 0 0 0) Left command exited with code 0 198001) 198001) echo Processing redirections for right command echo 0x6279ea249290) Processing redirection node type=8 './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile02' Successfully opened './outfiles/outfile02' with fd 3 Successfully redirected stdout to file './outfiles/outfile02' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x6279ea2490d0 targeting 0x6279ea249360 No more redirections found for cmd 0x6279ea249360 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 198001) executing command Executing node type=2 at 0x6279ea249360 [echo] [bye] echo 0 0 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ()

Test  96: ❌ echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye 
Files ./mini_outfiles/outfile01 and ./bash_outfiles/outfile01 differ
mini outfiles:
hi
bash outfiles:
mini error = ( 'echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 'o' Position advanced to 12 Processing position 12, char 'u' Position advanced to 13 Processing position 13, char 't' Position advanced to 14 Processing position 14, char 'f' Position advanced to 15 Processing position 15, char 'i' Position advanced to 16 Processing position 16, char 'l' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Processing position 19, char '/' Position advanced to 20 Processing position 20, char 'o' Position advanced to 21 Processing position 21, char 'u' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'f' Position advanced to 24 Processing position 24, char 'i' Position advanced to 25 Processing position 25, char 'l' Position advanced to 26 Processing position 26, char 'e' Position advanced to 27 Processing position 27, char '0' Position advanced to 28 Processing position 28, char '1' Position advanced to 29 Processing position 29, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 30, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' Position check triggered continue Processing position 31, char '.' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 't' Position advanced to 34 Processing position 34, char 'e' Position advanced to 35 Processing position 35, char 's' Position advanced to 36 Processing position 36, char 't' Position advanced to 37 Processing position 37, char '_' Position advanced to 38 Processing position 38, char 'f' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'l' Position advanced to 41 Processing position 41, char 'e' Position advanced to 42 Processing position 42, char 's' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'i' Position advanced to 45 Processing position 45, char 'n' Position advanced to 46 Processing position 46, char 'v' Position advanced to 47 Processing position 47, char 'a' Position advanced to 48 Processing position 48, char 'l' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'd' Position advanced to 51 Processing position 51, char '_' Position advanced to 52 Processing position 52, char 'p' Position advanced to 53 Processing position 53, char 'e' Position advanced to 54 Processing position 54, char 'r' Position advanced to 55 Processing position 55, char 'm' Position advanced to 56 Processing position 56, char 'i' Position advanced to 57 Processing position 57, char 's' Position advanced to 58 Processing position 58, char 's' Position advanced to 59 Processing position 59, char 'i' Position advanced to 60 Processing position 60, char 'o' Position advanced to 61 Processing position 61, char 'n' Position advanced to 62 Processing position 62, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 63, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' Position check triggered continue Processing position 64, char ' ' Position check triggered continue Processing position 65, char 'e' Position advanced to 66 Processing position 66, char 'c' Position advanced to 67 Processing position 67, char 'h' Position advanced to 68 Processing position 68, char 'o' Position advanced to 69 Processing position 69, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 70, char 'b' Position advanced to 71 Processing position 71, char 'y' Position advanced to 72 Processing position 72, char 'e' Position advanced to 73 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x5b2836a03bb0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5b2836a03ca0 to cmd 0x5b2836a03bb0 and target 0x5b2836a03e30 Starting collection after redirection Setting redirection root to node 0x5b2836a03ca0 Redirection node type=8, target cmd=0x5b2836a03bb0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5b2836a03ee0 to cmd 0x5b2836a03bb0 and target 0x5b2836a03f70 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x5b2836a03bb0 with redirection 0x5b2836a03ca0 (type 8) Associated command 0x5b2836a040f0 with redirection 0x5b2836a03ee0 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5b2836a04000 Starting pipe execution for node 0x5b2836a04000 echo Forking left child Forking right child 198186) Processing redirections for left command echo 0x5b2836a04000) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 198184 Redirection setup failed (error code 1) 198184 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 198186) executing command Executing node type=2 at 0x5b2836a03bb0 [echo] [hi] echo 0 0 198187) echo Processing redirections for right command echo 0x5b2836a04000) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 198184 Redirection setup failed (error code 1) 198184 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 198187) executing command Executing node type=2 at 0x5b2836a040f0 [echo] [bye] echo 0 0 0) Left command exited with code 0 198187) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test  98: ❌ echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 't' Position advanced to 12 Processing position 12, char 'e' Position advanced to 13 Processing position 13, char 's' Position advanced to 14 Processing position 14, char 't' Position advanced to 15 Processing position 15, char '_' Position advanced to 16 Processing position 16, char 'f' Position advanced to 17 Processing position 17, char 'i' Position advanced to 18 Processing position 18, char 'l' Position advanced to 19 Processing position 19, char 'e' Position advanced to 20 Processing position 20, char 's' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 'i' Position advanced to 23 Processing position 23, char 'n' Position advanced to 24 Processing position 24, char 'v' Position advanced to 25 Processing position 25, char 'a' Position advanced to 26 Processing position 26, char 'l' Position advanced to 27 Processing position 27, char 'i' Position advanced to 28 Processing position 28, char 'd' Position advanced to 29 Processing position 29, char '_' Position advanced to 30 Processing position 30, char 'p' Position advanced to 31 Processing position 31, char 'e' Position advanced to 32 Processing position 32, char 'r' Position advanced to 33 Processing position 33, char 'm' Position advanced to 34 Processing position 34, char 'i' Position advanced to 35 Processing position 35, char 's' Position advanced to 36 Processing position 36, char 's' Position advanced to 37 Processing position 37, char 'i' Position advanced to 38 Processing position 38, char 'o' Position advanced to 39 Processing position 39, char 'n' Position advanced to 40 Processing position 40, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 41, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 42, char '.' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'o' Position advanced to 45 Processing position 45, char 'u' Position advanced to 46 Processing position 46, char 't' Position advanced to 47 Processing position 47, char 'f' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'l' Position advanced to 50 Processing position 50, char 'e' Position advanced to 51 Processing position 51, char 's' Position advanced to 52 Processing position 52, char '/' Position advanced to 53 Processing position 53, char 'o' Position advanced to 54 Processing position 54, char 'u' Position advanced to 55 Processing position 55, char 't' Position advanced to 56 Processing position 56, char 'f' Position advanced to 57 Processing position 57, char 'i' Position advanced to 58 Processing position 58, char 'l' Position advanced to 59 Processing position 59, char 'e' Position advanced to 60 Processing position 60, char '0' Position advanced to 61 Processing position 61, char '1' Position advanced to 62 Processing position 62, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 63, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' Position check triggered continue Processing position 64, char ' ' Position check triggered continue Processing position 65, char 'e' Position advanced to 66 Processing position 66, char 'c' Position advanced to 67 Processing position 67, char 'h' Position advanced to 68 Processing position 68, char 'o' Position advanced to 69 Processing position 69, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 70, char 'b' Position advanced to 71 Processing position 71, char 'y' Position advanced to 72 Processing position 72, char 'e' Position advanced to 73 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x62ae0b424220, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x62ae0b424310 to cmd 0x62ae0b424220 and target 0x62ae0b4244a0 Starting collection after redirection Setting redirection root to node 0x62ae0b424310 Redirection node type=8, target cmd=0x62ae0b424220, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x62ae0b4244f0 to cmd 0x62ae0b424220 and target 0x62ae0b424580 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x62ae0b424220 with redirection 0x62ae0b424310 (type 8) Associated command 0x62ae0b424760 with redirection 0x62ae0b4244f0 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x62ae0b424690 Starting pipe execution for node 0x62ae0b424690 echo Forking left child Forking right child 198280) Processing redirections for left command echo 0x62ae0b424690) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 198278 Redirection setup failed (error code 1) 198278 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 198280) executing command Executing node type=2 at 0x62ae0b424220 [echo] [hi] echo 0 0 0) Left command exited with code 0 198281) 198281) echo Processing redirections for right command echo 0x62ae0b424690) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x62ae0b4244f0 targeting 0x62ae0b424760 No more redirections found for cmd 0x62ae0b424760 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 198281) executing command Executing node type=2 at 0x62ae0b424760 [echo] [bye] echo 0 0 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test  99: ❌ echo hi | echo bye >./test_files/invalid_permission 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char 'b' Position advanced to 16 Processing position 16, char 'y' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 19, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 20, char '.' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'e' Position advanced to 24 Processing position 24, char 's' Position advanced to 25 Processing position 25, char 't' Position advanced to 26 Processing position 26, char '_' Position advanced to 27 Processing position 27, char 'f' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'l' Position advanced to 30 Processing position 30, char 'e' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'n' Position advanced to 35 Processing position 35, char 'v' Position advanced to 36 Processing position 36, char 'a' Position advanced to 37 Processing position 37, char 'l' Position advanced to 38 Processing position 38, char 'i' Position advanced to 39 Processing position 39, char 'd' Position advanced to 40 Processing position 40, char '_' Position advanced to 41 Processing position 41, char 'p' Position advanced to 42 Processing position 42, char 'e' Position advanced to 43 Processing position 43, char 'r' Position advanced to 44 Processing position 44, char 'm' Position advanced to 45 Processing position 45, char 'i' Position advanced to 46 Processing position 46, char 's' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'o' Position advanced to 50 Processing position 50, char 'n' Position advanced to 51 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo, bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x5c0b2e2e4940, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5c0b2e2e4990 to cmd 0x5c0b2e2e4940 and target 0x5c0b2e2e4b20 Starting collection after redirection Setting redirection root to node 0x5c0b2e2e4990 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 [echo] [bye] Command argument verification complete Associated command 0x5c0b2e2e4940 with redirection 0x5c0b2e2e4990 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5c0b2e2e47d0 Starting pipe execution for node 0x5c0b2e2e47d0 echo Forking left child Forking right child 198328) Left pipe process (PID 198328) executing command Executing node type=2 at 0x5c0b2e2c8f40 [echo] [hi] echo 0 0 0) Left command exited with code 0 198329) 198329) echo Processing redirections for right command echo 0x5c0b2e2e47d0) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 198326 Redirection setup failed (error code 1) 198326 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 198329) executing command Executing node type=2 at 0x5c0b2e2e4940 [echo] [bye] echo 0 0 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 100: ❌ echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini output = (hi echo bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=11) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' Position check triggered continue Processing position 11, char '.' Position advanced to 12 Processing position 12, char '/' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char 'u' Position advanced to 15 Processing position 15, char 't' Position advanced to 16 Processing position 16, char 'f' Position advanced to 17 Processing position 17, char 'i' Position advanced to 18 Processing position 18, char 'l' Position advanced to 19 Processing position 19, char 'e' Position advanced to 20 Processing position 20, char 's' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 'o' Position advanced to 23 Processing position 23, char 'u' Position advanced to 24 Processing position 24, char 't' Position advanced to 25 Processing position 25, char 'f' Position advanced to 26 Processing position 26, char 'i' Position advanced to 27 Processing position 27, char 'l' Position advanced to 28 Processing position 28, char 'e' Position advanced to 29 Processing position 29, char '0' Position advanced to 30 Processing position 30, char '1' Position advanced to 31 Processing position 31, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 32, char 'e' Position advanced to 33 Processing position 33, char 'c' Position advanced to 34 Processing position 34, char 'h' Position advanced to 35 Processing position 35, char 'o' Position advanced to 36 Processing position 36, char ' ' Creating token from 'echo' Token type set to 3 Creating token type=3 content='echo' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' Position check triggered continue Processing position 37, char 'b' Position advanced to 38 Processing position 38, char 'y' Position advanced to 39 Processing position 39, char 'e' Position advanced to 40 Processing position 40, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' Position check triggered continue Processing position 41, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' type=8 content='>' Position check triggered continue Processing position 42, char '.' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 't' Position advanced to 45 Processing position 45, char 'e' Position advanced to 46 Processing position 46, char 's' Position advanced to 47 Processing position 47, char 't' Position advanced to 48 Processing position 48, char '_' Position advanced to 49 Processing position 49, char 'f' Position advanced to 50 Processing position 50, char 'i' Position advanced to 51 Processing position 51, char 'l' Position advanced to 52 Processing position 52, char 'e' Position advanced to 53 Processing position 53, char 's' Position advanced to 54 Processing position 54, char '/' Position advanced to 55 Processing position 55, char 'i' Position advanced to 56 Processing position 56, char 'n' Position advanced to 57 Processing position 57, char 'v' Position advanced to 58 Processing position 58, char 'a' Position advanced to 59 Processing position 59, char 'l' Position advanced to 60 Processing position 60, char 'i' Position advanced to 61 Processing position 61, char 'd' Position advanced to 62 Processing position 62, char '_' Position advanced to 63 Processing position 63, char 'p' Position advanced to 64 Processing position 64, char 'e' Position advanced to 65 Processing position 65, char 'r' Position advanced to 66 Processing position 66, char 'm' Position advanced to 67 Processing position 67, char 'i' Position advanced to 68 Processing position 68, char 's' Position advanced to 69 Processing position 69, char 's' Position advanced to 70 Processing position 70, char 'i' Position advanced to 71 Processing position 71, char 'o' Position advanced to 72 Processing position 72, char 'n' Position advanced to 73 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=3 content=[echo] type=3 content=[bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes echo Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x59cc12504b30, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x59cc12504db0 to cmd 0x59cc12504b30 and target 0x59cc12504e00 Starting collection after redirection Found argument 'echo' after redirection Found argument 'bye' after redirection Setting redirection root to node 0x59cc12504db0 Redirection node type=8, target cmd=0x59cc12504b30, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x59cc125050b0 to cmd 0x59cc12504b30 and target 0x59cc12505160 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [bye] [echo] [hi] [echo] [bye] Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [bye] [echo] [hi] [echo] [bye] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 echo Executing command tree Executing node type=8 at 0x59cc12504db0 Executing redirection node type=8 0x59cc12504b30 (type 2) echo with 3 args echo (nil)) Processing redirection node type=8 './outfiles/outfile01' Redirection setup failed (error code 1) 198366 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x59cc12504b30 [echo] [hi] [echo] [bye] echo 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 101: ❌ echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char 'b' Position advanced to 16 Processing position 16, char 'y' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 19, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 20, char '.' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'e' Position advanced to 24 Processing position 24, char 's' Position advanced to 25 Processing position 25, char 't' Position advanced to 26 Processing position 26, char '_' Position advanced to 27 Processing position 27, char 'f' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'l' Position advanced to 30 Processing position 30, char 'e' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'n' Position advanced to 35 Processing position 35, char 'v' Position advanced to 36 Processing position 36, char 'a' Position advanced to 37 Processing position 37, char 'l' Position advanced to 38 Processing position 38, char 'i' Position advanced to 39 Processing position 39, char 'd' Position advanced to 40 Processing position 40, char '_' Position advanced to 41 Processing position 41, char 'p' Position advanced to 42 Processing position 42, char 'e' Position advanced to 43 Processing position 43, char 'r' Position advanced to 44 Processing position 44, char 'm' Position advanced to 45 Processing position 45, char 'i' Position advanced to 46 Processing position 46, char 's' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'o' Position advanced to 50 Processing position 50, char 'n' Position advanced to 51 Processing position 51, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 52, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 53, char '.' Position advanced to 54 Processing position 54, char '/' Position advanced to 55 Processing position 55, char 'o' Position advanced to 56 Processing position 56, char 'u' Position advanced to 57 Processing position 57, char 't' Position advanced to 58 Processing position 58, char 'f' Position advanced to 59 Processing position 59, char 'i' Position advanced to 60 Processing position 60, char 'l' Position advanced to 61 Processing position 61, char 'e' Position advanced to 62 Processing position 62, char 's' Position advanced to 63 Processing position 63, char '/' Position advanced to 64 Processing position 64, char 'o' Position advanced to 65 Processing position 65, char 'u' Position advanced to 66 Processing position 66, char 't' Position advanced to 67 Processing position 67, char 'f' Position advanced to 68 Processing position 68, char 'i' Position advanced to 69 Processing position 69, char 'l' Position advanced to 70 Processing position 70, char 'e' Position advanced to 71 Processing position 71, char '0' Position advanced to 72 Processing position 72, char '1' Position advanced to 73 Tokenization complete, finishing Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo, bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x633db1ec02e0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x633db1ec0350 to cmd 0x633db1ec02e0 and target 0x633db1ec04e0 Starting collection after redirection Setting redirection root to node 0x633db1ec0350 Redirection node type=8, target cmd=0x633db1ec02e0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x633db1ec0530 to cmd 0x633db1ec02e0 and target 0x633db1ec05c0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [bye] Command argument verification complete Associated command 0x633db1ec02e0 with redirection 0x633db1ec0350 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x633db1ec0150 Starting pipe execution for node 0x633db1ec0150 echo Forking left child Forking right child 198416) Left pipe process (PID 198416) executing command Executing node type=2 at 0x633db1ec00a0 [echo] [hi] echo 0 0 198417) echo Processing redirections for right command echo 0x633db1ec0150) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 198414 Redirection setup failed (error code 1) 198414 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 198417) executing command Executing node type=2 at 0x633db1ec02e0 [echo] [bye] echo 0 0 0) Left command exited with code 0 198417) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 102: ❌ cat <"./test_files/infile" >./test_files/invalid_permission 
mini exit code =
bash exit code = 1
mini error = ( 'cat <"./test_files/infile" >./test_files/invalid_permission' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char '"' Processing at pos 5 with adjacency={0,1} Processing quoted string starting at position 5 with " './test_files/infile' > Restored adjacency to {0,1} for content './test_files/infile' 5) Handling as redirection target Handling quoted text './test_files/infile' as potential redirection target Found redirection node type=7 Creating file node for redirection target Linked file './test_files/infile' to redirection node Position check triggered continue Processing position 26, char ' ' Creating token from '"./test_files/infile"' Token type set to 5 Creating token type=5 content='"./test_files/infile"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' Position check triggered continue Processing position 27, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' type=8 content='>' Position check triggered continue Processing position 28, char '.' Position advanced to 29 Processing position 29, char '/' Position advanced to 30 Processing position 30, char 't' Position advanced to 31 Processing position 31, char 'e' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char 't' Position advanced to 34 Processing position 34, char '_' Position advanced to 35 Processing position 35, char 'f' Position advanced to 36 Processing position 36, char 'i' Position advanced to 37 Processing position 37, char 'l' Position advanced to 38 Processing position 38, char 'e' Position advanced to 39 Processing position 39, char 's' Position advanced to 40 Processing position 40, char '/' Position advanced to 41 Processing position 41, char 'i' Position advanced to 42 Processing position 42, char 'n' Position advanced to 43 Processing position 43, char 'v' Position advanced to 44 Processing position 44, char 'a' Position advanced to 45 Processing position 45, char 'l' Position advanced to 46 Processing position 46, char 'i' Position advanced to 47 Processing position 47, char 'd' Position advanced to 48 Processing position 48, char '_' Position advanced to 49 Processing position 49, char 'p' Position advanced to 50 Processing position 50, char 'e' Position advanced to 51 Processing position 51, char 'r' Position advanced to 52 Processing position 52, char 'm' Position advanced to 53 Processing position 53, char 'i' Position advanced to 54 Processing position 54, char 's' Position advanced to 55 Processing position 55, char 's' Position advanced to 56 Processing position 56, char 'i' Position advanced to 57 Processing position 57, char 'o' Position advanced to 58 Processing position 58, char 'n' Position advanced to 59 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[./test_files/infile] type=5 content=["./test_files/infile"] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes cat Processing pipes No pipes found in command Processing redirections Redirection node type=7, target cmd=0x5ac3ca439610, cmd type=2 cat ./test_files/infile Linking redir 0x5ac3ca4396e0 to cmd 0x5ac3ca439610 and target 0x5ac3ca439790 Starting collection after redirection Setting redirection root to node 0x5ac3ca4396e0 Redirection node type=8, target cmd=0x5ac3ca439610, cmd type=2 cat ./test_files/invalid_permission Linking redir 0x5ac3ca4399d0 to cmd 0x5ac3ca439610 and target 0x5ac3ca439a80 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 Skipping redirection node type=8 [cat] Command argument verification complete Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 Skipping redirection node type=8 [cat] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=7 cat Executing command tree Executing node type=7 at 0x5ac3ca4396e0 Executing redirection node type=7 0x5ac3ca439610 (type 2) cat with 0 args cat (nil)) Processing redirection node type=7 './test_files/infile' Setting up input redirection from file './test_files/infile' Successfully opened './test_files/infile' with fd 5 Successfully redirected stdin to file './test_files/infile' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 198456 Redirection setup failed (error code 1) 198456 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5ac3ca439610 [cat] cat 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 103: ❌ cat >./test_files/invalid_permission <"./test_files/infile" 
mini exit code =
bash exit code = 1
mini error = ( 'cat >./test_files/invalid_permission <"./test_files/infile"' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' Position check triggered continue Processing position 5, char '.' Position advanced to 6 Processing position 6, char '/' Position advanced to 7 Processing position 7, char 't' Position advanced to 8 Processing position 8, char 'e' Position advanced to 9 Processing position 9, char 's' Position advanced to 10 Processing position 10, char 't' Position advanced to 11 Processing position 11, char '_' Position advanced to 12 Processing position 12, char 'f' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Processing position 14, char 'l' Position advanced to 15 Processing position 15, char 'e' Position advanced to 16 Processing position 16, char 's' Position advanced to 17 Processing position 17, char '/' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'n' Position advanced to 20 Processing position 20, char 'v' Position advanced to 21 Processing position 21, char 'a' Position advanced to 22 Processing position 22, char 'l' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'd' Position advanced to 25 Processing position 25, char '_' Position advanced to 26 Processing position 26, char 'p' Position advanced to 27 Processing position 27, char 'e' Position advanced to 28 Processing position 28, char 'r' Position advanced to 29 Processing position 29, char 'm' Position advanced to 30 Processing position 30, char 'i' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'o' Position advanced to 35 Processing position 35, char 'n' Position advanced to 36 Processing position 36, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 37, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./test_files/invalid_permission' type=7 content='<' Position check triggered continue Processing position 38, char '"' Processing at pos 38 with adjacency={0,1} Processing quoted string starting at position 38 with " './test_files/infile' NONE Restored adjacency to {0,1} for content './test_files/infile' 5) Handling as redirection target Handling quoted text './test_files/infile' as potential redirection target Found redirection node type=7 Creating file node for redirection target Linked file './test_files/infile' to redirection node Position check triggered continue Tokenization complete, finishing Creating token from '"./test_files/infile"' Token type set to 5 Creating token type=5 content='"./test_files/infile"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./test_files/invalid_permission' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' Building and executing command Building AST from token list type=2 content=[cat] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=7 content=[<] type=3 content=[./test_files/infile] type=5 content=["./test_files/infile"] Building AST from token list Found 1 command nodes cat Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x5a54a78740c0, cmd type=2 cat ./test_files/invalid_permission Linking redir 0x5a54a7874190 to cmd 0x5a54a78740c0 and target 0x5a54a7874240 Starting collection after redirection Setting redirection root to node 0x5a54a7874190 Redirection node type=7, target cmd=0x5a54a78740c0, cmd type=2 cat ./test_files/infile Linking redir 0x5a54a78742d0 to cmd 0x5a54a78740c0 and target 0x5a54a78743a0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=8 Skipping redirection node type=7 [cat] Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=8 Skipping redirection node type=7 [cat] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 cat Executing command tree Executing node type=8 at 0x5a54a7874190 Executing redirection node type=8 0x5a54a78740c0 (type 2) cat with 0 args cat (nil)) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 198497 Redirection setup failed (error code 1) 198497 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5a54a78740c0 [cat] cat 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 104: ❌ cat <missing >./outfiles/outfile01 
mini exit code =
bash exit code = 1
mini error = ( 'cat <missing >./outfiles/outfile01' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 's' Position advanced to 8 Processing position 8, char 's' Position advanced to 9 Processing position 9, char 'i' Position advanced to 10 Processing position 10, char 'n' Position advanced to 11 Processing position 11, char 'g' Position advanced to 12 Processing position 12, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 13, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=8 content='>' Position check triggered continue Processing position 14, char '.' Position advanced to 15 Processing position 15, char '/' Position advanced to 16 Processing position 16, char 'o' Position advanced to 17 Processing position 17, char 'u' Position advanced to 18 Processing position 18, char 't' Position advanced to 19 Processing position 19, char 'f' Position advanced to 20 Processing position 20, char 'i' Position advanced to 21 Processing position 21, char 'l' Position advanced to 22 Processing position 22, char 'e' Position advanced to 23 Processing position 23, char 's' Position advanced to 24 Processing position 24, char '/' Position advanced to 25 Processing position 25, char 'o' Position advanced to 26 Processing position 26, char 'u' Position advanced to 27 Processing position 27, char 't' Position advanced to 28 Processing position 28, char 'f' Position advanced to 29 Processing position 29, char 'i' Position advanced to 30 Processing position 30, char 'l' Position advanced to 31 Processing position 31, char 'e' Position advanced to 32 Processing position 32, char '0' Position advanced to 33 Processing position 33, char '1' Position advanced to 34 Tokenization complete, finishing Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=8 content='>' type=3 content='./outfiles/outfile01' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[missing] type=8 content=[>] type=3 content=[./outfiles/outfile01] Building AST from token list Found 1 command nodes cat Processing pipes No pipes found in command Processing redirections Redirection node type=7, target cmd=0x5ae9f2555eb0, cmd type=2 cat missing Linking redir 0x5ae9f2593980 to cmd 0x5ae9f2555eb0 and target 0x5ae9f2593a30 Starting collection after redirection Setting redirection root to node 0x5ae9f2593980 Redirection node type=8, target cmd=0x5ae9f2555eb0, cmd type=2 cat ./outfiles/outfile01 Linking redir 0x5ae9f2593b10 to cmd 0x5ae9f2555eb0 and target 0x5ae9f2593be0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 Skipping redirection node type=8 [cat] Command argument verification complete Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 Skipping redirection node type=8 [cat] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=7 cat Executing command tree Executing node type=7 at 0x5ae9f2593980 Executing redirection node type=7 0x5ae9f2555eb0 (type 2) cat with 0 args cat (nil)) Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 198540 for file 'missing'. Continuing. Redirection setup failed (error code 1) 198538 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5ae9f2555eb0 [cat] cat 0 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test 105: ❌ cat >./outfiles/outfile01 <missing 
mini exit code =
bash exit code = 1
mini error = ( 'cat >./outfiles/outfile01 <missing' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' Position check triggered continue Processing position 5, char '.' Position advanced to 6 Processing position 6, char '/' Position advanced to 7 Processing position 7, char 'o' Position advanced to 8 Processing position 8, char 'u' Position advanced to 9 Processing position 9, char 't' Position advanced to 10 Processing position 10, char 'f' Position advanced to 11 Processing position 11, char 'i' Position advanced to 12 Processing position 12, char 'l' Position advanced to 13 Processing position 13, char 'e' Position advanced to 14 Processing position 14, char 's' Position advanced to 15 Processing position 15, char '/' Position advanced to 16 Processing position 16, char 'o' Position advanced to 17 Processing position 17, char 'u' Position advanced to 18 Processing position 18, char 't' Position advanced to 19 Processing position 19, char 'f' Position advanced to 20 Processing position 20, char 'i' Position advanced to 21 Processing position 21, char 'l' Position advanced to 22 Processing position 22, char 'e' Position advanced to 23 Processing position 23, char '0' Position advanced to 24 Processing position 24, char '1' Position advanced to 25 Processing position 25, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 26, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./outfiles/outfile01' type=7 content='<' Position check triggered continue Processing position 27, char 'm' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 's' Position advanced to 30 Processing position 30, char 's' Position advanced to 31 Processing position 31, char 'i' Position advanced to 32 Processing position 32, char 'n' Position advanced to 33 Processing position 33, char 'g' Position advanced to 34 Tokenization complete, finishing Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./outfiles/outfile01' type=7 content='<' type=3 content='missing' Building and executing command Building AST from token list type=2 content=[cat] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=7 content=[<] type=3 content=[missing] Building AST from token list Found 1 command nodes cat Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x5848ccb91610, cmd type=2 cat ./outfiles/outfile01 Linking redir 0x5848ccbace90 to cmd 0x5848ccb91610 and target 0x5848ccbacf60 Starting collection after redirection Setting redirection root to node 0x5848ccbace90 Redirection node type=7, target cmd=0x5848ccb91610, cmd type=2 cat missing Linking redir 0x5848ccbad070 to cmd 0x5848ccb91610 and target 0x5848ccbad140 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=8 Skipping redirection node type=7 [cat] Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=8 Skipping redirection node type=7 [cat] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 cat Executing command tree Executing node type=8 at 0x5848ccbace90 Executing redirection node type=8 0x5848ccb91610 (type 2) cat with 0 args cat (nil)) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 5 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 198581 for file 'missing'. Continuing. Redirection setup failed (error code 1) 198579 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5848ccb91610 [cat] cat 0 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test 106: ❌ cat <missing >./test_files/invalid_permission 
mini exit code =
bash exit code = 1
mini error = ( 'cat <missing >./test_files/invalid_permission' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 's' Position advanced to 8 Processing position 8, char 's' Position advanced to 9 Processing position 9, char 'i' Position advanced to 10 Processing position 10, char 'n' Position advanced to 11 Processing position 11, char 'g' Position advanced to 12 Processing position 12, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 13, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=8 content='>' Position check triggered continue Processing position 14, char '.' Position advanced to 15 Processing position 15, char '/' Position advanced to 16 Processing position 16, char 't' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Processing position 19, char 't' Position advanced to 20 Processing position 20, char '_' Position advanced to 21 Processing position 21, char 'f' Position advanced to 22 Processing position 22, char 'i' Position advanced to 23 Processing position 23, char 'l' Position advanced to 24 Processing position 24, char 'e' Position advanced to 25 Processing position 25, char 's' Position advanced to 26 Processing position 26, char '/' Position advanced to 27 Processing position 27, char 'i' Position advanced to 28 Processing position 28, char 'n' Position advanced to 29 Processing position 29, char 'v' Position advanced to 30 Processing position 30, char 'a' Position advanced to 31 Processing position 31, char 'l' Position advanced to 32 Processing position 32, char 'i' Position advanced to 33 Processing position 33, char 'd' Position advanced to 34 Processing position 34, char '_' Position advanced to 35 Processing position 35, char 'p' Position advanced to 36 Processing position 36, char 'e' Position advanced to 37 Processing position 37, char 'r' Position advanced to 38 Processing position 38, char 'm' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 's' Position advanced to 41 Processing position 41, char 's' Position advanced to 42 Processing position 42, char 'i' Position advanced to 43 Processing position 43, char 'o' Position advanced to 44 Processing position 44, char 'n' Position advanced to 45 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[missing] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes cat Processing pipes No pipes found in command Processing redirections Redirection node type=7, target cmd=0x5b5a4f4829c0, cmd type=2 cat missing Linking redir 0x5b5a4f482a90 to cmd 0x5b5a4f4829c0 and target 0x5b5a4f482b60 Starting collection after redirection Setting redirection root to node 0x5b5a4f482a90 Redirection node type=8, target cmd=0x5b5a4f4829c0, cmd type=2 cat ./test_files/invalid_permission Linking redir 0x5b5a4f482c10 to cmd 0x5b5a4f4829c0 and target 0x5b5a4f482cc0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 Skipping redirection node type=8 [cat] Command argument verification complete Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 Skipping redirection node type=8 [cat] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=7 cat Executing command tree Executing node type=7 at 0x5b5a4f482a90 Executing redirection node type=7 0x5b5a4f4829c0 (type 2) cat with 0 args cat (nil)) Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 198622 for file 'missing'. Continuing. Redirection setup failed (error code 1) 198620 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5b5a4f4829c0 [cat] cat 0 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test 107: ❌ cat >./test_files/invalid_permission <missing 
mini exit code =
bash exit code = 1
mini error = ( 'cat >./test_files/invalid_permission <missing' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' Position check triggered continue Processing position 5, char '.' Position advanced to 6 Processing position 6, char '/' Position advanced to 7 Processing position 7, char 't' Position advanced to 8 Processing position 8, char 'e' Position advanced to 9 Processing position 9, char 's' Position advanced to 10 Processing position 10, char 't' Position advanced to 11 Processing position 11, char '_' Position advanced to 12 Processing position 12, char 'f' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Processing position 14, char 'l' Position advanced to 15 Processing position 15, char 'e' Position advanced to 16 Processing position 16, char 's' Position advanced to 17 Processing position 17, char '/' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'n' Position advanced to 20 Processing position 20, char 'v' Position advanced to 21 Processing position 21, char 'a' Position advanced to 22 Processing position 22, char 'l' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'd' Position advanced to 25 Processing position 25, char '_' Position advanced to 26 Processing position 26, char 'p' Position advanced to 27 Processing position 27, char 'e' Position advanced to 28 Processing position 28, char 'r' Position advanced to 29 Processing position 29, char 'm' Position advanced to 30 Processing position 30, char 'i' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'o' Position advanced to 35 Processing position 35, char 'n' Position advanced to 36 Processing position 36, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 37, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./test_files/invalid_permission' type=7 content='<' Position check triggered continue Processing position 38, char 'm' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 's' Position advanced to 41 Processing position 41, char 's' Position advanced to 42 Processing position 42, char 'i' Position advanced to 43 Processing position 43, char 'n' Position advanced to 44 Processing position 44, char 'g' Position advanced to 45 Tokenization complete, finishing Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./test_files/invalid_permission' type=7 content='<' type=3 content='missing' Building and executing command Building AST from token list type=2 content=[cat] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=7 content=[<] type=3 content=[missing] Building AST from token list Found 1 command nodes cat Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x5b5b68f9b970, cmd type=2 cat ./test_files/invalid_permission Linking redir 0x5b5b68f9ba40 to cmd 0x5b5b68f9b970 and target 0x5b5b68f9baf0 Starting collection after redirection Setting redirection root to node 0x5b5b68f9ba40 Redirection node type=7, target cmd=0x5b5b68f9b970, cmd type=2 cat missing Linking redir 0x5b5b68f9bc10 to cmd 0x5b5b68f9b970 and target 0x5b5b68f9bd00 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=8 Skipping redirection node type=7 [cat] Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=8 Skipping redirection node type=7 [cat] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 cat Executing command tree Executing node type=8 at 0x5b5b68f9ba40 Executing redirection node type=8 0x5b5b68f9b970 (type 2) cat with 0 args cat (nil)) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 198661 Redirection setup failed (error code 1) 198661 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5b5b68f9b970 [cat] cat 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 108: ❌ cat >./outfiles/outfile01 <missing >./test_files/invalid_permission 
mini exit code =
bash exit code = 1
mini error = ( 'cat >./outfiles/outfile01 <missing >./test_files/invalid_permission' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' Position check triggered continue Processing position 5, char '.' Position advanced to 6 Processing position 6, char '/' Position advanced to 7 Processing position 7, char 'o' Position advanced to 8 Processing position 8, char 'u' Position advanced to 9 Processing position 9, char 't' Position advanced to 10 Processing position 10, char 'f' Position advanced to 11 Processing position 11, char 'i' Position advanced to 12 Processing position 12, char 'l' Position advanced to 13 Processing position 13, char 'e' Position advanced to 14 Processing position 14, char 's' Position advanced to 15 Processing position 15, char '/' Position advanced to 16 Processing position 16, char 'o' Position advanced to 17 Processing position 17, char 'u' Position advanced to 18 Processing position 18, char 't' Position advanced to 19 Processing position 19, char 'f' Position advanced to 20 Processing position 20, char 'i' Position advanced to 21 Processing position 21, char 'l' Position advanced to 22 Processing position 22, char 'e' Position advanced to 23 Processing position 23, char '0' Position advanced to 24 Processing position 24, char '1' Position advanced to 25 Processing position 25, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 26, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./outfiles/outfile01' type=7 content='<' Position check triggered continue Processing position 27, char 'm' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 's' Position advanced to 30 Processing position 30, char 's' Position advanced to 31 Processing position 31, char 'i' Position advanced to 32 Processing position 32, char 'n' Position advanced to 33 Processing position 33, char 'g' Position advanced to 34 Processing position 34, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./outfiles/outfile01' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 35, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./outfiles/outfile01' type=7 content='<' type=3 content='missing' type=8 content='>' Position check triggered continue Processing position 36, char '.' Position advanced to 37 Processing position 37, char '/' Position advanced to 38 Processing position 38, char 't' Position advanced to 39 Processing position 39, char 'e' Position advanced to 40 Processing position 40, char 's' Position advanced to 41 Processing position 41, char 't' Position advanced to 42 Processing position 42, char '_' Position advanced to 43 Processing position 43, char 'f' Position advanced to 44 Processing position 44, char 'i' Position advanced to 45 Processing position 45, char 'l' Position advanced to 46 Processing position 46, char 'e' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char '/' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'n' Position advanced to 51 Processing position 51, char 'v' Position advanced to 52 Processing position 52, char 'a' Position advanced to 53 Processing position 53, char 'l' Position advanced to 54 Processing position 54, char 'i' Position advanced to 55 Processing position 55, char 'd' Position advanced to 56 Processing position 56, char '_' Position advanced to 57 Processing position 57, char 'p' Position advanced to 58 Processing position 58, char 'e' Position advanced to 59 Processing position 59, char 'r' Position advanced to 60 Processing position 60, char 'm' Position advanced to 61 Processing position 61, char 'i' Position advanced to 62 Processing position 62, char 's' Position advanced to 63 Processing position 63, char 's' Position advanced to 64 Processing position 64, char 'i' Position advanced to 65 Processing position 65, char 'o' Position advanced to 66 Processing position 66, char 'n' Position advanced to 67 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='cat' type=8 content='>' type=3 content='./outfiles/outfile01' type=7 content='<' type=3 content='missing' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[cat] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=7 content=[<] type=3 content=[missing] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes cat Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x56ce4d59f1f0, cmd type=2 cat ./outfiles/outfile01 Linking redir 0x56ce4d59f2c0 to cmd 0x56ce4d59f1f0 and target 0x56ce4d59f390 Starting collection after redirection Setting redirection root to node 0x56ce4d59f2c0 Redirection node type=7, target cmd=0x56ce4d59f1f0, cmd type=2 cat missing Linking redir 0x56ce4d59f4a0 to cmd 0x56ce4d59f1f0 and target 0x56ce4d59f570 Starting collection after redirection Redirection node type=8, target cmd=0x56ce4d59f1f0, cmd type=2 cat ./test_files/invalid_permission Linking redir 0x56ce4d59f620 to cmd 0x56ce4d59f1f0 and target 0x56ce4d59f6d0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=8 Skipping redirection node type=7 Skipping redirection node type=8 [cat] Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=8 Skipping redirection node type=7 Skipping redirection node type=8 [cat] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 cat Executing command tree Executing node type=8 at 0x56ce4d59f2c0 Executing redirection node type=8 0x56ce4d59f1f0 (type 2) cat with 0 args cat (nil)) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 5 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 198702 Redirection setup failed (error code 1) 198702 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x56ce4d59f1f0 [cat] cat 0 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test 115: ❌ ls >>./test_files/invalid_permission 
mini output = (2 bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >>./test_files/invalid_permission' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' Position check triggered continue Processing position 5, char '.' Position advanced to 6 Processing position 6, char '/' Position advanced to 7 Processing position 7, char 't' Position advanced to 8 Processing position 8, char 'e' Position advanced to 9 Processing position 9, char 's' Position advanced to 10 Processing position 10, char 't' Position advanced to 11 Processing position 11, char '_' Position advanced to 12 Processing position 12, char 'f' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Processing position 14, char 'l' Position advanced to 15 Processing position 15, char 'e' Position advanced to 16 Processing position 16, char 's' Position advanced to 17 Processing position 17, char '/' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'n' Position advanced to 20 Processing position 20, char 'v' Position advanced to 21 Processing position 21, char 'a' Position advanced to 22 Processing position 22, char 'l' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'd' Position advanced to 25 Processing position 25, char '_' Position advanced to 26 Processing position 26, char 'p' Position advanced to 27 Processing position 27, char 'e' Position advanced to 28 Processing position 28, char 'r' Position advanced to 29 Processing position 29, char 'm' Position advanced to 30 Processing position 30, char 'i' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'o' Position advanced to 35 Processing position 35, char 'n' Position advanced to 36 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[ls] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=9, target cmd=0x64d074ce9b30, cmd type=2 ls ./test_files/invalid_permission Linking redir 0x64d074d057c0 to cmd 0x64d074ce9b30 and target 0x64d074d058d0 Starting collection after redirection Setting redirection root to node 0x64d074d057c0 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=9 [ls] Command argument verification complete Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=9 [ls] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=9 ls Executing command tree Executing node type=9 at 0x64d074d057c0 Executing redirection node type=9 0x64d074ce9b30 (type 2) ls with 0 args ls (nil)) Processing redirection node type=9 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 198989 Redirection setup failed (error code 1) 198989 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x64d074ce9b30 [ls] ls 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 116: ❌ ls >>./test_files/invalid_permission >>./outfiles/outfile01 
mini output = (2 bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >>./test_files/invalid_permission >>./outfiles/outfile01' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' Position check triggered continue Processing position 5, char '.' Position advanced to 6 Processing position 6, char '/' Position advanced to 7 Processing position 7, char 't' Position advanced to 8 Processing position 8, char 'e' Position advanced to 9 Processing position 9, char 's' Position advanced to 10 Processing position 10, char 't' Position advanced to 11 Processing position 11, char '_' Position advanced to 12 Processing position 12, char 'f' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Processing position 14, char 'l' Position advanced to 15 Processing position 15, char 'e' Position advanced to 16 Processing position 16, char 's' Position advanced to 17 Processing position 17, char '/' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'n' Position advanced to 20 Processing position 20, char 'v' Position advanced to 21 Processing position 21, char 'a' Position advanced to 22 Processing position 22, char 'l' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'd' Position advanced to 25 Processing position 25, char '_' Position advanced to 26 Processing position 26, char 'p' Position advanced to 27 Processing position 27, char 'e' Position advanced to 28 Processing position 28, char 'r' Position advanced to 29 Processing position 29, char 'm' Position advanced to 30 Processing position 30, char 'i' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'o' Position advanced to 35 Processing position 35, char 'n' Position advanced to 36 Processing position 36, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 37, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=9 content='>>' Position check triggered continue Processing position 39, char '.' Position advanced to 40 Processing position 40, char '/' Position advanced to 41 Processing position 41, char 'o' Position advanced to 42 Processing position 42, char 'u' Position advanced to 43 Processing position 43, char 't' Position advanced to 44 Processing position 44, char 'f' Position advanced to 45 Processing position 45, char 'i' Position advanced to 46 Processing position 46, char 'l' Position advanced to 47 Processing position 47, char 'e' Position advanced to 48 Processing position 48, char 's' Position advanced to 49 Processing position 49, char '/' Position advanced to 50 Processing position 50, char 'o' Position advanced to 51 Processing position 51, char 'u' Position advanced to 52 Processing position 52, char 't' Position advanced to 53 Processing position 53, char 'f' Position advanced to 54 Processing position 54, char 'i' Position advanced to 55 Processing position 55, char 'l' Position advanced to 56 Processing position 56, char 'e' Position advanced to 57 Processing position 57, char '0' Position advanced to 58 Processing position 58, char '1' Position advanced to 59 Tokenization complete, finishing Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=9 content='>>' type=3 content='./outfiles/outfile01' Building and executing command Building AST from token list type=2 content=[ls] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] type=9 content=[>>] type=3 content=[./outfiles/outfile01] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=9, target cmd=0x621c6706bfd0, cmd type=2 ls ./test_files/invalid_permission Linking redir 0x621c6706c0a0 to cmd 0x621c6706bfd0 and target 0x621c6706c150 Starting collection after redirection Setting redirection root to node 0x621c6706c0a0 Redirection node type=9, target cmd=0x621c6706bfd0, cmd type=2 ls ./outfiles/outfile01 Linking redir 0x621c6706c1e0 to cmd 0x621c6706bfd0 and target 0x621c6706c2d0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=9 Skipping redirection node type=9 [ls] Command argument verification complete Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=9 Skipping redirection node type=9 [ls] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=9 ls Executing command tree Executing node type=9 at 0x621c6706c0a0 Executing redirection node type=9 0x621c6706bfd0 (type 2) ls with 0 args ls (nil)) Processing redirection node type=9 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 199030 Redirection setup failed (error code 1) 199030 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x621c6706bfd0 [ls] ls 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 117: ❌ ls >>./outfiles/outfile01 >>./test_files/invalid_permission 
mini output = (2 bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >>./outfiles/outfile01 >>./test_files/invalid_permission' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' Position check triggered continue Processing position 5, char '.' Position advanced to 6 Processing position 6, char '/' Position advanced to 7 Processing position 7, char 'o' Position advanced to 8 Processing position 8, char 'u' Position advanced to 9 Processing position 9, char 't' Position advanced to 10 Processing position 10, char 'f' Position advanced to 11 Processing position 11, char 'i' Position advanced to 12 Processing position 12, char 'l' Position advanced to 13 Processing position 13, char 'e' Position advanced to 14 Processing position 14, char 's' Position advanced to 15 Processing position 15, char '/' Position advanced to 16 Processing position 16, char 'o' Position advanced to 17 Processing position 17, char 'u' Position advanced to 18 Processing position 18, char 't' Position advanced to 19 Processing position 19, char 'f' Position advanced to 20 Processing position 20, char 'i' Position advanced to 21 Processing position 21, char 'l' Position advanced to 22 Processing position 22, char 'e' Position advanced to 23 Processing position 23, char '0' Position advanced to 24 Processing position 24, char '1' Position advanced to 25 Processing position 25, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 26, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' Position check triggered continue Processing position 28, char '.' Position advanced to 29 Processing position 29, char '/' Position advanced to 30 Processing position 30, char 't' Position advanced to 31 Processing position 31, char 'e' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char 't' Position advanced to 34 Processing position 34, char '_' Position advanced to 35 Processing position 35, char 'f' Position advanced to 36 Processing position 36, char 'i' Position advanced to 37 Processing position 37, char 'l' Position advanced to 38 Processing position 38, char 'e' Position advanced to 39 Processing position 39, char 's' Position advanced to 40 Processing position 40, char '/' Position advanced to 41 Processing position 41, char 'i' Position advanced to 42 Processing position 42, char 'n' Position advanced to 43 Processing position 43, char 'v' Position advanced to 44 Processing position 44, char 'a' Position advanced to 45 Processing position 45, char 'l' Position advanced to 46 Processing position 46, char 'i' Position advanced to 47 Processing position 47, char 'd' Position advanced to 48 Processing position 48, char '_' Position advanced to 49 Processing position 49, char 'p' Position advanced to 50 Processing position 50, char 'e' Position advanced to 51 Processing position 51, char 'r' Position advanced to 52 Processing position 52, char 'm' Position advanced to 53 Processing position 53, char 'i' Position advanced to 54 Processing position 54, char 's' Position advanced to 55 Processing position 55, char 's' Position advanced to 56 Processing position 56, char 'i' Position advanced to 57 Processing position 57, char 'o' Position advanced to 58 Processing position 58, char 'n' Position advanced to 59 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[ls] type=9 content=[>>] type=3 content=[./outfiles/outfile01] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=9, target cmd=0x5b024670c090, cmd type=2 ls ./outfiles/outfile01 Linking redir 0x5b024670c160 to cmd 0x5b024670c090 and target 0x5b024670c230 Starting collection after redirection Setting redirection root to node 0x5b024670c160 Redirection node type=9, target cmd=0x5b024670c090, cmd type=2 ls ./test_files/invalid_permission Linking redir 0x5b024670c340 to cmd 0x5b024670c090 and target 0x5b024670c3f0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=9 Skipping redirection node type=9 [ls] Command argument verification complete Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=9 Skipping redirection node type=9 [ls] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=9 ls Executing command tree Executing node type=9 at 0x5b024670c160 Executing redirection node type=9 0x5b024670c090 (type 2) ls with 0 args ls (nil)) Processing redirection node type=9 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 5 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=9 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 199071 Redirection setup failed (error code 1) 199071 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5b024670c090 [ls] ls 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 118: ❌ ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02 
mini output = (2 bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' Position check triggered continue Processing position 4, char '.' Position advanced to 5 Processing position 5, char '/' Position advanced to 6 Processing position 6, char 'o' Position advanced to 7 Processing position 7, char 'u' Position advanced to 8 Processing position 8, char 't' Position advanced to 9 Processing position 9, char 'f' Position advanced to 10 Processing position 10, char 'i' Position advanced to 11 Processing position 11, char 'l' Position advanced to 12 Processing position 12, char 'e' Position advanced to 13 Processing position 13, char 's' Position advanced to 14 Processing position 14, char '/' Position advanced to 15 Processing position 15, char 'o' Position advanced to 16 Processing position 16, char 'u' Position advanced to 17 Processing position 17, char 't' Position advanced to 18 Processing position 18, char 'f' Position advanced to 19 Processing position 19, char 'i' Position advanced to 20 Processing position 20, char 'l' Position advanced to 21 Processing position 21, char 'e' Position advanced to 22 Processing position 22, char '0' Position advanced to 23 Processing position 23, char '1' Position advanced to 24 Processing position 24, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 25, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' type=9 content='>>' Position check triggered continue Processing position 27, char '.' Position advanced to 28 Processing position 28, char '/' Position advanced to 29 Processing position 29, char 't' Position advanced to 30 Processing position 30, char 'e' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char 't' Position advanced to 33 Processing position 33, char '_' Position advanced to 34 Processing position 34, char 'f' Position advanced to 35 Processing position 35, char 'i' Position advanced to 36 Processing position 36, char 'l' Position advanced to 37 Processing position 37, char 'e' Position advanced to 38 Processing position 38, char 's' Position advanced to 39 Processing position 39, char '/' Position advanced to 40 Processing position 40, char 'i' Position advanced to 41 Processing position 41, char 'n' Position advanced to 42 Processing position 42, char 'v' Position advanced to 43 Processing position 43, char 'a' Position advanced to 44 Processing position 44, char 'l' Position advanced to 45 Processing position 45, char 'i' Position advanced to 46 Processing position 46, char 'd' Position advanced to 47 Processing position 47, char '_' Position advanced to 48 Processing position 48, char 'p' Position advanced to 49 Processing position 49, char 'e' Position advanced to 50 Processing position 50, char 'r' Position advanced to 51 Processing position 51, char 'm' Position advanced to 52 Processing position 52, char 'i' Position advanced to 53 Processing position 53, char 's' Position advanced to 54 Processing position 54, char 's' Position advanced to 55 Processing position 55, char 'i' Position advanced to 56 Processing position 56, char 'o' Position advanced to 57 Processing position 57, char 'n' Position advanced to 58 Processing position 58, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 59, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=9 content='>>' Position check triggered continue Processing position 61, char '.' Position advanced to 62 Processing position 62, char '/' Position advanced to 63 Processing position 63, char 'o' Position advanced to 64 Processing position 64, char 'u' Position advanced to 65 Processing position 65, char 't' Position advanced to 66 Processing position 66, char 'f' Position advanced to 67 Processing position 67, char 'i' Position advanced to 68 Processing position 68, char 'l' Position advanced to 69 Processing position 69, char 'e' Position advanced to 70 Processing position 70, char 's' Position advanced to 71 Processing position 71, char '/' Position advanced to 72 Processing position 72, char 'o' Position advanced to 73 Processing position 73, char 'u' Position advanced to 74 Processing position 74, char 't' Position advanced to 75 Processing position 75, char 'f' Position advanced to 76 Processing position 76, char 'i' Position advanced to 77 Processing position 77, char 'l' Position advanced to 78 Processing position 78, char 'e' Position advanced to 79 Processing position 79, char '0' Position advanced to 80 Processing position 80, char '2' Position advanced to 81 Tokenization complete, finishing Creating token from './outfiles/outfile02' Token type set to 3 Creating token type=3 content='./outfiles/outfile02' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=9 content='>>' type=3 content='./outfiles/outfile02' Building and executing command Building AST from token list type=2 content=[ls] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] type=9 content=[>>] type=3 content=[./outfiles/outfile02] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x62b870e62a80, cmd type=2 ls ./outfiles/outfile01 Linking redir 0x62b870e62b50 to cmd 0x62b870e62a80 and target 0x62b870e62c20 Starting collection after redirection Setting redirection root to node 0x62b870e62b50 Redirection node type=9, target cmd=0x62b870e62a80, cmd type=2 ls ./test_files/invalid_permission Linking redir 0x62b870e62d30 to cmd 0x62b870e62a80 and target 0x62b870e62de0 Starting collection after redirection Redirection node type=9, target cmd=0x62b870e62a80, cmd type=2 ls ./outfiles/outfile02 Linking redir 0x62b870e62f00 to cmd 0x62b870e62a80 and target 0x62b870e62ff0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=8 Skipping redirection node type=9 Skipping redirection node type=9 [ls] Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=8 Skipping redirection node type=9 Skipping redirection node type=9 [ls] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 ls Executing command tree Executing node type=8 at 0x62b870e62b50 Executing redirection node type=8 0x62b870e62a80 (type 2) ls with 0 args ls (nil)) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 5 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=9 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 199112 Redirection setup failed (error code 1) 199112 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x62b870e62a80 [ls] ls 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 119: ❌ ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02 
mini output = (2 bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=7 content='<' Position check triggered continue Processing position 4, char 'm' Position advanced to 5 Processing position 5, char 'i' Position advanced to 6 Processing position 6, char 's' Position advanced to 7 Processing position 7, char 's' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 'n' Position advanced to 10 Processing position 10, char 'g' Position advanced to 11 Processing position 11, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='ls' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 12, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=7 content='<' type=3 content='missing' type=9 content='>>' Position check triggered continue Processing position 14, char '.' Position advanced to 15 Processing position 15, char '/' Position advanced to 16 Processing position 16, char 't' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Processing position 19, char 't' Position advanced to 20 Processing position 20, char '_' Position advanced to 21 Processing position 21, char 'f' Position advanced to 22 Processing position 22, char 'i' Position advanced to 23 Processing position 23, char 'l' Position advanced to 24 Processing position 24, char 'e' Position advanced to 25 Processing position 25, char 's' Position advanced to 26 Processing position 26, char '/' Position advanced to 27 Processing position 27, char 'i' Position advanced to 28 Processing position 28, char 'n' Position advanced to 29 Processing position 29, char 'v' Position advanced to 30 Processing position 30, char 'a' Position advanced to 31 Processing position 31, char 'l' Position advanced to 32 Processing position 32, char 'i' Position advanced to 33 Processing position 33, char 'd' Position advanced to 34 Processing position 34, char '_' Position advanced to 35 Processing position 35, char 'p' Position advanced to 36 Processing position 36, char 'e' Position advanced to 37 Processing position 37, char 'r' Position advanced to 38 Processing position 38, char 'm' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 's' Position advanced to 41 Processing position 41, char 's' Position advanced to 42 Processing position 42, char 'i' Position advanced to 43 Processing position 43, char 'o' Position advanced to 44 Processing position 44, char 'n' Position advanced to 45 Processing position 45, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='ls' type=7 content='<' type=3 content='missing' type=9 content='>>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 46, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=7 content='<' type=3 content='missing' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=9 content='>>' Position check triggered continue Processing position 48, char '.' Position advanced to 49 Processing position 49, char '/' Position advanced to 50 Processing position 50, char 'o' Position advanced to 51 Processing position 51, char 'u' Position advanced to 52 Processing position 52, char 't' Position advanced to 53 Processing position 53, char 'f' Position advanced to 54 Processing position 54, char 'i' Position advanced to 55 Processing position 55, char 'l' Position advanced to 56 Processing position 56, char 'e' Position advanced to 57 Processing position 57, char 's' Position advanced to 58 Processing position 58, char '/' Position advanced to 59 Processing position 59, char 'o' Position advanced to 60 Processing position 60, char 'u' Position advanced to 61 Processing position 61, char 't' Position advanced to 62 Processing position 62, char 'f' Position advanced to 63 Processing position 63, char 'i' Position advanced to 64 Processing position 64, char 'l' Position advanced to 65 Processing position 65, char 'e' Position advanced to 66 Processing position 66, char '0' Position advanced to 67 Processing position 67, char '2' Position advanced to 68 Tokenization complete, finishing Creating token from './outfiles/outfile02' Token type set to 3 Creating token type=3 content='./outfiles/outfile02' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='ls' type=7 content='<' type=3 content='missing' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=9 content='>>' type=3 content='./outfiles/outfile02' Building and executing command Building AST from token list type=2 content=[ls] type=7 content=[<] type=3 content=[missing] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] type=9 content=[>>] type=3 content=[./outfiles/outfile02] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=7, target cmd=0x5fed95b1c080, cmd type=2 ls missing Linking redir 0x5fed95b1c150 to cmd 0x5fed95b1c080 and target 0x5fed95b1c220 Starting collection after redirection Setting redirection root to node 0x5fed95b1c150 Redirection node type=9, target cmd=0x5fed95b1c080, cmd type=2 ls ./test_files/invalid_permission Linking redir 0x5fed95b1c2d0 to cmd 0x5fed95b1c080 and target 0x5fed95b1c380 Starting collection after redirection Redirection node type=9, target cmd=0x5fed95b1c080, cmd type=2 ls ./outfiles/outfile02 Linking redir 0x5fed95b1c410 to cmd 0x5fed95b1c080 and target 0x5fed95b1c500 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=7 Skipping redirection node type=9 Skipping redirection node type=9 [ls] Command argument verification complete Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=7 Skipping redirection node type=9 Skipping redirection node type=9 [ls] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=7 ls Executing command tree Executing node type=7 at 0x5fed95b1c150 Executing redirection node type=7 0x5fed95b1c080 (type 2) ls with 0 args ls (nil)) Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 199155 for file 'missing'. Continuing. Redirection setup failed (error code 1) 199153 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5fed95b1c080 [ls] ls 0 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test 120: ❌ ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing 
mini output = (2 bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles minishell os_specific outfiles pipes README.md redirects syntax temp tester test_files wildcards)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' Position check triggered continue Processing position 5, char '.' Position advanced to 6 Processing position 6, char '/' Position advanced to 7 Processing position 7, char 't' Position advanced to 8 Processing position 8, char 'e' Position advanced to 9 Processing position 9, char 's' Position advanced to 10 Processing position 10, char 't' Position advanced to 11 Processing position 11, char '_' Position advanced to 12 Processing position 12, char 'f' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Processing position 14, char 'l' Position advanced to 15 Processing position 15, char 'e' Position advanced to 16 Processing position 16, char 's' Position advanced to 17 Processing position 17, char '/' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'n' Position advanced to 20 Processing position 20, char 'v' Position advanced to 21 Processing position 21, char 'a' Position advanced to 22 Processing position 22, char 'l' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'd' Position advanced to 25 Processing position 25, char '_' Position advanced to 26 Processing position 26, char 'p' Position advanced to 27 Processing position 27, char 'e' Position advanced to 28 Processing position 28, char 'r' Position advanced to 29 Processing position 29, char 'm' Position advanced to 30 Processing position 30, char 'i' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'o' Position advanced to 35 Processing position 35, char 'n' Position advanced to 36 Processing position 36, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 37, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=9 content='>>' Position check triggered continue Processing position 39, char '.' Position advanced to 40 Processing position 40, char '/' Position advanced to 41 Processing position 41, char 'o' Position advanced to 42 Processing position 42, char 'u' Position advanced to 43 Processing position 43, char 't' Position advanced to 44 Processing position 44, char 'f' Position advanced to 45 Processing position 45, char 'i' Position advanced to 46 Processing position 46, char 'l' Position advanced to 47 Processing position 47, char 'e' Position advanced to 48 Processing position 48, char 's' Position advanced to 49 Processing position 49, char '/' Position advanced to 50 Processing position 50, char 'o' Position advanced to 51 Processing position 51, char 'u' Position advanced to 52 Processing position 52, char 't' Position advanced to 53 Processing position 53, char 'f' Position advanced to 54 Processing position 54, char 'i' Position advanced to 55 Processing position 55, char 'l' Position advanced to 56 Processing position 56, char 'e' Position advanced to 57 Processing position 57, char '0' Position advanced to 58 Processing position 58, char '2' Position advanced to 59 Processing position 59, char ' ' Creating token from './outfiles/outfile02' Token type set to 3 Creating token type=3 content='./outfiles/outfile02' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=9 content='>>' type=3 content='./outfiles/outfile02' Position check triggered continue Processing position 60, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=9 content='>>' type=3 content='./outfiles/outfile02' type=7 content='<' Position check triggered continue Processing position 61, char 'm' Position advanced to 62 Processing position 62, char 'i' Position advanced to 63 Processing position 63, char 's' Position advanced to 64 Processing position 64, char 's' Position advanced to 65 Processing position 65, char 'i' Position advanced to 66 Processing position 66, char 'n' Position advanced to 67 Processing position 67, char 'g' Position advanced to 68 Tokenization complete, finishing Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='ls' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=9 content='>>' type=3 content='./outfiles/outfile02' type=7 content='<' type=3 content='missing' Building and executing command Building AST from token list type=2 content=[ls] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] type=9 content=[>>] type=3 content=[./outfiles/outfile02] type=7 content=[<] type=3 content=[missing] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=9, target cmd=0x5639b9fe5170, cmd type=2 ls ./test_files/invalid_permission Linking redir 0x5639b9fe5240 to cmd 0x5639b9fe5170 and target 0x5639b9fe52f0 Starting collection after redirection Setting redirection root to node 0x5639b9fe5240 Redirection node type=9, target cmd=0x5639b9fe5170, cmd type=2 ls ./outfiles/outfile02 Linking redir 0x5639b9fe5410 to cmd 0x5639b9fe5170 and target 0x5639b9fe5500 Starting collection after redirection Redirection node type=7, target cmd=0x5639b9fe5170, cmd type=2 ls missing Linking redir 0x5639b9fe5610 to cmd 0x5639b9fe5170 and target 0x5639b9fe56e0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=9 Skipping redirection node type=9 Skipping redirection node type=7 [ls] Command argument verification complete Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] Skipping redirection node type=9 Skipping redirection node type=9 Skipping redirection node type=7 [ls] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=9 ls Executing command tree Executing node type=9 at 0x5639b9fe5240 Executing redirection node type=9 0x5639b9fe5170 (type 2) ls with 0 args ls (nil)) Processing redirection node type=9 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 199194 Redirection setup failed (error code 1) 199194 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5639b9fe5170 [ls] ls 0 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 122: ❌ echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye 
Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
mini outfiles:
bye
hi
bash outfiles:
hi
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 10, char '.' Position advanced to 11 Processing position 11, char '/' Position advanced to 12 Processing position 12, char 'o' Position advanced to 13 Processing position 13, char 'u' Position advanced to 14 Processing position 14, char 't' Position advanced to 15 Processing position 15, char 'f' Position advanced to 16 Processing position 16, char 'i' Position advanced to 17 Processing position 17, char 'l' Position advanced to 18 Processing position 18, char 'e' Position advanced to 19 Processing position 19, char 's' Position advanced to 20 Processing position 20, char '/' Position advanced to 21 Processing position 21, char 'o' Position advanced to 22 Processing position 22, char 'u' Position advanced to 23 Processing position 23, char 't' Position advanced to 24 Processing position 24, char 'f' Position advanced to 25 Processing position 25, char 'i' Position advanced to 26 Processing position 26, char 'l' Position advanced to 27 Processing position 27, char 'e' Position advanced to 28 Processing position 28, char '0' Position advanced to 29 Processing position 29, char '1' Position advanced to 30 Processing position 30, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 31, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' Position check triggered continue Processing position 33, char '.' Position advanced to 34 Processing position 34, char '/' Position advanced to 35 Processing position 35, char 'o' Position advanced to 36 Processing position 36, char 'u' Position advanced to 37 Processing position 37, char 't' Position advanced to 38 Processing position 38, char 'f' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'l' Position advanced to 41 Processing position 41, char 'e' Position advanced to 42 Processing position 42, char 's' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'o' Position advanced to 45 Processing position 45, char 'u' Position advanced to 46 Processing position 46, char 't' Position advanced to 47 Processing position 47, char 'f' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'l' Position advanced to 50 Processing position 50, char 'e' Position advanced to 51 Processing position 51, char '0' Position advanced to 52 Processing position 52, char '2' Position advanced to 53 Processing position 53, char ' ' Creating token from './outfiles/outfile02' Token type set to 3 Creating token type=3 content='./outfiles/outfile02' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' Position check triggered continue Processing position 54, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' Position check triggered continue Processing position 55, char ' ' Position check triggered continue Processing position 56, char 'e' Position advanced to 57 Processing position 57, char 'c' Position advanced to 58 Processing position 58, char 'h' Position advanced to 59 Processing position 59, char 'o' Position advanced to 60 Processing position 60, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 61, char 'b' Position advanced to 62 Processing position 62, char 'y' Position advanced to 63 Processing position 63, char 'e' Position advanced to 64 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=9 content=[>>] type=3 content=[./outfiles/outfile01] type=9 content=[>>] type=3 content=[./outfiles/outfile02] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x558c46ddf160, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x558c46ddf230 to cmd 0x558c46ddf160 and target 0x558c46ddf3c0 Starting collection after redirection Setting redirection root to node 0x558c46ddf230 Redirection node type=9, target cmd=0x558c46ddf160, cmd type=2 echo ./outfiles/outfile02 Linking redir 0x558c46ddf470 to cmd 0x558c46ddf160 and target 0x558c46ddf520 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=9 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x558c46ddf160 with redirection 0x558c46ddf230 (type 9) Associated command 0x558c46ddf700 with redirection 0x558c46ddf470 (type 9) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=9 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x558c46ddf630 Starting pipe execution for node 0x558c46ddf630 echo Forking left child Forking right child 199287) Processing redirections for left command echo 0x558c46ddf630) Processing redirection node type=9 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=9 './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile02' Successfully opened './outfiles/outfile02' with fd 4 Successfully redirected stdout to file './outfiles/outfile02' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x558c46ddf470 targeting 0x558c46ddf160 No more redirections found for cmd 0x558c46ddf160 No more redirections found for this command Finished processing redirection chain successfully Left pipe process (PID 199287) executing command Executing node type=2 at 0x558c46ddf160 [echo] [hi] echo 0 0 199288) echo Processing redirections for right command echo 0x558c46ddf630) Processing redirection node type=9 './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile02' Successfully opened './outfiles/outfile02' with fd 3 Successfully redirected stdout to file './outfiles/outfile02' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x558c46ddf470 targeting 0x558c46ddf700 No more redirections found for cmd 0x558c46ddf700 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 199288) executing command Executing node type=2 at 0x558c46ddf700 [echo] [bye] echo 0 0 0) Left command exited with code 0 199288) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ()

Test 127: ❌ echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 10, char '.' Position advanced to 11 Processing position 11, char '/' Position advanced to 12 Processing position 12, char 't' Position advanced to 13 Processing position 13, char 'e' Position advanced to 14 Processing position 14, char 's' Position advanced to 15 Processing position 15, char 't' Position advanced to 16 Processing position 16, char '_' Position advanced to 17 Processing position 17, char 'f' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'l' Position advanced to 20 Processing position 20, char 'e' Position advanced to 21 Processing position 21, char 's' Position advanced to 22 Processing position 22, char '/' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'n' Position advanced to 25 Processing position 25, char 'v' Position advanced to 26 Processing position 26, char 'a' Position advanced to 27 Processing position 27, char 'l' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'd' Position advanced to 30 Processing position 30, char '_' Position advanced to 31 Processing position 31, char 'p' Position advanced to 32 Processing position 32, char 'e' Position advanced to 33 Processing position 33, char 'r' Position advanced to 34 Processing position 34, char 'm' Position advanced to 35 Processing position 35, char 'i' Position advanced to 36 Processing position 36, char 's' Position advanced to 37 Processing position 37, char 's' Position advanced to 38 Processing position 38, char 'i' Position advanced to 39 Processing position 39, char 'o' Position advanced to 40 Processing position 40, char 'n' Position advanced to 41 Processing position 41, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 42, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 43, char '.' Position advanced to 44 Processing position 44, char '/' Position advanced to 45 Processing position 45, char 'o' Position advanced to 46 Processing position 46, char 'u' Position advanced to 47 Processing position 47, char 't' Position advanced to 48 Processing position 48, char 'f' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'l' Position advanced to 51 Processing position 51, char 'e' Position advanced to 52 Processing position 52, char 's' Position advanced to 53 Processing position 53, char '/' Position advanced to 54 Processing position 54, char 'o' Position advanced to 55 Processing position 55, char 'u' Position advanced to 56 Processing position 56, char 't' Position advanced to 57 Processing position 57, char 'f' Position advanced to 58 Processing position 58, char 'i' Position advanced to 59 Processing position 59, char 'l' Position advanced to 60 Processing position 60, char 'e' Position advanced to 61 Processing position 61, char '0' Position advanced to 62 Processing position 62, char '1' Position advanced to 63 Processing position 63, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 64, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' Position check triggered continue Processing position 65, char ' ' Position check triggered continue Processing position 66, char 'e' Position advanced to 67 Processing position 67, char 'c' Position advanced to 68 Processing position 68, char 'h' Position advanced to 69 Processing position 69, char 'o' Position advanced to 70 Processing position 70, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 71, char 'b' Position advanced to 72 Processing position 72, char 'y' Position advanced to 73 Processing position 73, char 'e' Position advanced to 74 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x5930538d2c40, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5930538d2d30 to cmd 0x5930538d2c40 and target 0x5930538d2ec0 Starting collection after redirection Setting redirection root to node 0x5930538d2d30 Redirection node type=8, target cmd=0x5930538d2c40, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5930538d2f10 to cmd 0x5930538d2c40 and target 0x5930538d2fa0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x5930538d2c40 with redirection 0x5930538d2d30 (type 9) Associated command 0x5930538d3180 with redirection 0x5930538d2f10 (type 8) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5930538d30b0 Starting pipe execution for node 0x5930538d30b0 echo Forking left child Forking right child 199519) Processing redirections for left command echo 0x5930538d30b0) Processing redirection node type=9 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 199517 Redirection setup failed (error code 1) 199517 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 199519) executing command Executing node type=2 at 0x5930538d2c40 [echo] [hi] echo 0 0 0) Left command exited with code 0 199520) 199520) echo Processing redirections for right command echo 0x5930538d30b0) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x5930538d2f10 targeting 0x5930538d3180 No more redirections found for cmd 0x5930538d3180 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 199520) executing command Executing node type=2 at 0x5930538d3180 [echo] [bye] echo 0 0 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 128: ❌ echo hi | echo bye >>./test_files/invalid_permission 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >>./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char 'b' Position advanced to 16 Processing position 16, char 'y' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 19, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 21, char '.' Position advanced to 22 Processing position 22, char '/' Position advanced to 23 Processing position 23, char 't' Position advanced to 24 Processing position 24, char 'e' Position advanced to 25 Processing position 25, char 's' Position advanced to 26 Processing position 26, char 't' Position advanced to 27 Processing position 27, char '_' Position advanced to 28 Processing position 28, char 'f' Position advanced to 29 Processing position 29, char 'i' Position advanced to 30 Processing position 30, char 'l' Position advanced to 31 Processing position 31, char 'e' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char '/' Position advanced to 34 Processing position 34, char 'i' Position advanced to 35 Processing position 35, char 'n' Position advanced to 36 Processing position 36, char 'v' Position advanced to 37 Processing position 37, char 'a' Position advanced to 38 Processing position 38, char 'l' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'd' Position advanced to 41 Processing position 41, char '_' Position advanced to 42 Processing position 42, char 'p' Position advanced to 43 Processing position 43, char 'e' Position advanced to 44 Processing position 44, char 'r' Position advanced to 45 Processing position 45, char 'm' Position advanced to 46 Processing position 46, char 'i' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 's' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'o' Position advanced to 51 Processing position 51, char 'n' Position advanced to 52 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo, bye] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x5aa326da51c0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5aa326da5210 to cmd 0x5aa326da51c0 and target 0x5aa326da53a0 Starting collection after redirection Setting redirection root to node 0x5aa326da5210 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 [echo] [bye] Command argument verification complete Associated command 0x5aa326da51c0 with redirection 0x5aa326da5210 (type 9) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5aa326da5030 Starting pipe execution for node 0x5aa326da5030 echo Forking left child Forking right child 199567) 199568) echo Processing redirections for right command echo 0x5aa326da5030) Processing redirection node type=9 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 199565 Redirection setup failed (error code 1) 199565 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 199568) executing command Executing node type=2 at 0x5aa326da51c0 [echo] [bye] echo 0 0 Left pipe process (PID 199567) executing command Executing node type=2 at 0x5aa326da4f60 [echo] [hi] echo 0 0 0) Left command exited with code 0 199568) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 129: ❌ echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission 
Files ./mini_outfiles/outfile01 and ./bash_outfiles/outfile01 differ
mini outfiles:
bye
bash outfiles:
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 17, char '.' Position advanced to 18 Processing position 18, char '/' Position advanced to 19 Processing position 19, char 'o' Position advanced to 20 Processing position 20, char 'u' Position advanced to 21 Processing position 21, char 't' Position advanced to 22 Processing position 22, char 'f' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'l' Position advanced to 25 Processing position 25, char 'e' Position advanced to 26 Processing position 26, char 's' Position advanced to 27 Processing position 27, char '/' Position advanced to 28 Processing position 28, char 'o' Position advanced to 29 Processing position 29, char 'u' Position advanced to 30 Processing position 30, char 't' Position advanced to 31 Processing position 31, char 'f' Position advanced to 32 Processing position 32, char 'i' Position advanced to 33 Processing position 33, char 'l' Position advanced to 34 Processing position 34, char 'e' Position advanced to 35 Processing position 35, char '0' Position advanced to 36 Processing position 36, char '1' Position advanced to 37 Processing position 37, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 38, char 'b' Position advanced to 39 Processing position 39, char 'y' Position advanced to 40 Processing position 40, char 'e' Position advanced to 41 Processing position 41, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=3 content='bye' Position check triggered continue Processing position 42, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=3 content='bye' type=8 content='>' Position check triggered continue Processing position 43, char '.' Position advanced to 44 Processing position 44, char '/' Position advanced to 45 Processing position 45, char 't' Position advanced to 46 Processing position 46, char 'e' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 't' Position advanced to 49 Processing position 49, char '_' Position advanced to 50 Processing position 50, char 'f' Position advanced to 51 Processing position 51, char 'i' Position advanced to 52 Processing position 52, char 'l' Position advanced to 53 Processing position 53, char 'e' Position advanced to 54 Processing position 54, char 's' Position advanced to 55 Processing position 55, char '/' Position advanced to 56 Processing position 56, char 'i' Position advanced to 57 Processing position 57, char 'n' Position advanced to 58 Processing position 58, char 'v' Position advanced to 59 Processing position 59, char 'a' Position advanced to 60 Processing position 60, char 'l' Position advanced to 61 Processing position 61, char 'i' Position advanced to 62 Processing position 62, char 'd' Position advanced to 63 Processing position 63, char '_' Position advanced to 64 Processing position 64, char 'p' Position advanced to 65 Processing position 65, char 'e' Position advanced to 66 Processing position 66, char 'r' Position advanced to 67 Processing position 67, char 'm' Position advanced to 68 Processing position 68, char 'i' Position advanced to 69 Processing position 69, char 's' Position advanced to 70 Processing position 70, char 's' Position advanced to 71 Processing position 71, char 'i' Position advanced to 72 Processing position 72, char 'o' Position advanced to 73 Processing position 73, char 'n' Position advanced to 74 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=3 content='bye' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo] type=9 content=[>>] type=3 content=[./outfiles/outfile01] type=3 content=[bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x6304e67a80a0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x6304e67a8110 to cmd 0x6304e67a80a0 and target 0x6304e67a81e0 Starting collection after redirection Found argument 'bye' after redirection Setting redirection root to node 0x6304e67a8110 Redirection node type=8, target cmd=0x6304e67a80a0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x6304e67a83c0 to cmd 0x6304e67a80a0 and target 0x6304e67a8470 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 Found potential argument 'bye' Skipping duplicate argument 'bye' Skipping redirection node type=8 [echo] [bye] Command argument verification complete Associated command 0x6304e67a80a0 with redirection 0x6304e67a8110 (type 9) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 Found potential argument 'bye' Skipping duplicate argument 'bye' Skipping redirection node type=8 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x6304e67a7f10 Starting pipe execution for node 0x6304e67a7f10 echo Forking left child Forking right child 199613) Left pipe process (PID 199613) executing command Executing node type=2 at 0x6304e67a7e60 [echo] [hi] echo 0 0 199614) echo Processing redirections for right command echo 0x6304e67a7f10) Processing redirection node type=9 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 199611 Redirection setup failed (error code 1) 199611 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 199614) executing command Executing node type=2 at 0x6304e67a80a0 [echo] [bye] echo 0 0 0) Left command exited with code 0 199614) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 130: ❌ cat <minishell.h>./outfiles/outfile 
mini exit code =
bash exit code = 1
mini error = ( 'cat <minishell.h>./outfiles/outfile' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 'n' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 's' Position advanced to 10 Processing position 10, char 'h' Position advanced to 11 Processing position 11, char 'e' Position advanced to 12 Processing position 12, char 'l' Position advanced to 13 Processing position 13, char 'l' Position advanced to 14 Processing position 14, char '.' Position advanced to 15 Processing position 15, char 'h' Position advanced to 16 Processing position 16, char '>' Creating token from 'minishell.h' Token type set to 3 Creating token type=3 content='minishell.h' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='minishell.h' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='minishell.h' type=8 content='>' Position check triggered continue Processing position 17, char '.' Position advanced to 18 Processing position 18, char '/' Position advanced to 19 Processing position 19, char 'o' Position advanced to 20 Processing position 20, char 'u' Position advanced to 21 Processing position 21, char 't' Position advanced to 22 Processing position 22, char 'f' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'l' Position advanced to 25 Processing position 25, char 'e' Position advanced to 26 Processing position 26, char 's' Position advanced to 27 Processing position 27, char '/' Position advanced to 28 Processing position 28, char 'o' Position advanced to 29 Processing position 29, char 'u' Position advanced to 30 Processing position 30, char 't' Position advanced to 31 Processing position 31, char 'f' Position advanced to 32 Processing position 32, char 'i' Position advanced to 33 Processing position 33, char 'l' Position advanced to 34 Processing position 34, char 'e' Position advanced to 35 Tokenization complete, finishing Creating token from './outfiles/outfile' Token type set to 3 Creating token type=3 content='./outfiles/outfile' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='minishell.h' type=8 content='>' type=3 content='./outfiles/outfile' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[minishell.h] type=8 content=[>] type=3 content=[./outfiles/outfile] Building AST from token list Found 1 command nodes cat Processing pipes No pipes found in command Processing redirections Redirection node type=7, target cmd=0x5d2c6b1969d0, cmd type=2 cat minishell.h Linking redir 0x5d2c6b1b2660 to cmd 0x5d2c6b1969d0 and target 0x5d2c6b1b2730 Starting collection after redirection Setting redirection root to node 0x5d2c6b1b2660 Redirection node type=8, target cmd=0x5d2c6b1969d0, cmd type=2 cat ./outfiles/outfile Linking redir 0x5d2c6b1b2820 to cmd 0x5d2c6b1969d0 and target 0x5d2c6b1b28f0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 Skipping redirection node type=8 [cat] Command argument verification complete Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 Skipping redirection node type=8 [cat] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=7 cat Executing command tree Executing node type=7 at 0x5d2c6b1b2660 Executing redirection node type=7 0x5d2c6b1969d0 (type 2) cat with 0 args cat (nil)) Processing redirection node type=7 'minishell.h' Setting up input redirection from file 'minishell.h' No such file or directory) No such file or directory Input redirection error in PID 199657 for file 'minishell.h'. Continuing. Redirection setup failed (error code 1) 199655 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Executing command after redirection setup Executing node type=2 at 0x5d2c6b1969d0 [cat] cat 0 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test 131: ❌ cat <minishell.h|ls 
mini exit code = wildcards
bash exit code = 0
mini error = ( 'cat <minishell.h|ls' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 'n' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 's' Position advanced to 10 Processing position 10, char 'h' Position advanced to 11 Processing position 11, char 'e' Position advanced to 12 Processing position 12, char 'l' Position advanced to 13 Processing position 13, char 'l' Position advanced to 14 Processing position 14, char '.' Position advanced to 15 Processing position 15, char 'h' Position advanced to 16 Processing position 16, char '|' Creating token from 'minishell.h' Token type set to 3 Creating token type=3 content='minishell.h' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='minishell.h' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='minishell.h' type=11 content='|' Position check triggered continue Processing position 17, char 'l' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Tokenization complete, finishing Creating token from 'ls' Token type set to 2 Creating token type=3 content='ls' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='minishell.h' type=11 content='|' type=2 content='ls' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[minishell.h] type=11 content=[|] type=2 content=[ls] Building AST from token list Found 2 command nodes cat ls Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=7, target cmd=0x5cd425726ba0, cmd type=2 cat minishell.h Linking redir 0x5cd425742830 to cmd 0x5cd425726ba0 and target 0x5cd425742900 Starting collection after redirection Setting redirection root to node 0x5cd425742830 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command ls [ls] [ls] Command argument verification complete Associated command 0x5cd425726ba0 with redirection 0x5cd425742830 (type 7) Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command ls [ls] [ls] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 ls Executing command tree Executing node type=11 at 0x5cd4257429f0 Starting pipe execution for node 0x5cd4257429f0 ls Forking left child Forking right child 199706) Processing redirections for left command cat 0x5cd4257429f0) Processing redirection node type=7 'minishell.h' Setting up input redirection from file 'minishell.h' No such file or directory) No such file or directory Input redirection error in PID 199706 for file 'minishell.h'. Continuing. Redirection setup failed (error code 1) 199704 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 199706) executing command Executing node type=2 at 0x5cd425726ba0 [cat] cat 199707) ls Right pipe process (PID 199707) executing command Executing node type=2 at 0x5cd425742ac0 [ls] ls 0 0 0 0 0) Left command exited with code 0 199707) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)
———————————— extras

Test 133: ❌ $PWD 
mini exit code = 2
bash exit code = 126
mini error = ( '$PWD' Processing position 0, char '$' 'PWD' 'PWD' '/home/bleow/Coding/Core/minishell/minishell_tester' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 4, current_start 0 Set vars->start to 4 (current vars->pos) Loop ended. Current char '0' at pos 4. Text to process is from index 4 to 4. Calling handle_right_adj (from tokenize_utils.c) Processing text from 4 to 4 No text to process (pos 4 <= start 4) Exiting process_right_adj, new start for next token is 4 Position check triggered continue Tokenization complete, finishing Building and executing command Building AST from token list type=2 content=[/home/bleow/Coding/Core/minishell/minishell_tester] Building AST from token list Found 1 command nodes /home/bleow/Coding/Core/minishell/minishell_tester Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command /home/bleow/Coding/Core/minishell/minishell_tester [/home/bleow/Coding/Core/minishell/minishell_tester] [/home/bleow/Coding/Core/minishell/minishell_tester] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command /home/bleow/Coding/Core/minishell/minishell_tester [/home/bleow/Coding/Core/minishell/minishell_tester] [/home/bleow/Coding/Core/minishell/minishell_tester] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x643d0a35f510 [/home/bleow/Coding/Core/minishell/minishell_tester] /home/bleow/Coding/Core/minishell/minishell_tester Is a directory 2 2 Command execution completed with error code 2)
bash error = ( Is a directory)

Test 134: ❌ $EMPTY 
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY' Processing position 0, char '$' 'EMPTY' 'EMPTY' '' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 6, current_start 0 Set vars->start to 6 (current vars->pos) Loop ended. Current char '0' at pos 6. Text to process is from index 6 to 6. Calling handle_right_adj (from tokenize_utils.c) Processing text from 6 to 6 No text to process (pos 6 <= start 6) Exiting process_right_adj, new start for next token is 6 Position check triggered continue Tokenization complete, finishing Building and executing command Building AST from token list type=2 content=[] Building AST from token list Found 1 command nodes Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command [] [] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command [] [] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x61a1c65634d0 [] Permission denied 127 127 Command execution completed with error code 127)
bash error = ()

Test 135: ❌ $EMPTY echo hi 
mini output = ()
bash output = (hi)
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY echo hi' Processing position 0, char '$' 'EMPTY' 'EMPTY' '' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 6, current_start 0 Set vars->start to 6 (current vars->pos) Loop ended. Current char ' ' at pos 6. Text to process is from index 6 to 6. Calling handle_right_adj (from tokenize_utils.c) Processing text from 6 to 6 No text to process (pos 6 <= start 6) Exiting process_right_adj, new start for next token is 6 Position check triggered continue Processing position 6, char ' ' Position check triggered continue Processing position 7, char 'e' Position advanced to 8 Processing position 8, char 'c' Position advanced to 9 Processing position 9, char 'h' Position advanced to 10 Processing position 10, char 'o' Position advanced to 11 Processing position 11, char ' ' Creating token from 'echo' Token type set to 3 Creating token type=3 content='echo' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'echo' with command '' No next node, setting current to cmd 1 Traversing final token list type=2 content='' Position check triggered continue Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Tokenization complete, finishing Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command '' No next node, setting current to cmd 1 Traversing final token list type=2 content='' Building and executing command Building AST from token list type=2 content=[, echo, hi] Building AST from token list Found 1 command nodes Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command [] [echo] [hi] [] [echo] [hi] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command [] [echo] [hi] [] [echo] [hi] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x56de3b751c10 [] [echo] [hi] Permission denied 127 127 Command execution completed with error code 127)
bash error = ()

Test 136: ❌ ./test_files/invalid_permission 
mini exit code = 127
bash exit code = 126
mini error = ( './test_files/invalid_permission' Processing position 0, char '.' Position advanced to 1 Processing position 1, char '/' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char 'e' Position advanced to 4 Processing position 4, char 's' Position advanced to 5 Processing position 5, char 't' Position advanced to 6 Processing position 6, char '_' Position advanced to 7 Processing position 7, char 'f' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 'l' Position advanced to 10 Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 's' Position advanced to 12 Processing position 12, char '/' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Processing position 14, char 'n' Position advanced to 15 Processing position 15, char 'v' Position advanced to 16 Processing position 16, char 'a' Position advanced to 17 Processing position 17, char 'l' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'd' Position advanced to 20 Processing position 20, char '_' Position advanced to 21 Processing position 21, char 'p' Position advanced to 22 Processing position 22, char 'e' Position advanced to 23 Processing position 23, char 'r' Position advanced to 24 Processing position 24, char 'm' Position advanced to 25 Processing position 25, char 'i' Position advanced to 26 Processing position 26, char 's' Position advanced to 27 Processing position 27, char 's' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'o' Position advanced to 30 Processing position 30, char 'n' Position advanced to 31 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 2 Creating token type=2 content='./test_files/invalid_permission' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes ./test_files/invalid_permission Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files/invalid_permission [./test_files/invalid_permission] [./test_files/invalid_permission] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files/invalid_permission [./test_files/invalid_permission] [./test_files/invalid_permission] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x5c42f6618640 [./test_files/invalid_permission] ./test_files/invalid_permission Permission denied 127 127 Command execution completed with error code 127)
bash error = ( Permission denied)

Test 141: ❌ ./test_files 
mini exit code = 2
bash exit code = 126
mini error = ( './test_files' Processing position 0, char '.' Position advanced to 1 Processing position 1, char '/' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char 'e' Position advanced to 4 Processing position 4, char 's' Position advanced to 5 Processing position 5, char 't' Position advanced to 6 Processing position 6, char '_' Position advanced to 7 Processing position 7, char 'f' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 'l' Position advanced to 10 Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 's' Position advanced to 12 Tokenization complete, finishing Creating token from './test_files' Token type set to 2 Creating token type=2 content='./test_files' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='./test_files' Building and executing command Building AST from token list type=2 content=[./test_files] Building AST from token list Found 1 command nodes ./test_files Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files [./test_files] [./test_files] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files [./test_files] [./test_files] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x5b33d886eff0 [./test_files] ./test_files Is a directory 2 2 Command execution completed with error code 2)
bash error = ( Is a directory)

105/146

