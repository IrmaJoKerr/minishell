Test  77: ❌ cat <missing | cat 
mini exit code =
bash exit code = 0
mini error = ( 'cat <missing | cat' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 's' Position advanced to 8 Processing position 8, char 's' Position advanced to 9 Processing position 9, char 'i' Position advanced to 10 Processing position 10, char 'n' Position advanced to 11 Processing position 11, char 'g' Position advanced to 12 Processing position 12, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 13, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' Position check triggered continue Processing position 14, char ' ' Position check triggered continue Processing position 15, char 'c' Position advanced to 16 Processing position 16, char 'a' Position advanced to 17 Processing position 17, char 't' Position advanced to 18 Tokenization complete, finishing Creating token from 'cat' Token type set to 2 Creating token type=3 content='cat' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='cat' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[missing] type=11 content=[|] type=2 content=[cat] Building AST from token list Found 2 command nodes cat cat Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=7, target cmd=0x5d68ec777ff0, cmd type=2 cat missing Linking redir 0x5d68ec7b5c90 to cmd 0x5d68ec777ff0 and target 0x5d68ec7b5d40 Starting collection after redirection Setting redirection root to node 0x5d68ec7b5c90 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command cat [cat] [cat] Command argument verification complete Associated command 0x5d68ec777ff0 with redirection 0x5d68ec7b5c90 (type 7) Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command cat [cat] [cat] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 cat Executing command tree Executing node type=11 at 0x5d68ec7b5df0 Starting pipe execution for node 0x5d68ec7b5df0 cat Forking left child Forking right child 208937) Processing redirections for left command cat 0x5d68ec7b5df0) Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 208937 for file 'missing'. Continuing. Redirection setup failed (error code 1) 208935 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 208937) executing command Executing node type=2 at 0x5d68ec777ff0 [cat] cat 208938) cat Right pipe process (PID 208938) executing command Executing node type=2 at 0x5d68ec7b5ec0 [cat] cat 0 0 0) Left command exited with code 0 208938) 0 0 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test  78: ❌ cat <missing | echo oi 
mini exit code = oi
bash exit code = 0
mini error = ( 'cat <missing | echo oi' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 's' Position advanced to 8 Processing position 8, char 's' Position advanced to 9 Processing position 9, char 'i' Position advanced to 10 Processing position 10, char 'n' Position advanced to 11 Processing position 11, char 'g' Position advanced to 12 Processing position 12, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 13, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' Position check triggered continue Processing position 14, char ' ' Position check triggered continue Processing position 15, char 'e' Position advanced to 16 Processing position 16, char 'c' Position advanced to 17 Processing position 17, char 'h' Position advanced to 18 Processing position 18, char 'o' Position advanced to 19 Processing position 19, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 20, char 'o' Position advanced to 21 Processing position 21, char 'i' Position advanced to 22 Tokenization complete, finishing Creating token from 'oi' Token type set to 3 Creating token type=3 content='oi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'oi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[missing] type=11 content=[|] type=2 content=[echo, oi] Building AST from token list Found 2 command nodes cat echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=7, target cmd=0x56d9ca500430, cmd type=2 cat missing Linking redir 0x56d9ca522640 to cmd 0x56d9ca500430 and target 0x56d9ca53e2c0 Starting collection after redirection Setting redirection root to node 0x56d9ca522640 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command echo [echo] [oi] [echo] [oi] Command argument verification complete Associated command 0x56d9ca500430 with redirection 0x56d9ca522640 (type 7) Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command echo [echo] [oi] [echo] [oi] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x56d9ca53e370 Starting pipe execution for node 0x56d9ca53e370 echo Forking left child Forking right child 208987) Processing redirections for left command 208988) echo Right pipe process (PID 208988) executing command Executing node type=2 at 0x56d9ca53e440 [echo] [oi] echo cat 0x56d9ca53e370) Processing redirection node type=7 0 'missing' 0 Setting up input redirection from file 'missing' No such file or directory) No such file or directory Input redirection error in PID 208987 for file 'missing'. Continuing. Redirection setup failed (error code 1) 208985 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 208987) executing command Executing node type=2 at 0x56d9ca500430 [cat] cat 0 0 0) Left command exited with code 0 208988) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test  79: ❌ cat <missing | cat <"./test_files/infile" 
mini exit code = 42
bash exit code = 0
mini error = ( 'cat <missing | cat <"./test_files/infile"' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 's' Position advanced to 8 Processing position 8, char 's' Position advanced to 9 Processing position 9, char 'i' Position advanced to 10 Processing position 10, char 'n' Position advanced to 11 Processing position 11, char 'g' Position advanced to 12 Processing position 12, char ' ' Creating token from 'missing' Token type set to 3 Creating token type=3 content='missing' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' Position check triggered continue Processing position 13, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' Position check triggered continue Processing position 14, char ' ' Position check triggered continue Processing position 15, char 'c' Position advanced to 16 Processing position 16, char 'a' Position advanced to 17 Processing position 17, char 't' Position advanced to 18 Processing position 18, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=3 content='cat' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='cat' Position check triggered continue Processing position 19, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 20, char '"' Processing at pos 20 with adjacency={0,1} Processing quoted string starting at position 20 with " './test_files/infile' NONE Restored adjacency to {0,1} for content './test_files/infile' 5) Handling as redirection target Handling quoted text './test_files/infile' as potential redirection target Found redirection node type=7 Creating file node for redirection target Linked file './test_files/infile' to redirection node Position check triggered continue Tokenization complete, finishing Creating token from '"./test_files/infile"' Token type set to 5 Creating token type=5 content='"./test_files/infile"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='missing' type=11 content='|' type=2 content='cat' type=7 content='<' type=3 content='./test_files/infile' type=5 content='"./test_files/infile"' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[missing] type=11 content=[|] type=2 content=[cat] type=7 content=[<] type=3 content=[./test_files/infile] type=5 content=["./test_files/infile"] Building AST from token list Found 2 command nodes cat cat Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=7, target cmd=0x5f463c424ee0, cmd type=2 cat missing Linking redir 0x5f463c440b70 to cmd 0x5f463c424ee0 and target 0x5f463c440c40 Starting collection after redirection Setting redirection root to node 0x5f463c440b70 Redirection node type=7, target cmd=0x5f463c440dc0, cmd type=2 cat ./test_files/infile Linking redir 0x5f463c440e90 to cmd 0x5f463c440dc0 and target 0x5f463c440f40 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command cat [cat] Skipping redirection node type=7 [cat] Command argument verification complete Associated command 0x5f463c424ee0 with redirection 0x5f463c440b70 (type 7) Associated command 0x5f463c440dc0 with redirection 0x5f463c440e90 (type 7) Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command cat [cat] Skipping redirection node type=7 [cat] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 cat Executing command tree Executing node type=11 at 0x5f463c440cf0 Starting pipe execution for node 0x5f463c440cf0 cat Forking left child Forking right child 209038) Processing redirections for left command cat 0x5f463c440cf0) Processing redirection node type=7 'missing' Setting up input redirection from file 'missing' No such file or directory) 209039) cat Processing redirections for right command ectory cat 0x5f463c440cf0) Input redirection error in PID 209038 for file 'missing'. Continuing. Processing redirection node type=7 Redirection setup failed (error code 1) 209036 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 209038) executing command './test_files/infile' Executing node type=2 at 0x5f463c424ee0 [cat] cat Setting up input redirection from file './test_files/infile' Successfully opened './test_files/infile' with fd 3 Successfully redirected stdin to file './test_files/infile' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x5f463c440e90 targeting 0x5f463c440dc0 No more redirections found for cmd 0x5f463c440dc0 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 209039) executing command Executing node type=2 at 0x5f463c440dc0 [cat] cat 0 0 0 0 0) Left command exited with code 0 209039) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)

Test  87: ❌ ls >"./outfiles/outfile""1""2""3""4""5" 
Only in ./mini_outfiles: outfile
Only in ./bash_outfiles: outfile12345
mini outfiles:
2
bash outfiles:
2
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini exit code = 2
bash exit code = 0
mini error = ( 'ls >"./outfiles/outfile""1""2""3""4""5"' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' Position check triggered continue Processing position 4, char '"' Processing at pos 4 with adjacency={0,1} Processing quoted string starting at position 4 with " './outfiles/outfile' " Restored adjacency to {0,1} for content './outfiles/outfile' 5) Handling as redirection target Handling quoted text './outfiles/outfile' as potential redirection target Found redirection node type=8 Creating file node for redirection target Linked file './outfiles/outfile' to redirection node Position check triggered continue Processing position 24, char '"' Creating token from '"./outfiles/outfile"' Token type set to 5 Creating token type=5 content='"./outfiles/outfile"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' Processing at pos 24 with adjacency={1,1} Processing quoted string starting at position 24 with " '1' " Restored adjacency to {1,1} for content '1' 5) Handling as redirection target Handling quoted text '1' as potential redirection target Found redirection node type=8 Redirection already has target './outfiles/outfile', treating '1' as command argument Found command node 'ls' to attach argument Position check triggered continue Processing position 27, char '"' Creating token from '"1"' Token type set to 5 Creating token type=5 content='"1"' Linking token type=5 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' type=5 content='"1"' Processing at pos 27 with adjacency={1,1} Processing quoted string starting at position 27 with " '2' " Restored adjacency to {1,1} for content '2' 5) Handling as redirection target Handling quoted text '2' as potential redirection target Found redirection node type=8 Redirection already has target './outfiles/outfile', treating '2' as command argument Found command node 'ls' to attach argument Position check triggered continue Processing position 30, char '"' Creating token from '"2"' Token type set to 5 Creating token type=5 content='"2"' Linking token type=5 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' type=5 content='"1"' type=5 content='"2"' Processing at pos 30 with adjacency={1,1} Processing quoted string starting at position 30 with " '3' " Restored adjacency to {1,1} for content '3' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '3' '"2"' Joining '3' with last argument ('"2"') of current token ('"2"') '"2"3' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '3' 4 0x56ff9965e300 0x56ff9965e300 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 33, current_start 30 Set vars->start to 33 (current vars->pos) Loop ended. Current char '"' at pos 33. Text to process is from index 33 to 33. Calling handle_right_adj (from tokenize_utils.c) Processing text from 33 to 33 No text to process (pos 33 <= start 33) Exiting process_right_adj, new start for next token is 33 Token join SUCCEEDED. V' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Processing position 33, char '"' Processing at pos 33 with adjacency={1,1} Processing quoted string starting at position 33 with " '4' " Restored adjacency to {1,1} for content '4' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '4' '"2"3' Joining '4' with last argument ('"2"3') of current token ('"2"3') '"2"34' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '4' 5 0x56ff9965e2a0 0x56ff9965e2a0 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 36, current_start 33 Set vars->start to 36 (current vars->pos) Loop ended. Current char '"' at pos 36. Text to process is from index 36 to 36. Calling handle_right_adj (from tokenize_utils.c) Processing text from 36 to 36 No text to process (pos 36 <= start 36) Exiting process_right_adj, new start for next token is 36 Token join SUCCEEDED. V' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Processing position 36, char '"' Processing at pos 36 with adjacency={1,1} Processing quoted string starting at position 36 with " '5' NONE Restored adjacency to {1,1} for content '5' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '5' '"2"34' Joining '5' with last argument ('"2"34') of current token ('"2"34') '"2"345' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '5' 6 0x56ff9965e4f0 0x56ff9965e4f0 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 39, current_start 36 Set vars->start to 39 (current vars->pos) Loop ended. Current char '0' at pos 39. Text to process is from index 39 to 39. Calling handle_right_adj (from tokenize_utils.c) Processing text from 39 to 39 No text to process (pos 39 <= start 39) Exiting process_right_adj, new start for next token is 39 Token join SUCCEEDED. V' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Tokenization complete, finishing Building and executing command Building AST from token list type=2 content=[ls, 1, 2] type=8 content=[>] type=3 content=[./outfiles/outfile] type=5 content=["./outfiles/outfile"] type=5 content=["1"] type=5 content=["2"345] Building AST from token list Found 1 command nodes ls Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x56ff99642320, cmd type=2 ls ./outfiles/outfile Linking redir 0x56ff9965dfb0 to cmd 0x56ff99642320 and target 0x56ff9965e060 Starting collection after redirection Setting redirection root to node 0x56ff9965dfb0 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] [1] 2 Skipping redirection node type=8 [ls] [1] 2 Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command ls [ls] [1] 2 Skipping redirection node type=8 [ls] [1] 2 Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 ls Executing command tree Executing node type=8 at 0x56ff9965dfb0 Executing redirection node type=8 0x56ff99642320 (type 2) ls with 2 args ls (nil)) Processing redirection node type=8 './outfiles/outfile' Setting up output redirection to file './outfiles/outfile' Successfully opened './outfiles/outfile' with fd 5 Successfully redirected stdout to file './outfiles/outfile' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x56ff9965dfb0 targeting 0x56ff99642320 No more redirections found for cmd 0x56ff99642320 No more redirections found for this command Finished processing redirection chain successfully Executing command after redirection setup Executing node type=2 at 0x56ff99642320 [ls] [1] 2 ls No such file or directory 2 2 2 2 Command execution completed with error code 2)
bash error = ()

Test  92: ❌ echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye 
Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
mini outfiles:
bye
bash outfiles:
hi
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 'o' Position advanced to 12 Processing position 12, char 'u' Position advanced to 13 Processing position 13, char 't' Position advanced to 14 Processing position 14, char 'f' Position advanced to 15 Processing position 15, char 'i' Position advanced to 16 Processing position 16, char 'l' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Processing position 19, char '/' Position advanced to 20 Processing position 20, char 'o' Position advanced to 21 Processing position 21, char 'u' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'f' Position advanced to 24 Processing position 24, char 'i' Position advanced to 25 Processing position 25, char 'l' Position advanced to 26 Processing position 26, char 'e' Position advanced to 27 Processing position 27, char '0' Position advanced to 28 Processing position 28, char '1' Position advanced to 29 Processing position 29, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 30, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' Position check triggered continue Processing position 31, char '.' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 'o' Position advanced to 34 Processing position 34, char 'u' Position advanced to 35 Processing position 35, char 't' Position advanced to 36 Processing position 36, char 'f' Position advanced to 37 Processing position 37, char 'i' Position advanced to 38 Processing position 38, char 'l' Position advanced to 39 Processing position 39, char 'e' Position advanced to 40 Processing position 40, char 's' Position advanced to 41 Processing position 41, char '/' Position advanced to 42 Processing position 42, char 'o' Position advanced to 43 Processing position 43, char 'u' Position advanced to 44 Processing position 44, char 't' Position advanced to 45 Processing position 45, char 'f' Position advanced to 46 Processing position 46, char 'i' Position advanced to 47 Processing position 47, char 'l' Position advanced to 48 Processing position 48, char 'e' Position advanced to 49 Processing position 49, char '0' Position advanced to 50 Processing position 50, char '2' Position advanced to 51 Processing position 51, char ' ' Creating token from './outfiles/outfile02' Token type set to 3 Creating token type=3 content='./outfiles/outfile02' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' Position check triggered continue Processing position 52, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' Position check triggered continue Processing position 53, char ' ' Position check triggered continue Processing position 54, char 'e' Position advanced to 55 Processing position 55, char 'c' Position advanced to 56 Processing position 56, char 'h' Position advanced to 57 Processing position 57, char 'o' Position advanced to 58 Processing position 58, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 59, char 'b' Position advanced to 60 Processing position 60, char 'y' Position advanced to 61 Processing position 61, char 'e' Position advanced to 62 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=8 content=[>] type=3 content=[./outfiles/outfile02] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x5cdfb9de1dc0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5cdfb9de1e90 to cmd 0x5cdfb9de1dc0 and target 0x5cdfb9de2020 Starting collection after redirection Setting redirection root to node 0x5cdfb9de1e90 Redirection node type=8, target cmd=0x5cdfb9de1dc0, cmd type=2 echo ./outfiles/outfile02 Linking redir 0x5cdfb9de20d0 to cmd 0x5cdfb9de1dc0 and target 0x5cdfb9de2180 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x5cdfb9de1dc0 with redirection 0x5cdfb9de1e90 (type 8) Associated command 0x5cdfb9de2360 with redirection 0x5cdfb9de20d0 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5cdfb9de2290 Starting pipe execution for node 0x5cdfb9de2290 echo Forking left child Forking right child 209576) Processing redirections for left command echo 0x5cdfb9de2290) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile02' Successfully opened './outfiles/outfile02' with fd 4 Successfully redirected stdout to file './outfiles/outfile02' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x5cdfb9de20d0 targeting 0x5cdfb9de1dc0 No more redirections found for cmd 0x5cdfb9de1dc0 No more redirections found for this command Finished processing redirection chain successfully Left pipe process (PID 209576) executing command Executing node type=2 at 0x5cdfb9de1dc0 [echo] [hi] echo 0 0 209577) echo Processing redirections for right command echo 0x5cdfb9de2290) Processing redirection node type=8 './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile02' Successfully opened './outfiles/outfile02' with fd 3 Successfully redirected stdout to file './outfiles/outfile02' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x5cdfb9de20d0 targeting 0x5cdfb9de2360 No more redirections found for cmd 0x5cdfb9de2360 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 209577) executing command Executing node type=2 at 0x5cdfb9de2360 [echo] [bye] echo 0 0 0) Left command exited with code 0 209577) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ()

Test  96: ❌ echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye 
Files ./mini_outfiles/outfile01 and ./bash_outfiles/outfile01 differ
mini outfiles:
hi
bash outfiles:
mini error = ( 'echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 'o' Position advanced to 12 Processing position 12, char 'u' Position advanced to 13 Processing position 13, char 't' Position advanced to 14 Processing position 14, char 'f' Position advanced to 15 Processing position 15, char 'i' Position advanced to 16 Processing position 16, char 'l' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Processing position 19, char '/' Position advanced to 20 Processing position 20, char 'o' Position advanced to 21 Processing position 21, char 'u' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'f' Position advanced to 24 Processing position 24, char 'i' Position advanced to 25 Processing position 25, char 'l' Position advanced to 26 Processing position 26, char 'e' Position advanced to 27 Processing position 27, char '0' Position advanced to 28 Processing position 28, char '1' Position advanced to 29 Processing position 29, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 30, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' Position check triggered continue Processing position 31, char '.' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 't' Position advanced to 34 Processing position 34, char 'e' Position advanced to 35 Processing position 35, char 's' Position advanced to 36 Processing position 36, char 't' Position advanced to 37 Processing position 37, char '_' Position advanced to 38 Processing position 38, char 'f' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'l' Position advanced to 41 Processing position 41, char 'e' Position advanced to 42 Processing position 42, char 's' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'i' Position advanced to 45 Processing position 45, char 'n' Position advanced to 46 Processing position 46, char 'v' Position advanced to 47 Processing position 47, char 'a' Position advanced to 48 Processing position 48, char 'l' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'd' Position advanced to 51 Processing position 51, char '_' Position advanced to 52 Processing position 52, char 'p' Position advanced to 53 Processing position 53, char 'e' Position advanced to 54 Processing position 54, char 'r' Position advanced to 55 Processing position 55, char 'm' Position advanced to 56 Processing position 56, char 'i' Position advanced to 57 Processing position 57, char 's' Position advanced to 58 Processing position 58, char 's' Position advanced to 59 Processing position 59, char 'i' Position advanced to 60 Processing position 60, char 'o' Position advanced to 61 Processing position 61, char 'n' Position advanced to 62 Processing position 62, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 63, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' Position check triggered continue Processing position 64, char ' ' Position check triggered continue Processing position 65, char 'e' Position advanced to 66 Processing position 66, char 'c' Position advanced to 67 Processing position 67, char 'h' Position advanced to 68 Processing position 68, char 'o' Position advanced to 69 Processing position 69, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 70, char 'b' Position advanced to 71 Processing position 71, char 'y' Position advanced to 72 Processing position 72, char 'e' Position advanced to 73 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x61e0071a7bb0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x61e0071a7ca0 to cmd 0x61e0071a7bb0 and target 0x61e0071a7e30 Starting collection after redirection Setting redirection root to node 0x61e0071a7ca0 Redirection node type=8, target cmd=0x61e0071a7bb0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x61e0071a7ee0 to cmd 0x61e0071a7bb0 and target 0x61e0071a7f70 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x61e0071a7bb0 with redirection 0x61e0071a7ca0 (type 8) Associated command 0x61e0071a80f0 with redirection 0x61e0071a7ee0 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x61e0071a8000 Starting pipe execution for node 0x61e0071a8000 echo Forking left child Forking right child 209762) Processing redirections for left command echo 0x61e0071a8000) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' 209763) echo Processing redirections for right command echo 0x61e0071a8000) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' .P/etremsits_sfiiolne sd/einniveadl Permission check failed for './test_files/invalid_permission' 209760 Redirection setup failed (error code 1) 209760 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 209763) executing command Executing node type=2 at 0x61e0071a80f0 ss [echo]i [bye]on echo nied Permission check failed for './test_files/invalid_permission' 0 0 209760 Redirection setup failed (error code 1) 209760 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 209762) executing command Executing node type=2 at 0x61e0071a7bb0 [echo] [hi] echo 0 0 0) Left command exited with code 0 209763) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test  98: ❌ echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 't' Position advanced to 12 Processing position 12, char 'e' Position advanced to 13 Processing position 13, char 's' Position advanced to 14 Processing position 14, char 't' Position advanced to 15 Processing position 15, char '_' Position advanced to 16 Processing position 16, char 'f' Position advanced to 17 Processing position 17, char 'i' Position advanced to 18 Processing position 18, char 'l' Position advanced to 19 Processing position 19, char 'e' Position advanced to 20 Processing position 20, char 's' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 'i' Position advanced to 23 Processing position 23, char 'n' Position advanced to 24 Processing position 24, char 'v' Position advanced to 25 Processing position 25, char 'a' Position advanced to 26 Processing position 26, char 'l' Position advanced to 27 Processing position 27, char 'i' Position advanced to 28 Processing position 28, char 'd' Position advanced to 29 Processing position 29, char '_' Position advanced to 30 Processing position 30, char 'p' Position advanced to 31 Processing position 31, char 'e' Position advanced to 32 Processing position 32, char 'r' Position advanced to 33 Processing position 33, char 'm' Position advanced to 34 Processing position 34, char 'i' Position advanced to 35 Processing position 35, char 's' Position advanced to 36 Processing position 36, char 's' Position advanced to 37 Processing position 37, char 'i' Position advanced to 38 Processing position 38, char 'o' Position advanced to 39 Processing position 39, char 'n' Position advanced to 40 Processing position 40, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 41, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 42, char '.' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'o' Position advanced to 45 Processing position 45, char 'u' Position advanced to 46 Processing position 46, char 't' Position advanced to 47 Processing position 47, char 'f' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'l' Position advanced to 50 Processing position 50, char 'e' Position advanced to 51 Processing position 51, char 's' Position advanced to 52 Processing position 52, char '/' Position advanced to 53 Processing position 53, char 'o' Position advanced to 54 Processing position 54, char 'u' Position advanced to 55 Processing position 55, char 't' Position advanced to 56 Processing position 56, char 'f' Position advanced to 57 Processing position 57, char 'i' Position advanced to 58 Processing position 58, char 'l' Position advanced to 59 Processing position 59, char 'e' Position advanced to 60 Processing position 60, char '0' Position advanced to 61 Processing position 61, char '1' Position advanced to 62 Processing position 62, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 63, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' Position check triggered continue Processing position 64, char ' ' Position check triggered continue Processing position 65, char 'e' Position advanced to 66 Processing position 66, char 'c' Position advanced to 67 Processing position 67, char 'h' Position advanced to 68 Processing position 68, char 'o' Position advanced to 69 Processing position 69, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 70, char 'b' Position advanced to 71 Processing position 71, char 'y' Position advanced to 72 Processing position 72, char 'e' Position advanced to 73 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x56f44555b220, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x56f44555b310 to cmd 0x56f44555b220 and target 0x56f44555b4a0 Starting collection after redirection Setting redirection root to node 0x56f44555b310 Redirection node type=8, target cmd=0x56f44555b220, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x56f44555b4f0 to cmd 0x56f44555b220 and target 0x56f44555b580 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x56f44555b220 with redirection 0x56f44555b310 (type 8) Associated command 0x56f44555b760 with redirection 0x56f44555b4f0 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x56f44555b690 Starting pipe execution for node 0x56f44555b690 echo Forking left child Forking right child Processing redirections for left command echo 209856) 0x56f44555b690) Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 209854 Redirection setup failed (error code 1) 209854 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 209856) executing command Executing node type=2 at 0x56f44555b220 [echo] [hi] echo 0 0 209857) echo Processing redirections for right command echo 0x56f44555b690) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x56f44555b4f0 targeting 0x56f44555b760 No more redirections found for cmd 0x56f44555b760 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 209857) executing command Executing node type=2 at 0x56f44555b760 [echo] [bye] echo 0 0 0) Left command exited with code 0 209857) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test  99: ❌ echo hi | echo bye >./test_files/invalid_permission 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char 'b' Position advanced to 16 Processing position 16, char 'y' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 19, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 20, char '.' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'e' Position advanced to 24 Processing position 24, char 's' Position advanced to 25 Processing position 25, char 't' Position advanced to 26 Processing position 26, char '_' Position advanced to 27 Processing position 27, char 'f' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'l' Position advanced to 30 Processing position 30, char 'e' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'n' Position advanced to 35 Processing position 35, char 'v' Position advanced to 36 Processing position 36, char 'a' Position advanced to 37 Processing position 37, char 'l' Position advanced to 38 Processing position 38, char 'i' Position advanced to 39 Processing position 39, char 'd' Position advanced to 40 Processing position 40, char '_' Position advanced to 41 Processing position 41, char 'p' Position advanced to 42 Processing position 42, char 'e' Position advanced to 43 Processing position 43, char 'r' Position advanced to 44 Processing position 44, char 'm' Position advanced to 45 Processing position 45, char 'i' Position advanced to 46 Processing position 46, char 's' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'o' Position advanced to 50 Processing position 50, char 'n' Position advanced to 51 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo, bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x61cdd10d3940, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x61cdd10d3990 to cmd 0x61cdd10d3940 and target 0x61cdd10d3b20 Starting collection after redirection Setting redirection root to node 0x61cdd10d3990 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 [echo] [bye] Command argument verification complete Associated command 0x61cdd10d3940 with redirection 0x61cdd10d3990 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x61cdd10d37d0 Starting pipe execution for node 0x61cdd10d37d0 echo Forking left child Forking right child 209904) Left pipe process (PID 209904) executing command 209905) echo Executing node type=2 at 0x61cdd10b7f40 Processing redirections for right command echo 0x61cdd10d37d0) Processing redirection node type=8 './test_files/invalid_permission' echo Setting up output redirection to file './test_files/invalid_permission' 0 0 Permission denied Permission check failed for './test_files/invalid_permission' 209902 Redirection setup failed (error code 1) 209902 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 209905) executing command Executing node type=2 at 0x61cdd10d3940 [echo] [bye] echo 0 0 0) Left command exited with code 0 209905) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 100: ❌ echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini error = ( 'echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=11) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' Position check triggered continue Processing position 11, char '.' Position advanced to 12 Processing position 12, char '/' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char 'u' Position advanced to 15 Processing position 15, char 't' Position advanced to 16 Processing position 16, char 'f' Position advanced to 17 Processing position 17, char 'i' Position advanced to 18 Processing position 18, char 'l' Position advanced to 19 Processing position 19, char 'e' Position advanced to 20 Processing position 20, char 's' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 'o' Position advanced to 23 Processing position 23, char 'u' Position advanced to 24 Processing position 24, char 't' Position advanced to 25 Processing position 25, char 'f' Position advanced to 26 Processing position 26, char 'i' Position advanced to 27 Processing position 27, char 'l' Position advanced to 28 Processing position 28, char 'e' Position advanced to 29 Processing position 29, char '0' Position advanced to 30 Processing position 30, char '1' Position advanced to 31 Processing position 31, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 32, char 'e' Position advanced to 33 Processing position 33, char 'c' Position advanced to 34 Processing position 34, char 'h' Position advanced to 35 Processing position 35, char 'o' Position advanced to 36 Processing position 36, char ' ' Creating token from 'echo' Token type set to 3 Creating token type=3 content='echo' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' Position check triggered continue Processing position 37, char 'b' Position advanced to 38 Processing position 38, char 'y' Position advanced to 39 Processing position 39, char 'e' Position advanced to 40 Processing position 40, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' Position check triggered continue Processing position 41, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' type=8 content='>' Position check triggered continue Processing position 42, char '.' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 't' Position advanced to 45 Processing position 45, char 'e' Position advanced to 46 Processing position 46, char 's' Position advanced to 47 Processing position 47, char 't' Position advanced to 48 Processing position 48, char '_' Position advanced to 49 Processing position 49, char 'f' Position advanced to 50 Processing position 50, char 'i' Position advanced to 51 Processing position 51, char 'l' Position advanced to 52 Processing position 52, char 'e' Position advanced to 53 Processing position 53, char 's' Position advanced to 54 Processing position 54, char '/' Position advanced to 55 Processing position 55, char 'i' Position advanced to 56 Processing position 56, char 'n' Position advanced to 57 Processing position 57, char 'v' Position advanced to 58 Processing position 58, char 'a' Position advanced to 59 Processing position 59, char 'l' Position advanced to 60 Processing position 60, char 'i' Position advanced to 61 Processing position 61, char 'd' Position advanced to 62 Processing position 62, char '_' Position advanced to 63 Processing position 63, char 'p' Position advanced to 64 Processing position 64, char 'e' Position advanced to 65 Processing position 65, char 'r' Position advanced to 66 Processing position 66, char 'm' Position advanced to 67 Processing position 67, char 'i' Position advanced to 68 Processing position 68, char 's' Position advanced to 69 Processing position 69, char 's' Position advanced to 70 Processing position 70, char 'i' Position advanced to 71 Processing position 71, char 'o' Position advanced to 72 Processing position 72, char 'n' Position advanced to 73 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=3 content=[echo] type=3 content=[bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes echo Processing pipes No pipes found in command Processing redirections Redirection node type=8, target cmd=0x5a617c27bb30, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5a617c27bdb0 to cmd 0x5a617c27bb30 and target 0x5a617c27be00 Starting collection after redirection Found argument 'echo' after redirection Found argument 'bye' after redirection Setting redirection root to node 0x5a617c27bdb0 Redirection node type=8, target cmd=0x5a617c27bb30, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5a617c27c0b0 to cmd 0x5a617c27bb30 and target 0x5a617c27c160 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [bye] [echo] [hi] [echo] [bye] Command argument verification complete Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [bye] [echo] [hi] [echo] [bye] Command argument verification complete Determining root node for execution Root node is redirection structure Root node type=8 echo Executing command tree Executing node type=8 at 0x5a617c27bdb0 Executing redirection node type=8 0x5a617c27bb30 (type 2) echo with 3 args echo (nil)) Processing redirection node type=8 './outfiles/outfile01' Redirection setup failed (error code 1) 209942 Stopping redirection chain processing after first failure Some redirections failed In standalone context, aborting execution Redirection chain processing failed 1 Command execution completed with error code 1)
bash error = ( Permission denied)

Test 101: ❌ echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char 'b' Position advanced to 16 Processing position 16, char 'y' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 19, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 20, char '.' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'e' Position advanced to 24 Processing position 24, char 's' Position advanced to 25 Processing position 25, char 't' Position advanced to 26 Processing position 26, char '_' Position advanced to 27 Processing position 27, char 'f' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'l' Position advanced to 30 Processing position 30, char 'e' Position advanced to 31 Processing position 31, char 's' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 'i' Position advanced to 34 Processing position 34, char 'n' Position advanced to 35 Processing position 35, char 'v' Position advanced to 36 Processing position 36, char 'a' Position advanced to 37 Processing position 37, char 'l' Position advanced to 38 Processing position 38, char 'i' Position advanced to 39 Processing position 39, char 'd' Position advanced to 40 Processing position 40, char '_' Position advanced to 41 Processing position 41, char 'p' Position advanced to 42 Processing position 42, char 'e' Position advanced to 43 Processing position 43, char 'r' Position advanced to 44 Processing position 44, char 'm' Position advanced to 45 Processing position 45, char 'i' Position advanced to 46 Processing position 46, char 's' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'o' Position advanced to 50 Processing position 50, char 'n' Position advanced to 51 Processing position 51, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 52, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 53, char '.' Position advanced to 54 Processing position 54, char '/' Position advanced to 55 Processing position 55, char 'o' Position advanced to 56 Processing position 56, char 'u' Position advanced to 57 Processing position 57, char 't' Position advanced to 58 Processing position 58, char 'f' Position advanced to 59 Processing position 59, char 'i' Position advanced to 60 Processing position 60, char 'l' Position advanced to 61 Processing position 61, char 'e' Position advanced to 62 Processing position 62, char 's' Position advanced to 63 Processing position 63, char '/' Position advanced to 64 Processing position 64, char 'o' Position advanced to 65 Processing position 65, char 'u' Position advanced to 66 Processing position 66, char 't' Position advanced to 67 Processing position 67, char 'f' Position advanced to 68 Processing position 68, char 'i' Position advanced to 69 Processing position 69, char 'l' Position advanced to 70 Processing position 70, char 'e' Position advanced to 71 Processing position 71, char '0' Position advanced to 72 Processing position 72, char '1' Position advanced to 73 Tokenization complete, finishing Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo, bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=8, target cmd=0x5eba2828c2e0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5eba2828c350 to cmd 0x5eba2828c2e0 and target 0x5eba2828c4e0 Starting collection after redirection Setting redirection root to node 0x5eba2828c350 Redirection node type=8, target cmd=0x5eba2828c2e0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5eba2828c530 to cmd 0x5eba2828c2e0 and target 0x5eba2828c5c0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [bye] Command argument verification complete Associated command 0x5eba2828c2e0 with redirection 0x5eba2828c350 (type 8) Redirection structure built with root node type 8 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=8 Skipping redirection node type=8 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5eba2828c150 Starting pipe execution for node 0x5eba2828c150 echo Forking left child Forking right child 209992) 209993) echo Processing redirections for right command echo 0x5eba2828c150) Processing redirection node type=8 './test_files/invalid_permission' Left pipe process (PID 209992) executing command Setting up output redirection to file './test_files/invalid_permission' Executing node type=2 at 0x5eba2828c0a0 echo 0 0 Permission denied Permission check failed for './test_files/invalid_permission' 209990 Redirection setup failed (error code 1) 209990 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 209993) executing command Executing node type=2 at 0x5eba2828c2e0 [echo] [bye] echo 0 0 0) Left command exited with code 0 209993) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 122: ❌ echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye 
Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
mini outfiles:
hi
bye
bash outfiles:
hi
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 10, char '.' Position advanced to 11 Processing position 11, char '/' Position advanced to 12 Processing position 12, char 'o' Position advanced to 13 Processing position 13, char 'u' Position advanced to 14 Processing position 14, char 't' Position advanced to 15 Processing position 15, char 'f' Position advanced to 16 Processing position 16, char 'i' Position advanced to 17 Processing position 17, char 'l' Position advanced to 18 Processing position 18, char 'e' Position advanced to 19 Processing position 19, char 's' Position advanced to 20 Processing position 20, char '/' Position advanced to 21 Processing position 21, char 'o' Position advanced to 22 Processing position 22, char 'u' Position advanced to 23 Processing position 23, char 't' Position advanced to 24 Processing position 24, char 'f' Position advanced to 25 Processing position 25, char 'i' Position advanced to 26 Processing position 26, char 'l' Position advanced to 27 Processing position 27, char 'e' Position advanced to 28 Processing position 28, char '0' Position advanced to 29 Processing position 29, char '1' Position advanced to 30 Processing position 30, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 31, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' Position check triggered continue Processing position 33, char '.' Position advanced to 34 Processing position 34, char '/' Position advanced to 35 Processing position 35, char 'o' Position advanced to 36 Processing position 36, char 'u' Position advanced to 37 Processing position 37, char 't' Position advanced to 38 Processing position 38, char 'f' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'l' Position advanced to 41 Processing position 41, char 'e' Position advanced to 42 Processing position 42, char 's' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'o' Position advanced to 45 Processing position 45, char 'u' Position advanced to 46 Processing position 46, char 't' Position advanced to 47 Processing position 47, char 'f' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'l' Position advanced to 50 Processing position 50, char 'e' Position advanced to 51 Processing position 51, char '0' Position advanced to 52 Processing position 52, char '2' Position advanced to 53 Processing position 53, char ' ' Creating token from './outfiles/outfile02' Token type set to 3 Creating token type=3 content='./outfiles/outfile02' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' Position check triggered continue Processing position 54, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' Position check triggered continue Processing position 55, char ' ' Position check triggered continue Processing position 56, char 'e' Position advanced to 57 Processing position 57, char 'c' Position advanced to 58 Processing position 58, char 'h' Position advanced to 59 Processing position 59, char 'o' Position advanced to 60 Processing position 60, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 61, char 'b' Position advanced to 62 Processing position 62, char 'y' Position advanced to 63 Processing position 63, char 'e' Position advanced to 64 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=9 content=[>>] type=3 content=[./outfiles/outfile01] type=9 content=[>>] type=3 content=[./outfiles/outfile02] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x5b263a45a160, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5b263a45a230 to cmd 0x5b263a45a160 and target 0x5b263a45a3c0 Starting collection after redirection Setting redirection root to node 0x5b263a45a230 Redirection node type=9, target cmd=0x5b263a45a160, cmd type=2 echo ./outfiles/outfile02 Linking redir 0x5b263a45a470 to cmd 0x5b263a45a160 and target 0x5b263a45a520 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=9 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x5b263a45a160 with redirection 0x5b263a45a230 (type 9) Associated command 0x5b263a45a700 with redirection 0x5b263a45a470 (type 9) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=9 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x5b263a45a630 Starting pipe execution for node 0x5b263a45a630 echo Forking left child Forking right child 210824) Processing redirections for left command echo 0x5b263a45a630) Processing redirection node type=9 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=9 './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile02' Successfully opened './outfiles/outfile02' with fd 4 Successfully redirected stdout to file './outfiles/outfile02' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x5b263a45a470 targeting 0x5b263a45a160 No more redirections found for cmd 0x5b263a45a160 No more redirections found for this command Finished processing redirection chain successfully Left pipe process (PID 210824) executing command Executing node type=2 at 0x5b263a45a160 [echo] [hi] echo 0 0 210825) echo Processing redirections for right command echo 0x5b263a45a630) Processing redirection node type=9 './outfiles/outfile02' Setting up output redirection to file './outfiles/outfile02' Successfully opened './outfiles/outfile02' with fd 3 Successfully redirected stdout to file './outfiles/outfile02' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x5b263a45a470 targeting 0x5b263a45a700 No more redirections found for cmd 0x5b263a45a700 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 210825) executing command Executing node type=2 at 0x5b263a45a700 [echo] [bye] echo 0 0 0) Left command exited with code 0 210825) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ()

Test 127: ❌ echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 10, char '.' Position advanced to 11 Processing position 11, char '/' Position advanced to 12 Processing position 12, char 't' Position advanced to 13 Processing position 13, char 'e' Position advanced to 14 Processing position 14, char 's' Position advanced to 15 Processing position 15, char 't' Position advanced to 16 Processing position 16, char '_' Position advanced to 17 Processing position 17, char 'f' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'l' Position advanced to 20 Processing position 20, char 'e' Position advanced to 21 Processing position 21, char 's' Position advanced to 22 Processing position 22, char '/' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'n' Position advanced to 25 Processing position 25, char 'v' Position advanced to 26 Processing position 26, char 'a' Position advanced to 27 Processing position 27, char 'l' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'd' Position advanced to 30 Processing position 30, char '_' Position advanced to 31 Processing position 31, char 'p' Position advanced to 32 Processing position 32, char 'e' Position advanced to 33 Processing position 33, char 'r' Position advanced to 34 Processing position 34, char 'm' Position advanced to 35 Processing position 35, char 'i' Position advanced to 36 Processing position 36, char 's' Position advanced to 37 Processing position 37, char 's' Position advanced to 38 Processing position 38, char 'i' Position advanced to 39 Processing position 39, char 'o' Position advanced to 40 Processing position 40, char 'n' Position advanced to 41 Processing position 41, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 42, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 43, char '.' Position advanced to 44 Processing position 44, char '/' Position advanced to 45 Processing position 45, char 'o' Position advanced to 46 Processing position 46, char 'u' Position advanced to 47 Processing position 47, char 't' Position advanced to 48 Processing position 48, char 'f' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'l' Position advanced to 51 Processing position 51, char 'e' Position advanced to 52 Processing position 52, char 's' Position advanced to 53 Processing position 53, char '/' Position advanced to 54 Processing position 54, char 'o' Position advanced to 55 Processing position 55, char 'u' Position advanced to 56 Processing position 56, char 't' Position advanced to 57 Processing position 57, char 'f' Position advanced to 58 Processing position 58, char 'i' Position advanced to 59 Processing position 59, char 'l' Position advanced to 60 Processing position 60, char 'e' Position advanced to 61 Processing position 61, char '0' Position advanced to 62 Processing position 62, char '1' Position advanced to 63 Processing position 63, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 64, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' Position check triggered continue Processing position 65, char ' ' Position check triggered continue Processing position 66, char 'e' Position advanced to 67 Processing position 67, char 'c' Position advanced to 68 Processing position 68, char 'h' Position advanced to 69 Processing position 69, char 'o' Position advanced to 70 Processing position 70, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 71, char 'b' Position advanced to 72 Processing position 72, char 'y' Position advanced to 73 Processing position 73, char 'e' Position advanced to 74 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Building and executing command Building AST from token list type=2 content=[echo, hi] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x595abc4a9c40, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x595abc4a9d30 to cmd 0x595abc4a9c40 and target 0x595abc4a9ec0 Starting collection after redirection Setting redirection root to node 0x595abc4a9d30 Redirection node type=8, target cmd=0x595abc4a9c40, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x595abc4a9f10 to cmd 0x595abc4a9c40 and target 0x595abc4a9fa0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Associated command 0x595abc4a9c40 with redirection 0x595abc4a9d30 (type 9) Associated command 0x595abc4aa180 with redirection 0x595abc4a9f10 (type 8) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] Skipping redirection node type=9 Skipping redirection node type=8 [echo] [hi] Checking command echo [echo] [bye] [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x595abc4aa0b0 Starting pipe execution for node 0x595abc4aa0b0 echo Forking left child Forking right child Processing redirections for left command 211056) echo 0x595abc4aa0b0) Processing redirection node type=9 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 211054 Redirection setup failed (error code 1) 211054 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 211056) executing command Executing node type=2 at 0x595abc4a9c40 [echo] [hi] echo 0 0 211057) echo Processing redirections for right command echo 0x595abc4aa0b0) Processing redirection node type=8 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful No direct redir link, searching for next redirection Looking for redirections after 0x595abc4a9f10 targeting 0x595abc4aa180 No more redirections found for cmd 0x595abc4aa180 No more redirections found for this command Finished processing redirection chain successfully Right pipe process (PID 211057) executing command Executing node type=2 at 0x595abc4aa180 [echo] [bye] echo 0 0 0) Left command exited with code 0 211057) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)
Test 128: ❌ echo hi | echo bye >>./test_files/invalid_permission 
mini output = (bye)
bash output = ()
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo bye >>./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char 'b' Position advanced to 16 Processing position 16, char 'y' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 19, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 21, char '.' Position advanced to 22 Processing position 22, char '/' Position advanced to 23 Processing position 23, char 't' Position advanced to 24 Processing position 24, char 'e' Position advanced to 25 Processing position 25, char 's' Position advanced to 26 Processing position 26, char 't' Position advanced to 27 Processing position 27, char '_' Position advanced to 28 Processing position 28, char 'f' Position advanced to 29 Processing position 29, char 'i' Position advanced to 30 Processing position 30, char 'l' Position advanced to 31 Processing position 31, char 'e' Position advanced to 32 Processing position 32, char 's' Position advanced to 33 Processing position 33, char '/' Position advanced to 34 Processing position 34, char 'i' Position advanced to 35 Processing position 35, char 'n' Position advanced to 36 Processing position 36, char 'v' Position advanced to 37 Processing position 37, char 'a' Position advanced to 38 Processing position 38, char 'l' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'd' Position advanced to 41 Processing position 41, char '_' Position advanced to 42 Processing position 42, char 'p' Position advanced to 43 Processing position 43, char 'e' Position advanced to 44 Processing position 44, char 'r' Position advanced to 45 Processing position 45, char 'm' Position advanced to 46 Processing position 46, char 'i' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 's' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'o' Position advanced to 51 Processing position 51, char 'n' Position advanced to 52 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo, bye] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x59e6b1d361c0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x59e6b1d36210 to cmd 0x59e6b1d361c0 and target 0x59e6b1d363a0 Starting collection after redirection Setting redirection root to node 0x59e6b1d36210 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 [echo] [bye] Command argument verification complete Associated command 0x59e6b1d361c0 with redirection 0x59e6b1d36210 (type 9) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x59e6b1d36030 Starting pipe execution for node 0x59e6b1d36030 echo Forking left child Forking right child Left pipe process (PID 211104) executing command 211104) Executing node type=2 at 0x59e6b1d35f60 [echo] [hi] echo 0 0 211105) echo Processing redirections for right command echo 0x59e6b1d36030) Processing redirection node type=9 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 211102 Redirection setup failed (error code 1) 211102 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 211105) executing command Executing node type=2 at 0x59e6b1d361c0 [echo] [bye] echo 0 0 0) Left command exited with code 0 211105) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)
Test 129: ❌ echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission 
Files ./mini_outfiles/outfile01 and ./bash_outfiles/outfile01 differ
mini outfiles:
bye
bash outfiles:
mini exit code = 0
bash exit code = 1
mini error = ( 'echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 'c' Position advanced to 12 Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 15, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 17, char '.' Position advanced to 18 Processing position 18, char '/' Position advanced to 19 Processing position 19, char 'o' Position advanced to 20 Processing position 20, char 'u' Position advanced to 21 Processing position 21, char 't' Position advanced to 22 Processing position 22, char 'f' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'l' Position advanced to 25 Processing position 25, char 'e' Position advanced to 26 Processing position 26, char 's' Position advanced to 27 Processing position 27, char '/' Position advanced to 28 Processing position 28, char 'o' Position advanced to 29 Processing position 29, char 'u' Position advanced to 30 Processing position 30, char 't' Position advanced to 31 Processing position 31, char 'f' Position advanced to 32 Processing position 32, char 'i' Position advanced to 33 Processing position 33, char 'l' Position advanced to 34 Processing position 34, char 'e' Position advanced to 35 Processing position 35, char '0' Position advanced to 36 Processing position 36, char '1' Position advanced to 37 Processing position 37, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 38, char 'b' Position advanced to 39 Processing position 39, char 'y' Position advanced to 40 Processing position 40, char 'e' Position advanced to 41 Processing position 41, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=3 content='bye' Position check triggered continue Processing position 42, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=3 content='bye' type=8 content='>' Position check triggered continue Processing position 43, char '.' Position advanced to 44 Processing position 44, char '/' Position advanced to 45 Processing position 45, char 't' Position advanced to 46 Processing position 46, char 'e' Position advanced to 47 Processing position 47, char 's' Position advanced to 48 Processing position 48, char 't' Position advanced to 49 Processing position 49, char '_' Position advanced to 50 Processing position 50, char 'f' Position advanced to 51 Processing position 51, char 'i' Position advanced to 52 Processing position 52, char 'l' Position advanced to 53 Processing position 53, char 'e' Position advanced to 54 Processing position 54, char 's' Position advanced to 55 Processing position 55, char '/' Position advanced to 56 Processing position 56, char 'i' Position advanced to 57 Processing position 57, char 'n' Position advanced to 58 Processing position 58, char 'v' Position advanced to 59 Processing position 59, char 'a' Position advanced to 60 Processing position 60, char 'l' Position advanced to 61 Processing position 61, char 'i' Position advanced to 62 Processing position 62, char 'd' Position advanced to 63 Processing position 63, char '_' Position advanced to 64 Processing position 64, char 'p' Position advanced to 65 Processing position 65, char 'e' Position advanced to 66 Processing position 66, char 'r' Position advanced to 67 Processing position 67, char 'm' Position advanced to 68 Processing position 68, char 'i' Position advanced to 69 Processing position 69, char 's' Position advanced to 70 Processing position 70, char 's' Position advanced to 71 Processing position 71, char 'i' Position advanced to 72 Processing position 72, char 'o' Position advanced to 73 Processing position 73, char 'n' Position advanced to 74 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=3 content='bye' type=8 content='>' type=3 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=2 content=[echo] type=9 content=[>>] type=3 content=[./outfiles/outfile01] type=3 content=[bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 2 command nodes echo echo Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=9, target cmd=0x64a5b59450a0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x64a5b5945110 to cmd 0x64a5b59450a0 and target 0x64a5b59451e0 Starting collection after redirection Found argument 'bye' after redirection Setting redirection root to node 0x64a5b5945110 Redirection node type=8, target cmd=0x64a5b59450a0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x64a5b59453c0 to cmd 0x64a5b59450a0 and target 0x64a5b5945470 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 Found potential argument 'bye' Skipping duplicate argument 'bye' Skipping redirection node type=8 [echo] [bye] Command argument verification complete Associated command 0x64a5b59450a0 with redirection 0x64a5b5945110 (type 9) Redirection structure built with root node type 9 Verifying all commands have proper arguments Checking for missed arguments Checking command echo [echo] [hi] [echo] [hi] Checking command echo [echo] [bye] Skipping redirection node type=9 Found potential argument 'bye' Skipping duplicate argument 'bye' Skipping redirection node type=8 [echo] [bye] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 echo Executing command tree Executing node type=11 at 0x64a5b5944f10 Starting pipe execution for node 0x64a5b5944f10 echo Forking left child Forking right child Left pipe process (PID 211150) executing command Executing node type=2 at 0x64a5b5944e60 [echo] [hi] echo 0 0 211150) 211151) echo Processing redirections for right command echo 0x64a5b5944f10) Processing redirection node type=9 './outfiles/outfile01' Setting up output redirection to file './outfiles/outfile01' Successfully opened './outfiles/outfile01' with fd 3 Successfully redirected stdout to file './outfiles/outfile01' Redirection setup successful Following redir link to next redirection node Processing redirection node type=8 './test_files/invalid_permission' Setting up output redirection to file './test_files/invalid_permission' Permission denied Permission check failed for './test_files/invalid_permission' 211148 Redirection setup failed (error code 1) 211148 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Right pipe process (PID 211151) executing command Executing node type=2 at 0x64a5b59450a0 [echo] [bye] echo 0 0 0) Left command exited with code 0 211151) 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( Permission denied)

Test 131: ❌ cat <minishell.h|ls 
mini exit code = wildcards
bash exit code = 0
mini error = ( 'cat <minishell.h|ls' Processing position 0, char 'c' Position advanced to 1 Processing position 1, char 'a' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char ' ' Creating token from 'cat' Token type set to 2 Creating token type=2 content='cat' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='cat' Position check triggered continue Processing position 4, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' Position check triggered continue Processing position 5, char 'm' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char 'n' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 's' Position advanced to 10 Processing position 10, char 'h' Position advanced to 11 Processing position 11, char 'e' Position advanced to 12 Processing position 12, char 'l' Position advanced to 13 Processing position 13, char 'l' Position advanced to 14 Processing position 14, char '.' Position advanced to 15 Processing position 15, char 'h' Position advanced to 16 Processing position 16, char '|' Creating token from 'minishell.h' Token type set to 3 Creating token type=3 content='minishell.h' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='minishell.h' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='minishell.h' type=11 content='|' Position check triggered continue Processing position 17, char 'l' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Tokenization complete, finishing Creating token from 'ls' Token type set to 2 Creating token type=3 content='ls' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='cat' type=7 content='<' type=3 content='minishell.h' type=11 content='|' type=2 content='ls' Building and executing command Building AST from token list type=2 content=[cat] type=7 content=[<] type=3 content=[minishell.h] type=11 content=[|] type=2 content=[ls] Building AST from token list Found 2 command nodes cat ls Processing pipes Pipe structure built with root node type 11 Processing redirections Redirection node type=7, target cmd=0x58a32bf9eb20, cmd type=2 cat minishell.h Linking redir 0x58a32bf9ebf0 to cmd 0x58a32bf9eb20 and target 0x58a32bfba870 Starting collection after redirection Setting redirection root to node 0x58a32bf9ebf0 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command ls [ls] [ls] Command argument verification complete Associated command 0x58a32bf9eb20 with redirection 0x58a32bf9ebf0 (type 7) Redirection structure built with root node type 7 Verifying all commands have proper arguments Checking for missed arguments Checking command cat [cat] Skipping redirection node type=7 [cat] Checking command ls [ls] [ls] Command argument verification complete Determining root node for execution Root node is pipe structure Root node type=11 ls Executing command tree Executing node type=11 at 0x58a32bfba960 Starting pipe execution for node 0x58a32bfba960 ls Forking left child Forking right child Processing redirections for left command 211240) cat 0x58a32bfba960) Processing redirection node type=7 'minishell.h' Setting up input redirection from file 'minishell.h' No such file or directory) No such file or directory Input redirection error in PID 211240 for file 'minishell.h'. Continuing. Redirection setup failed (error code 1) 211238 Stopping redirection chain processing after first failure Some redirections failed In pipe context, continuing despite errors Left pipe process (PID 211240) executing command Executing node type=2 at 0x58a32bf9eb20 [cat] cat 211241) ls Right pipe process (PID 211241) executing command Executing node type=2 at 0x58a32bfbaa30 [ls] ls 0 0 0) Left command exited with code 0 211241) 0 0 0) Right command exited with code 0 0 0 Command execution completed with error code 0)
bash error = ( No such file or directory)
———————————— extras

Test 133: ❌ $PWD 
mini exit code = 2
bash exit code = 126
mini error = ( '$PWD' Processing position 0, char '$' 'PWD' 'PWD' '/home/bleow/Coding/Core/minishell/minishell_tester' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 4, current_start 0 Set vars->start to 4 (current vars->pos) Loop ended. Current char '0' at pos 4. Text to process is from index 4 to 4. Calling handle_right_adj (from tokenize_utils.c) Processing text from 4 to 4 No text to process (pos 4 <= start 4) Exiting process_right_adj, new start for next token is 4 Position check triggered continue Tokenization complete, finishing Building and executing command Building AST from token list type=2 content=[/home/bleow/Coding/Core/minishell/minishell_tester] Building AST from token list Found 1 command nodes /home/bleow/Coding/Core/minishell/minishell_tester Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command /home/bleow/Coding/Core/minishell/minishell_tester [/home/bleow/Coding/Core/minishell/minishell_tester] [/home/bleow/Coding/Core/minishell/minishell_tester] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command /home/bleow/Coding/Core/minishell/minishell_tester [/home/bleow/Coding/Core/minishell/minishell_tester] [/home/bleow/Coding/Core/minishell/minishell_tester] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x5713b764e0c0 [/home/bleow/Coding/Core/minishell/minishell_tester] /home/bleow/Coding/Core/minishell/minishell_tester Is a directory 2 2 Command execution completed with error code 2)
bash error = ( Is a directory)

Test 134: ❌ $EMPTY 
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY' Processing position 0, char '$' 'EMPTY' 'EMPTY' '' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 6, current_start 0 Set vars->start to 6 (current vars->pos) Loop ended. Current char '0' at pos 6. Text to process is from index 6 to 6. Calling handle_right_adj (from tokenize_utils.c) Processing text from 6 to 6 No text to process (pos 6 <= start 6) Exiting process_right_adj, new start for next token is 6 Position check triggered continue Tokenization complete, finishing Building and executing command Building AST from token list type=2 content=[] Building AST from token list Found 1 command nodes Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command [] [] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command [] [] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x5c8e9723ff80 [] Permission denied 127 127 Command execution completed with error code 127)
bash error = ()

Test 135: ❌ $EMPTY echo hi 
mini output = ()
bash output = (hi)
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY echo hi' Processing position 0, char '$' 'EMPTY' 'EMPTY' '' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 6, current_start 0 Set vars->start to 6 (current vars->pos) Loop ended. Current char ' ' at pos 6. Text to process is from index 6 to 6. Calling handle_right_adj (from tokenize_utils.c) Processing text from 6 to 6 No text to process (pos 6 <= start 6) Exiting process_right_adj, new start for next token is 6 Position check triggered continue Processing position 6, char ' ' Position check triggered continue Processing position 7, char 'e' Position advanced to 8 Processing position 8, char 'c' Position advanced to 9 Processing position 9, char 'h' Position advanced to 10 Processing position 10, char 'o' Position advanced to 11 Processing position 11, char ' ' Creating token from 'echo' Token type set to 3 Creating token type=3 content='echo' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'echo' with command '' No next node, setting current to cmd 1 Traversing final token list type=2 content='' Position check triggered continue Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Tokenization complete, finishing Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command '' No next node, setting current to cmd 1 Traversing final token list type=2 content='' Building and executing command Building AST from token list type=2 content=[, echo, hi] Building AST from token list Found 1 command nodes Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command [] [echo] [hi] [] [echo] [hi] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command [] [echo] [hi] [] [echo] [hi] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x56dfa3438220 [] [echo] [hi] Permission denied 127 127 Command execution completed with error code 127)
bash error = ()

Test 136: ❌ ./test_files/invalid_permission 
mini exit code = 127
bash exit code = 126
mini error = ( './test_files/invalid_permission' Processing position 0, char '.' Position advanced to 1 Processing position 1, char '/' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char 'e' Position advanced to 4 Processing position 4, char 's' Position advanced to 5 Processing position 5, char 't' Position advanced to 6 Processing position 6, char '_' Position advanced to 7 Processing position 7, char 'f' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 'l' Position advanced to 10 Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 's' Position advanced to 12 Processing position 12, char '/' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Processing position 14, char 'n' Position advanced to 15 Processing position 15, char 'v' Position advanced to 16 Processing position 16, char 'a' Position advanced to 17 Processing position 17, char 'l' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'd' Position advanced to 20 Processing position 20, char '_' Position advanced to 21 Processing position 21, char 'p' Position advanced to 22 Processing position 22, char 'e' Position advanced to 23 Processing position 23, char 'r' Position advanced to 24 Processing position 24, char 'm' Position advanced to 25 Processing position 25, char 'i' Position advanced to 26 Processing position 26, char 's' Position advanced to 27 Processing position 27, char 's' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'o' Position advanced to 30 Processing position 30, char 'n' Position advanced to 31 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 2 Creating token type=2 content='./test_files/invalid_permission' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='./test_files/invalid_permission' Building and executing command Building AST from token list type=2 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes ./test_files/invalid_permission Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files/invalid_permission [./test_files/invalid_permission] [./test_files/invalid_permission] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files/invalid_permission [./test_files/invalid_permission] [./test_files/invalid_permission] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x5a43d7311ab0 [./test_files/invalid_permission] ./test_files/invalid_permission Permission denied 127 127 Command execution completed with error code 127)
bash error = ( Permission denied)

Test 141: ❌ ./test_files 
mini exit code = 2
bash exit code = 126
mini error = ( './test_files' Processing position 0, char '.' Position advanced to 1 Processing position 1, char '/' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char 'e' Position advanced to 4 Processing position 4, char 's' Position advanced to 5 Processing position 5, char 't' Position advanced to 6 Processing position 6, char '_' Position advanced to 7 Processing position 7, char 'f' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 'l' Position advanced to 10 Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 's' Position advanced to 12 Tokenization complete, finishing Creating token from './test_files' Token type set to 2 Creating token type=2 content='./test_files' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='./test_files' Building and executing command Building AST from token list type=2 content=[./test_files] Building AST from token list Found 1 command nodes ./test_files Processing pipes No pipes found in command Processing redirections Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files [./test_files] [./test_files] Command argument verification complete No redirections found in command Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files [./test_files] [./test_files] Command argument verification complete Determining root node for execution Root node is single command Root node type=2 Executing command tree Executing node type=2 at 0x56bd1c622f40 [./test_files] ./test_files Is a directory 2 2 Command execution completed with error code 2)
bash error = ( Is a directory)

126/146
