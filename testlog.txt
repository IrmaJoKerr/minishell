
Test  80: ❌ echo <123 <456 hi | echo 42 
mini output = ()
bash output = (42)
mini exit code = 1
bash exit code = 0
mini error = ( 'echo <123 <456 hi | echo 42' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' Position check triggered continue Processing position 6, char '1' Position advanced to 7 Processing position 7, char '2' Position advanced to 8 Processing position 8, char '3' Position advanced to 9 Processing position 9, char ' ' Creating token from '123' Token type set to 3 Creating token type=3 content='123' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='123' Position check triggered continue Processing position 10, char '<' Creating token type=7 content='<' Linking token type=7 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='123' type=7 content='<' Position check triggered continue Processing position 11, char '4' Position advanced to 12 Processing position 12, char '5' Position advanced to 13 Processing position 13, char '6' Position advanced to 14 Processing position 14, char ' ' Creating token from '456' Token type set to 3 Creating token type=3 content='456' Linking token type=3 to list (current=7) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='123' type=7 content='<' type=3 content='456' Position check triggered continue Processing position 15, char 'h' Position advanced to 16 Processing position 16, char 'i' Position advanced to 17 Processing position 17, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='123' type=7 content='<' type=3 content='456' type=3 content='hi' Position check triggered continue Processing position 18, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='123' type=7 content='<' type=3 content='456' type=3 content='hi' type=11 content='|' Position check triggered continue Processing position 19, char ' ' Position check triggered continue Processing position 20, char 'e' Position advanced to 21 Processing position 21, char 'c' Position advanced to 22 Processing position 22, char 'h' Position advanced to 23 Processing position 23, char 'o' Position advanced to 24 Processing position 24, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='123' type=7 content='<' type=3 content='456' type=3 content='hi' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 25, char '4' Position advanced to 26 Processing position 26, char '2' Position advanced to 27 Tokenization complete, finishing Creating token from '42' Token type set to 3 Creating token type=3 content='42' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg '42' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=7 content='<' type=3 content='123' type=7 content='<' type=3 content='456' type=3 content='hi' type=11 content='|' type=2 content='echo' Building AST from token list type=2 content=[echo] type=7 content=[<] type=3 content=[123] type=7 content=[<] type=3 content=[456] type=3 content=[hi] type=11 content=[|] type=2 content=[echo, 42] Building AST from token list Found 2 command nodes 0x64b35cec4f00 Redirection node type=7, target cmd=0x64b35cea8e70, cmd type=2 echo 123 Linking redir 0x64b35cea8f40 to cmd 0x64b35cea8e70 and target 0x64b35cec4bc0 Starting collection after redirection Setting redirection root to node 0x64b35cea8f40 Redirection node type=7, target cmd=0x64b35cea8e70, cmd type=2 echo 456 Linking redir 0x64b35cec4c90 to cmd 0x64b35cea8e70 and target 0x64b35cec4d60 Starting collection after redirection Found argument 'hi' after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo 'echo' 'hi' Skipping duplicate argument 'hi' 'echo' 'hi' Checking command echo 'echo' '42' 'echo' '42' 0x64b35cea8f40 Root node type=11 Executing command tree Executing node type=11 at 0x64b35cec4f00 Starting pipe execution Forking left child Forking right child Executing node type=7 at 0x64b35cea8f40 Executing redirection node type=7 0x64b35cea8e70 (type 2) echo with 1 args 41679) Processing redirection chain starting with node type=7 Opening file '123' for input redirection No such file or directory Permission check failed for '123' Redirection failed but continuing process Redirection chain processing failed 1 Executing node type=7 at 0x64b35cec4c90 Executing redirection node type=7 0x64b35cea8e70 (type 2) echo with 1 args Processing redirection chain starting with node type=7 Opening file '456' for input redirection No such file or directory Permission check failed for '456' Redirection failed but continuing process Redirection chain processing failed 1 Left command exited with code 1 41680) Right command exited with code 1 1)
bash error = ( No such file or directory)

Test  87: ❌ ls >"./outfiles/outfile""1""2""3""4""5" 
Only in ./mini_outfiles: outfile
Only in ./bash_outfiles: outfile12345
mini outfiles:
2
bash outfiles:
2
bash_outfiles
bash.supp
bonus
bonus_bonus
builtins
extras
local.supp
loop.out
manual_tests
mini_outfiles
minishell
os_specific
outfiles
pipes
README.md
redirects
syntax
temp
tester
test_files
wildcards
mini exit code = 2
bash exit code = 0
mini error = ( 'ls >"./outfiles/outfile""1""2""3""4""5"' Processing position 0, char 'l' Position advanced to 1 Processing position 1, char 's' Position advanced to 2 Processing position 2, char ' ' Creating token from 'ls' Token type set to 2 Creating token type=2 content='ls' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='ls' Position check triggered continue Processing position 3, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' Position check triggered continue Processing position 4, char '"' Processing at pos 4 with adjacency={0,1} Processing quoted string starting at position 4 with " './outfiles/outfile' " Restored adjacency to {0,1} for content './outfiles/outfile' 5) Handling as redirection target Handling quoted text './outfiles/outfile' as potential redirection target Found redirection node type=8 Creating file node for redirection target Linked file './outfiles/outfile' to redirection node Position check triggered continue Processing position 24, char '"' Creating token from '"./outfiles/outfile"' Token type set to 5 Creating token type=5 content='"./outfiles/outfile"' Linking token type=5 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' Processing at pos 24 with adjacency={1,1} Processing quoted string starting at position 24 with " '1' " Restored adjacency to {1,1} for content '1' 5) Handling as redirection target Handling quoted text '1' as potential redirection target Found redirection node type=8 Redirection already has target './outfiles/outfile', treating '1' as command argument Found command node 'ls' to attach argument Position check triggered continue Processing position 27, char '"' Creating token from '"1"' Token type set to 5 Creating token type=5 content='"1"' Linking token type=5 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' type=5 content='"1"' Processing at pos 27 with adjacency={1,1} Processing quoted string starting at position 27 with " '2' " Restored adjacency to {1,1} for content '2' 5) Handling as redirection target Handling quoted text '2' as potential redirection target Found redirection node type=8 Redirection already has target './outfiles/outfile', treating '2' as command argument Found command node 'ls' to attach argument Position check triggered continue Processing position 30, char '"' Creating token from '"2"' Token type set to 5 Creating token type=5 content='"2"' Linking token type=5 to list (current=5) Linking as separate node 0 Traversing final token list type=2 content='ls' type=8 content='>' type=3 content='./outfiles/outfile' type=5 content='"./outfiles/outfile"' type=5 content='"1"' type=5 content='"2"' Processing at pos 30 with adjacency={1,1} Processing quoted string starting at position 30 with " '3' " Restored adjacency to {1,1} for content '3' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '3' '"2"' Joining '3' with last argument ('"2"') of current token ('"2"') '"2"3' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '3' 4 0x637a4c774ff0 0x637a4c774ff0 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 33, current_start 30 Set vars->start to 33 (current vars->pos) Loop ended. Current char '"' at pos 33. Text to process is from index 33 to 33. Calling handle_right_adj (from tokenize_utils.c) Processing text from 33 to 33 No text to process (pos 33 <= start 33) Exiting process_right_adj, new start for next token is 33 Token join SUCCEEDED. {|c' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Processing position 33, char '"' Processing at pos 33 with adjacency={1,1} Processing quoted string starting at position 33 with " '4' " Restored adjacency to {1,1} for content '4' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '4' '"2"3' Joining '4' with last argument ('"2"3') of current token ('"2"3') '"2"34' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '4' 5 0x637a4c774f90 0x637a4c774f90 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 36, current_start 33 Set vars->start to 36 (current vars->pos) Loop ended. Current char '"' at pos 36. Text to process is from index 36 to 36. Calling handle_right_adj (from tokenize_utils.c) Processing text from 36 to 36 No text to process (pos 36 <= start 36) Exiting process_right_adj, new start for next token is 36 Token join SUCCEEDED. {|c' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Processing position 36, char '"' Processing at pos 36 with adjacency={1,1} Processing quoted string starting at position 36 with " '5' NONE Restored adjacency to {1,1} for content '5' 5) Processing as regular quoted string Found command node 'ls' Entering merge_quoted_token. Checking adjacency={1,1} for content '5' '"2"34' Joining '5' with last argument ('"2"34') of current token ('"2"34') '"2"345' Attempting to update quote types for arg_idx 0 Entering update_quote_types for arg_idx 0, expanded_val '5' 6 0x637a4c7751e0 0x637a4c7751e0 update_quote_types SUCCEEDED for arg_idx 0 Left join successful, now processing right adjacency. Entering process_right_adj (make_exp_token_utils.c), input_pos 39, current_start 36 Set vars->start to 39 (current vars->pos) Loop ended. Current char '0' at pos 39. Text to process is from index 39 to 39. Calling handle_right_adj (from tokenize_utils.c) Processing text from 39 to 39 No text to process (pos 39 <= start 39) Exiting process_right_adj, new start for next token is 39 Token join SUCCEEDED. {|c' handle_tok_join SUCCEEDED. Dummy_token and content should have been freed by it. Exiting merge_quoted_token. Returning 1. Token was merged Position check triggered continue Tokenization complete, finishing Building AST from token list type=2 content=[ls, 1, 2] type=8 content=[>] type=3 content=[./outfiles/outfile] type=5 content=["./outfiles/outfile"] type=5 content=["1"] type=5 content=["2"345] Building AST from token list Found 1 command nodes (nil) Redirection node type=8, target cmd=0x637a4c759010, cmd type=2 ls ./outfiles/outfile Linking redir 0x637a4c774ca0 to cmd 0x637a4c759010 and target 0x637a4c774d50 Starting collection after redirection Setting redirection root to node 0x637a4c774ca0 Verifying all commands have proper arguments Checking for missed arguments Checking command ls 'ls' '1' '2' 'ls' '1' '2' 0x637a4c774ca0 Root node type=8 Executing command tree Executing node type=8 at 0x637a4c774ca0 Executing redirection node type=8 0x637a4c759010 (type 2) ls with 2 args Processing redirection chain starting with node type=8 Looking for redirections after 0x637a4c774ca0 targeting 0x637a4c759010 No more redirections found for cmd 0x637a4c759010 Redirection chain processing complete Executing command after redirection setup Executing node type=2 at 0x637a4c759010 [ls] [1] 2 ls No such file or directory 2 2 2 2)
bash error = ()

Test  92: ❌ echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye 
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 'o' Position advanced to 12 Processing position 12, char 'u' Position advanced to 13 Processing position 13, char 't' Position advanced to 14 Processing position 14, char 'f' Position advanced to 15 Processing position 15, char 'i' Position advanced to 16 Processing position 16, char 'l' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Processing position 19, char '/' Position advanced to 20 Processing position 20, char 'o' Position advanced to 21 Processing position 21, char 'u' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'f' Position advanced to 24 Processing position 24, char 'i' Position advanced to 25 Processing position 25, char 'l' Position advanced to 26 Processing position 26, char 'e' Position advanced to 27 Processing position 27, char '0' Position advanced to 28 Processing position 28, char '1' Position advanced to 29 Processing position 29, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 30, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' Position check triggered continue Processing position 31, char '.' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 'o' Position advanced to 34 Processing position 34, char 'u' Position advanced to 35 Processing position 35, char 't' Position advanced to 36 Processing position 36, char 'f' Position advanced to 37 Processing position 37, char 'i' Position advanced to 38 Processing position 38, char 'l' Position advanced to 39 Processing position 39, char 'e' Position advanced to 40 Processing position 40, char 's' Position advanced to 41 Processing position 41, char '/' Position advanced to 42 Processing position 42, char 'o' Position advanced to 43 Processing position 43, char 'u' Position advanced to 44 Processing position 44, char 't' Position advanced to 45 Processing position 45, char 'f' Position advanced to 46 Processing position 46, char 'i' Position advanced to 47 Processing position 47, char 'l' Position advanced to 48 Processing position 48, char 'e' Position advanced to 49 Processing position 49, char '0' Position advanced to 50 Processing position 50, char '2' Position advanced to 51 Processing position 51, char ' ' Creating token from './outfiles/outfile02' Token type set to 3 Creating token type=3 content='./outfiles/outfile02' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' Position check triggered continue Processing position 52, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' Position check triggered continue Processing position 53, char ' ' Position check triggered continue Processing position 54, char 'e' Position advanced to 55 Processing position 55, char 'c' Position advanced to 56 Processing position 56, char 'h' Position advanced to 57 Processing position 57, char 'o' Position advanced to 58 Processing position 58, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 59, char 'b' Position advanced to 60 Processing position 60, char 'y' Position advanced to 61 Processing position 61, char 'e' Position advanced to 62 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=8 content=[>] type=3 content=[./outfiles/outfile02] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes 0x5c649c2a1290 Redirection node type=8, target cmd=0x5c649c2a0dc0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5c649c2a0e90 to cmd 0x5c649c2a0dc0 and target 0x5c649c2a1020 Starting collection after redirection Setting redirection root to node 0x5c649c2a0e90 Redirection node type=8, target cmd=0x5c649c2a0dc0, cmd type=2 echo ./outfiles/outfile02 Linking redir 0x5c649c2a10d0 to cmd 0x5c649c2a0dc0 and target 0x5c649c2a1180 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo 'echo' 'hi' 'echo' 'hi' Checking command echo 'echo' 'bye' 'echo' 'bye' 0x5c649c2a0e90 Root node type=11 Executing command tree Executing node type=11 at 0x5c649c2a1290 Starting pipe execution Forking left child Forking right child 42169) Executing node type=8 at 0x5c649c2a0e90 Executing redirection node type=8 0x5c649c2a0dc0 (type 2) echo with 1 args Processing redirection chain starting with node type=8 Looking for redirections after 0x5c649c2a10d0 targeting 0x5c649c2a0dc0 No more redirections found for cmd 0x5c649c2a0dc0 Redirection chain processing complete Executing command after redirection setup Executing node type=2 at 0x5c649c2a0dc0 [echo] [hi] echo 0 0 0 0 Executing node type=8 at 0x5c649c2a10d0 Executing redirection node type=8 0x5c649c2a0dc0 (type 2) echo with 1 args Processing redirection chain starting with node type=8 Left command exited with code 0 42170) Looking for redirections after 0x5c649c2a10d0 targeting 0x5c649c2a0dc0 No more redirections found for cmd 0x5c649c2a0dc0 Redirection chain processing complete Executing command after redirection setup Executing node type=2 at 0x5c649c2a0dc0 [echo] [hi] echo 0 0 0 0 Right command exited with code 0 0)
bash error = ()

Test  96: ❌ echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye 
mini output = ()
bash output = (bye)
mini exit code = 1
bash exit code = 0
mini error = ( 'echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 'o' Position advanced to 12 Processing position 12, char 'u' Position advanced to 13 Processing position 13, char 't' Position advanced to 14 Processing position 14, char 'f' Position advanced to 15 Processing position 15, char 'i' Position advanced to 16 Processing position 16, char 'l' Position advanced to 17 Processing position 17, char 'e' Position advanced to 18 Processing position 18, char 's' Position advanced to 19 Processing position 19, char '/' Position advanced to 20 Processing position 20, char 'o' Position advanced to 21 Processing position 21, char 'u' Position advanced to 22 Processing position 22, char 't' Position advanced to 23 Processing position 23, char 'f' Position advanced to 24 Processing position 24, char 'i' Position advanced to 25 Processing position 25, char 'l' Position advanced to 26 Processing position 26, char 'e' Position advanced to 27 Processing position 27, char '0' Position advanced to 28 Processing position 28, char '1' Position advanced to 29 Processing position 29, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 30, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' Position check triggered continue Processing position 31, char '.' Position advanced to 32 Processing position 32, char '/' Position advanced to 33 Processing position 33, char 't' Position advanced to 34 Processing position 34, char 'e' Position advanced to 35 Processing position 35, char 's' Position advanced to 36 Processing position 36, char 't' Position advanced to 37 Processing position 37, char '_' Position advanced to 38 Processing position 38, char 'f' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'l' Position advanced to 41 Processing position 41, char 'e' Position advanced to 42 Processing position 42, char 's' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'i' Position advanced to 45 Processing position 45, char 'n' Position advanced to 46 Processing position 46, char 'v' Position advanced to 47 Processing position 47, char 'a' Position advanced to 48 Processing position 48, char 'l' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'd' Position advanced to 51 Processing position 51, char '_' Position advanced to 52 Processing position 52, char 'p' Position advanced to 53 Processing position 53, char 'e' Position advanced to 54 Processing position 54, char 'r' Position advanced to 55 Processing position 55, char 'm' Position advanced to 56 Processing position 56, char 'i' Position advanced to 57 Processing position 57, char 's' Position advanced to 58 Processing position 58, char 's' Position advanced to 59 Processing position 59, char 'i' Position advanced to 60 Processing position 60, char 'o' Position advanced to 61 Processing position 61, char 'n' Position advanced to 62 Processing position 62, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 63, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' Position check triggered continue Processing position 64, char ' ' Position check triggered continue Processing position 65, char 'e' Position advanced to 66 Processing position 66, char 'c' Position advanced to 67 Processing position 67, char 'h' Position advanced to 68 Processing position 68, char 'o' Position advanced to 69 Processing position 69, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 70, char 'b' Position advanced to 71 Processing position 71, char 'y' Position advanced to 72 Processing position 72, char 'e' Position advanced to 73 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./outfiles/outfile01' type=8 content='>' type=3 content='./test_files/invalid_permission' type=11 content='|' type=2 content='echo' Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes 0x5ccf08e18000 Redirection node type=8, target cmd=0x5ccf08e17bb0, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5ccf08e17ca0 to cmd 0x5ccf08e17bb0 and target 0x5ccf08e17e30 Starting collection after redirection Setting redirection root to node 0x5ccf08e17ca0 Redirection node type=8, target cmd=0x5ccf08e17bb0, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5ccf08e17ee0 to cmd 0x5ccf08e17bb0 and target 0x5ccf08e17f70 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo 'echo' 'hi' 'echo' 'hi' Checking command echo 'echo' 'bye' 'echo' 'bye' 0x5ccf08e17ca0 Root node type=11 Executing command tree Executing node type=11 at 0x5ccf08e18000 Starting pipe execution Forking left child Forking right child 42353) Executing node type=8 at 0x5ccf08e17ee0 Executing redirection node type=8 0x5ccf08e17bb0 (type 2) echo with 1 args Processing redirection chain starting with node type=8 Executing node type=8 at 0x5ccf08e17ca0 Executing redirection node type=8 0x5ccf08e17bb0 (type 2) echo with 1 args Processing redirection chain starting with node type=8 Permission denied Redirection failed but continuing process Redirection chain processing failed 1 Permission denied Redirection failed but continuing process Redirection chain processing failed 1 Left command exited with code 1 42354) Right command exited with code 1 1)
bash error = ( Permission denied)

Test  98: ❌ echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' Position check triggered continue Processing position 9, char '.' Position advanced to 10 Processing position 10, char '/' Position advanced to 11 Processing position 11, char 't' Position advanced to 12 Processing position 12, char 'e' Position advanced to 13 Processing position 13, char 's' Position advanced to 14 Processing position 14, char 't' Position advanced to 15 Processing position 15, char '_' Position advanced to 16 Processing position 16, char 'f' Position advanced to 17 Processing position 17, char 'i' Position advanced to 18 Processing position 18, char 'l' Position advanced to 19 Processing position 19, char 'e' Position advanced to 20 Processing position 20, char 's' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 'i' Position advanced to 23 Processing position 23, char 'n' Position advanced to 24 Processing position 24, char 'v' Position advanced to 25 Processing position 25, char 'a' Position advanced to 26 Processing position 26, char 'l' Position advanced to 27 Processing position 27, char 'i' Position advanced to 28 Processing position 28, char 'd' Position advanced to 29 Processing position 29, char '_' Position advanced to 30 Processing position 30, char 'p' Position advanced to 31 Processing position 31, char 'e' Position advanced to 32 Processing position 32, char 'r' Position advanced to 33 Processing position 33, char 'm' Position advanced to 34 Processing position 34, char 'i' Position advanced to 35 Processing position 35, char 's' Position advanced to 36 Processing position 36, char 's' Position advanced to 37 Processing position 37, char 'i' Position advanced to 38 Processing position 38, char 'o' Position advanced to 39 Processing position 39, char 'n' Position advanced to 40 Processing position 40, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 41, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 42, char '.' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'o' Position advanced to 45 Processing position 45, char 'u' Position advanced to 46 Processing position 46, char 't' Position advanced to 47 Processing position 47, char 'f' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'l' Position advanced to 50 Processing position 50, char 'e' Position advanced to 51 Processing position 51, char 's' Position advanced to 52 Processing position 52, char '/' Position advanced to 53 Processing position 53, char 'o' Position advanced to 54 Processing position 54, char 'u' Position advanced to 55 Processing position 55, char 't' Position advanced to 56 Processing position 56, char 'f' Position advanced to 57 Processing position 57, char 'i' Position advanced to 58 Processing position 58, char 'l' Position advanced to 59 Processing position 59, char 'e' Position advanced to 60 Processing position 60, char '0' Position advanced to 61 Processing position 61, char '1' Position advanced to 62 Processing position 62, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 63, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' Position check triggered continue Processing position 64, char ' ' Position check triggered continue Processing position 65, char 'e' Position advanced to 66 Processing position 66, char 'c' Position advanced to 67 Processing position 67, char 'h' Position advanced to 68 Processing position 68, char 'o' Position advanced to 69 Processing position 69, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 70, char 'b' Position advanced to 71 Processing position 71, char 'y' Position advanced to 72 Processing position 72, char 'e' Position advanced to 73 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=8 content='>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Building AST from token list type=2 content=[echo, hi] type=8 content=[>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes 0x57b73b279690 Redirection node type=8, target cmd=0x57b73b279220, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x57b73b279310 to cmd 0x57b73b279220 and target 0x57b73b2794a0 Starting collection after redirection Setting redirection root to node 0x57b73b279310 Redirection node type=8, target cmd=0x57b73b279220, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x57b73b2794f0 to cmd 0x57b73b279220 and target 0x57b73b279580 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo 'echo' 'hi' 'echo' 'hi' Checking command echo 'echo' 'bye' 'echo' 'bye' 0x57b73b279310 Root node type=11 Executing command tree Executing node type=11 at 0x57b73b279690 Starting pipe execution Forking left child Forking right child 42445) Executing node type=8 at 0x57b73b279310 Executing redirection node type=8 0x57b73b279220 (type 2) echo with 1 args Processing redirection chain starting with node type=8 Permission denied Redirection failed but continuing process Redirection chain processing failed 1 Executing node type=8 at 0x57b73b2794f0 Executing redirection node type=8 0x57b73b279220 (type 2) echo with 1 args Processing redirection chain starting with node type=8 Looking for redirections after 0x57b73b2794f0 targeting 0x57b73b279220 No more redirections found for cmd 0x57b73b279220 Redirection chain processing complete Executing command after redirection setup Executing node type=2 at 0x57b73b279220 [echo] [hi] echo 0 0 0 0 Left command exited with code 1 42446) Right command exited with code 0 0)
bash error = ( Permission denied)

Test 100: ❌ echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
cat: './mini_outfiles/*': No such file or directory
bash outfiles:
mini error = ( 'echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' Position check triggered continue Processing position 9, char ' ' Position check triggered continue Processing position 10, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=11) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' Position check triggered continue Processing position 11, char '.' Position advanced to 12 Processing position 12, char '/' Position advanced to 13 Processing position 13, char 'o' Position advanced to 14 Processing position 14, char 'u' Position advanced to 15 Processing position 15, char 't' Position advanced to 16 Processing position 16, char 'f' Position advanced to 17 Processing position 17, char 'i' Position advanced to 18 Processing position 18, char 'l' Position advanced to 19 Processing position 19, char 'e' Position advanced to 20 Processing position 20, char 's' Position advanced to 21 Processing position 21, char '/' Position advanced to 22 Processing position 22, char 'o' Position advanced to 23 Processing position 23, char 'u' Position advanced to 24 Processing position 24, char 't' Position advanced to 25 Processing position 25, char 'f' Position advanced to 26 Processing position 26, char 'i' Position advanced to 27 Processing position 27, char 'l' Position advanced to 28 Processing position 28, char 'e' Position advanced to 29 Processing position 29, char '0' Position advanced to 30 Processing position 30, char '1' Position advanced to 31 Processing position 31, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 32, char 'e' Position advanced to 33 Processing position 33, char 'c' Position advanced to 34 Processing position 34, char 'h' Position advanced to 35 Processing position 35, char 'o' Position advanced to 36 Processing position 36, char ' ' Creating token from 'echo' Token type set to 3 Creating token type=3 content='echo' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' Position check triggered continue Processing position 37, char 'b' Position advanced to 38 Processing position 38, char 'y' Position advanced to 39 Processing position 39, char 'e' Position advanced to 40 Processing position 40, char ' ' Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' Position check triggered continue Processing position 41, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' type=8 content='>' Position check triggered continue Processing position 42, char '.' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 't' Position advanced to 45 Processing position 45, char 'e' Position advanced to 46 Processing position 46, char 's' Position advanced to 47 Processing position 47, char 't' Position advanced to 48 Processing position 48, char '_' Position advanced to 49 Processing position 49, char 'f' Position advanced to 50 Processing position 50, char 'i' Position advanced to 51 Processing position 51, char 'l' Position advanced to 52 Processing position 52, char 'e' Position advanced to 53 Processing position 53, char 's' Position advanced to 54 Processing position 54, char '/' Position advanced to 55 Processing position 55, char 'i' Position advanced to 56 Processing position 56, char 'n' Position advanced to 57 Processing position 57, char 'v' Position advanced to 58 Processing position 58, char 'a' Position advanced to 59 Processing position 59, char 'l' Position advanced to 60 Processing position 60, char 'i' Position advanced to 61 Processing position 61, char 'd' Position advanced to 62 Processing position 62, char '_' Position advanced to 63 Processing position 63, char 'p' Position advanced to 64 Processing position 64, char 'e' Position advanced to 65 Processing position 65, char 'r' Position advanced to 66 Processing position 66, char 'm' Position advanced to 67 Processing position 67, char 'i' Position advanced to 68 Processing position 68, char 's' Position advanced to 69 Processing position 69, char 's' Position advanced to 70 Processing position 70, char 'i' Position advanced to 71 Processing position 71, char 'o' Position advanced to 72 Processing position 72, char 'n' Position advanced to 73 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=11 content='|' type=8 content='>' type=3 content='./outfiles/outfile01' type=3 content='echo' type=3 content='bye' type=8 content='>' type=3 content='./test_files/invalid_permission' Building AST from token list type=2 content=[echo, hi] type=11 content=[|] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=3 content=[echo] type=3 content=[bye] type=8 content=[>] type=3 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes (nil) Redirection node type=8, target cmd=0x5a2aa5096b30, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x5a2aa5096db0 to cmd 0x5a2aa5096b30 and target 0x5a2aa5096e00 Starting collection after redirection Found argument 'echo' after redirection Found argument 'bye' after redirection Setting redirection root to node 0x5a2aa5096db0 Redirection node type=8, target cmd=0x5a2aa5096b30, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x5a2aa50970b0 to cmd 0x5a2aa5096b30 and target 0x5a2aa5097160 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo 'echo' 'hi' 'echo' 'bye' 'echo' 'hi' 'echo' 'bye' 0x5a2aa5096db0 Root node type=8 Executing command tree Executing node type=8 at 0x5a2aa5096db0 Executing redirection node type=8 0x5a2aa5096b30 (type 2) echo with 3 args Processing redirection chain starting with node type=8 Redirection failed but continuing process Redirection chain processing failed 1)
bash error = ( Permission denied)

Test 122: ❌ echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye 
Files ./mini_outfiles/outfile02 and ./bash_outfiles/outfile02 differ
mini outfiles:
hi
hi
bash outfiles:
hi
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 10, char '.' Position advanced to 11 Processing position 11, char '/' Position advanced to 12 Processing position 12, char 'o' Position advanced to 13 Processing position 13, char 'u' Position advanced to 14 Processing position 14, char 't' Position advanced to 15 Processing position 15, char 'f' Position advanced to 16 Processing position 16, char 'i' Position advanced to 17 Processing position 17, char 'l' Position advanced to 18 Processing position 18, char 'e' Position advanced to 19 Processing position 19, char 's' Position advanced to 20 Processing position 20, char '/' Position advanced to 21 Processing position 21, char 'o' Position advanced to 22 Processing position 22, char 'u' Position advanced to 23 Processing position 23, char 't' Position advanced to 24 Processing position 24, char 'f' Position advanced to 25 Processing position 25, char 'i' Position advanced to 26 Processing position 26, char 'l' Position advanced to 27 Processing position 27, char 'e' Position advanced to 28 Processing position 28, char '0' Position advanced to 29 Processing position 29, char '1' Position advanced to 30 Processing position 30, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 31, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' Position check triggered continue Processing position 33, char '.' Position advanced to 34 Processing position 34, char '/' Position advanced to 35 Processing position 35, char 'o' Position advanced to 36 Processing position 36, char 'u' Position advanced to 37 Processing position 37, char 't' Position advanced to 38 Processing position 38, char 'f' Position advanced to 39 Processing position 39, char 'i' Position advanced to 40 Processing position 40, char 'l' Position advanced to 41 Processing position 41, char 'e' Position advanced to 42 Processing position 42, char 's' Position advanced to 43 Processing position 43, char '/' Position advanced to 44 Processing position 44, char 'o' Position advanced to 45 Processing position 45, char 'u' Position advanced to 46 Processing position 46, char 't' Position advanced to 47 Processing position 47, char 'f' Position advanced to 48 Processing position 48, char 'i' Position advanced to 49 Processing position 49, char 'l' Position advanced to 50 Processing position 50, char 'e' Position advanced to 51 Processing position 51, char '0' Position advanced to 52 Processing position 52, char '2' Position advanced to 53 Processing position 53, char ' ' Creating token from './outfiles/outfile02' Token type set to 3 Creating token type=3 content='./outfiles/outfile02' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' Position check triggered continue Processing position 54, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' Position check triggered continue Processing position 55, char ' ' Position check triggered continue Processing position 56, char 'e' Position advanced to 57 Processing position 57, char 'c' Position advanced to 58 Processing position 58, char 'h' Position advanced to 59 Processing position 59, char 'o' Position advanced to 60 Processing position 60, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 61, char 'b' Position advanced to 62 Processing position 62, char 'y' Position advanced to 63 Processing position 63, char 'e' Position advanced to 64 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./outfiles/outfile01' type=9 content='>>' type=3 content='./outfiles/outfile02' type=11 content='|' type=2 content='echo' Building AST from token list type=2 content=[echo, hi] type=9 content=[>>] type=3 content=[./outfiles/outfile01] type=9 content=[>>] type=3 content=[./outfiles/outfile02] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes 0x57c597126630 Redirection node type=9, target cmd=0x57c597126160, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x57c597126230 to cmd 0x57c597126160 and target 0x57c5971263c0 Starting collection after redirection Setting redirection root to node 0x57c597126230 Redirection node type=9, target cmd=0x57c597126160, cmd type=2 echo ./outfiles/outfile02 Linking redir 0x57c597126470 to cmd 0x57c597126160 and target 0x57c597126520 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo 'echo' 'hi' 'echo' 'hi' Checking command echo 'echo' 'bye' 'echo' 'bye' 0x57c597126230 Root node type=11 Executing command tree Executing node type=11 at 0x57c597126630 Starting pipe execution Forking left child Forking right child 43413) Executing node type=9 at 0x57c597126230 Executing redirection node type=9 0x57c597126160 (type 2) echo with 1 args Processing redirection chain starting with node type=9 Looking for redirections after 0x57c597126470 targeting 0x57c597126160 No more redirections found for cmd 0x57c597126160 Redirection chain processing complete Executing command after redirection setup Executing node type=2 at 0x57c597126160 [echo] [hi] echo 0 0 0 0 Executing node type=9 at 0x57c597126470 Executing redirection node type=9 0x57c597126160 (type 2) echo with 1 args Processing redirection chain starting with node type=9 Looking for redirections after 0x57c597126470 targeting 0x57c597126160 No more redirections found for cmd 0x57c597126160 Redirection chain processing complete Executing command after redirection setup Executing node type=2 at 0x57c597126160 [echo] [hi] echo 0 0 0 0 Left command exited with code 0 43414) Right command exited with code 0 0)
bash error = ()

Test 127: ❌ echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
cat: './bash_outfiles/*': No such file or directory
mini output = ()
bash output = (bye)
mini error = ( 'echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye' Processing position 0, char 'e' Position advanced to 1 Processing position 1, char 'c' Position advanced to 2 Processing position 2, char 'h' Position advanced to 3 Processing position 3, char 'o' Position advanced to 4 Processing position 4, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=2 content='echo' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 5, char 'h' Position advanced to 6 Processing position 6, char 'i' Position advanced to 7 Processing position 7, char ' ' Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' Position check triggered continue Processing position 8, char '>' Creating token type=9 content='>>' Linking token type=9 to list (current=2) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' Position check triggered continue Processing position 10, char '.' Position advanced to 11 Processing position 11, char '/' Position advanced to 12 Processing position 12, char 't' Position advanced to 13 Processing position 13, char 'e' Position advanced to 14 Processing position 14, char 's' Position advanced to 15 Processing position 15, char 't' Position advanced to 16 Processing position 16, char '_' Position advanced to 17 Processing position 17, char 'f' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'l' Position advanced to 20 Processing position 20, char 'e' Position advanced to 21 Processing position 21, char 's' Position advanced to 22 Processing position 22, char '/' Position advanced to 23 Processing position 23, char 'i' Position advanced to 24 Processing position 24, char 'n' Position advanced to 25 Processing position 25, char 'v' Position advanced to 26 Processing position 26, char 'a' Position advanced to 27 Processing position 27, char 'l' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'd' Position advanced to 30 Processing position 30, char '_' Position advanced to 31 Processing position 31, char 'p' Position advanced to 32 Processing position 32, char 'e' Position advanced to 33 Processing position 33, char 'r' Position advanced to 34 Processing position 34, char 'm' Position advanced to 35 Processing position 35, char 'i' Position advanced to 36 Processing position 36, char 's' Position advanced to 37 Processing position 37, char 's' Position advanced to 38 Processing position 38, char 'i' Position advanced to 39 Processing position 39, char 'o' Position advanced to 40 Processing position 40, char 'n' Position advanced to 41 Processing position 41, char ' ' Creating token from './test_files/invalid_permission' Token type set to 3 Creating token type=3 content='./test_files/invalid_permission' Linking token type=3 to list (current=9) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' Position check triggered continue Processing position 42, char '>' Creating token type=8 content='>' Linking token type=8 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' Position check triggered continue Processing position 43, char '.' Position advanced to 44 Processing position 44, char '/' Position advanced to 45 Processing position 45, char 'o' Position advanced to 46 Processing position 46, char 'u' Position advanced to 47 Processing position 47, char 't' Position advanced to 48 Processing position 48, char 'f' Position advanced to 49 Processing position 49, char 'i' Position advanced to 50 Processing position 50, char 'l' Position advanced to 51 Processing position 51, char 'e' Position advanced to 52 Processing position 52, char 's' Position advanced to 53 Processing position 53, char '/' Position advanced to 54 Processing position 54, char 'o' Position advanced to 55 Processing position 55, char 'u' Position advanced to 56 Processing position 56, char 't' Position advanced to 57 Processing position 57, char 'f' Position advanced to 58 Processing position 58, char 'i' Position advanced to 59 Processing position 59, char 'l' Position advanced to 60 Processing position 60, char 'e' Position advanced to 61 Processing position 61, char '0' Position advanced to 62 Processing position 62, char '1' Position advanced to 63 Processing position 63, char ' ' Creating token from './outfiles/outfile01' Token type set to 3 Creating token type=3 content='./outfiles/outfile01' Linking token type=3 to list (current=8) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' Position check triggered continue Processing position 64, char '|' Creating token type=11 content='|' Linking token type=11 to list (current=3) Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' Position check triggered continue Processing position 65, char ' ' Position check triggered continue Processing position 66, char 'e' Position advanced to 67 Processing position 67, char 'c' Position advanced to 68 Processing position 68, char 'h' Position advanced to 69 Processing position 69, char 'o' Position advanced to 70 Processing position 70, char ' ' Creating token from 'echo' Token type set to 2 Creating token type=3 content='echo' Linking token type=3 to list (current=11) Converting ARGS to CMD after PIPE Linking as separate node 0 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Position check triggered continue Processing position 71, char 'b' Position advanced to 72 Processing position 72, char 'y' Position advanced to 73 Processing position 73, char 'e' Position advanced to 74 Tokenization complete, finishing Creating token from 'bye' Token type set to 3 Creating token type=3 content='bye' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'bye' with command 'echo' No next node, setting current to cmd 1 Traversing final token list type=2 content='echo' type=9 content='>>' type=3 content='./test_files/invalid_permission' type=8 content='>' type=3 content='./outfiles/outfile01' type=11 content='|' type=2 content='echo' Building AST from token list type=2 content=[echo, hi] type=9 content=[>>] type=3 content=[./test_files/invalid_permission] type=8 content=[>] type=3 content=[./outfiles/outfile01] type=11 content=[|] type=2 content=[echo, bye] Building AST from token list Found 2 command nodes 0x59546ad300b0 Redirection node type=9, target cmd=0x59546ad2fc40, cmd type=2 echo ./test_files/invalid_permission Linking redir 0x59546ad2fd30 to cmd 0x59546ad2fc40 and target 0x59546ad2fec0 Starting collection after redirection Setting redirection root to node 0x59546ad2fd30 Redirection node type=8, target cmd=0x59546ad2fc40, cmd type=2 echo ./outfiles/outfile01 Linking redir 0x59546ad2ff10 to cmd 0x59546ad2fc40 and target 0x59546ad2ffa0 Starting collection after redirection Verifying all commands have proper arguments Checking for missed arguments Checking command echo 'echo' 'hi' 'echo' 'hi' Checking command echo 'echo' 'bye' 'echo' 'bye' 0x59546ad2fd30 Root node type=11 Executing command tree Executing node type=11 at 0x59546ad300b0 Starting pipe execution Forking left child Forking right child Executing node type=9 at 0x59546ad2fd30 Executing redirection node type=9 0x59546ad2fc40 (type 2) echo with 1 args Processing redirection chain starting with node type=9 43645) Permission denied Redirection failed but continuing process Redirection chain processing failed 1 Executing node type=8 at 0x59546ad2ff10 Executing redirection node type=8 0x59546ad2fc40 (type 2) echo with 1 args Processing redirection chain starting with node type=8 Looking for redirections after 0x59546ad2ff10 targeting 0x59546ad2fc40 No more redirections found for cmd 0x59546ad2fc40 Redirection chain processing complete Executing command after redirection setup Executing node type=2 at 0x59546ad2fc40 [echo] [hi] echo 0 0 0 0 Left command exited with code 1 43646) Right command exited with code 0 0)
bash error = ( Permission denied)

Test 133: ❌ $PWD 
mini exit code = 2
bash exit code = 126
mini error = ( '$PWD' Processing position 0, char '$' 'PWD' 'PWD' '/home/bleow/Coding/Core/minishell/minishell_tester' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 4, current_start 0 Set vars->start to 4 (current vars->pos) Loop ended. Current char '0' at pos 4. Text to process is from index 4 to 4. Calling handle_right_adj (from tokenize_utils.c) Processing text from 4 to 4 No text to process (pos 4 <= start 4) Exiting process_right_adj, new start for next token is 4 Position check triggered continue Tokenization complete, finishing Building AST from token list type=2 content=[/home/bleow/Coding/Core/minishell/minishell_tester] Building AST from token list Found 1 command nodes (nil) Verifying all commands have proper arguments Checking for missed arguments Checking command /home/bleow/Coding/Core/minishell/minishell_tester '/home/bleow/Coding/Core/minishell/minishell_tester' '/home/bleow/Coding/Core/minishell/minishell_tester' (nil) Root node type=2 Executing command tree Executing node type=2 at 0x61e6403ef390 [/home/bleow/Coding/Core/minishell/minishell_tester] /home/bleow/Coding/Core/minishell/minishell_tester Is a directory 2 2)
bash error = ( Is a directory)
Test 134: ❌ $EMPTY 
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY' Processing position 0, char '$' 'EMPTY' 'EMPTY' '' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 6, current_start 0 Set vars->start to 6 (current vars->pos) Loop ended. Current char '0' at pos 6. Text to process is from index 6 to 6. Calling handle_right_adj (from tokenize_utils.c) Processing text from 6 to 6 No text to process (pos 6 <= start 6) Exiting process_right_adj, new start for next token is 6 Position check triggered continue Tokenization complete, finishing Building AST from token list type=2 content=[] Building AST from token list Found 1 command nodes (nil) Verifying all commands have proper arguments Checking for missed arguments Checking command '' '' (nil) Root node type=2 Executing command tree Executing node type=2 at 0x62395ea1dfa0 [] Permission denied 127 127)
bash error = ()
Test 135: ❌ $EMPTY echo hi 
mini output = ()
bash output = (hi)
mini exit code = 127
bash exit code = 0
mini error = ( '$EMPTY echo hi' Processing position 0, char '$' 'EMPTY' 'EMPTY' '' Linking token type=2 to list (current=0) Setting as head node Entering process_right_adj (make_exp_token_utils.c), input_pos 6, current_start 0 Set vars->start to 6 (current vars->pos) Loop ended. Current char ' ' at pos 6. Text to process is from index 6 to 6. Calling handle_right_adj (from tokenize_utils.c) Processing text from 6 to 6 No text to process (pos 6 <= start 6) Exiting process_right_adj, new start for next token is 6 Position check triggered continue Processing position 6, char ' ' Position check triggered continue Processing position 7, char 'e' Position advanced to 8 Processing position 8, char 'c' Position advanced to 9 Processing position 9, char 'h' Position advanced to 10 Processing position 10, char 'o' Position advanced to 11 Processing position 11, char ' ' Creating token from 'echo' Token type set to 3 Creating token type=3 content='echo' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'echo' with command '' No next node, setting current to cmd 1 Traversing final token list type=2 content='' Position check triggered continue Processing position 12, char 'h' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Tokenization complete, finishing Creating token from 'hi' Token type set to 3 Creating token type=3 content='hi' Linking token type=3 to list (current=2) Merging ARGS with CMD Merging arg 'hi' with command '' No next node, setting current to cmd 1 Traversing final token list type=2 content='' Building AST from token list type=2 content=[, echo, hi] Building AST from token list Found 1 command nodes (nil) Verifying all commands have proper arguments Checking for missed arguments Checking command '' 'echo' 'hi' '' 'echo' 'hi' (nil) Root node type=2 Executing command tree Executing node type=2 at 0x617ad6e359b0 [] [echo] [hi] Permission denied 127 127)
bash error = ()
Test 136: ❌ ./test_files/invalid_permission 
mini exit code = 127
bash exit code = 126
mini error = ( './test_files/invalid_permission' Processing position 0, char '.' Position advanced to 1 Processing position 1, char '/' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char 'e' Position advanced to 4 Processing position 4, char 's' Position advanced to 5 Processing position 5, char 't' Position advanced to 6 Processing position 6, char '_' Position advanced to 7 Processing position 7, char 'f' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 'l' Position advanced to 10 Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 's' Position advanced to 12 Processing position 12, char '/' Position advanced to 13 Processing position 13, char 'i' Position advanced to 14 Processing position 14, char 'n' Position advanced to 15 Processing position 15, char 'v' Position advanced to 16 Processing position 16, char 'a' Position advanced to 17 Processing position 17, char 'l' Position advanced to 18 Processing position 18, char 'i' Position advanced to 19 Processing position 19, char 'd' Position advanced to 20 Processing position 20, char '_' Position advanced to 21 Processing position 21, char 'p' Position advanced to 22 Processing position 22, char 'e' Position advanced to 23 Processing position 23, char 'r' Position advanced to 24 Processing position 24, char 'm' Position advanced to 25 Processing position 25, char 'i' Position advanced to 26 Processing position 26, char 's' Position advanced to 27 Processing position 27, char 's' Position advanced to 28 Processing position 28, char 'i' Position advanced to 29 Processing position 29, char 'o' Position advanced to 30 Processing position 30, char 'n' Position advanced to 31 Tokenization complete, finishing Creating token from './test_files/invalid_permission' Token type set to 2 Creating token type=2 content='./test_files/invalid_permission' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='./test_files/invalid_permission' Building AST from token list type=2 content=[./test_files/invalid_permission] Building AST from token list Found 1 command nodes (nil) Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files/invalid_permission './test_files/invalid_permission' './test_files/invalid_permission' (nil) Root node type=2 Executing command tree Executing node type=2 at 0x649b370205d0 [./test_files/invalid_permission] ./test_files/invalid_permission Permission denied 127 127)
bash error = ( Permission denied)

Test 141: ❌ ./test_files 
mini exit code = 2
bash exit code = 126
mini error = ( './test_files' Processing position 0, char '.' Position advanced to 1 Processing position 1, char '/' Position advanced to 2 Processing position 2, char 't' Position advanced to 3 Processing position 3, char 'e' Position advanced to 4 Processing position 4, char 's' Position advanced to 5 Processing position 5, char 't' Position advanced to 6 Processing position 6, char '_' Position advanced to 7 Processing position 7, char 'f' Position advanced to 8 Processing position 8, char 'i' Position advanced to 9 Processing position 9, char 'l' Position advanced to 10 Processing position 10, char 'e' Position advanced to 11 Processing position 11, char 's' Position advanced to 12 Tokenization complete, finishing Creating token from './test_files' Token type set to 2 Creating token type=2 content='./test_files' Linking token type=2 to list (current=0) Setting as head node 0 Traversing final token list type=2 content='./test_files' Building AST from token list type=2 content=[./test_files] Building AST from token list Found 1 command nodes (nil) Verifying all commands have proper arguments Checking for missed arguments Checking command ./test_files './test_files' './test_files' (nil) Root node type=2 Executing command tree Executing node type=2 at 0x5cf1fcc57ec0 [./test_files] ./test_files Is a directory 2 2)
bash error = ( Is a directory)

133/146

