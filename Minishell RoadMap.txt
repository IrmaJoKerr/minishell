MAIN EXECUTION FLOW
│
├── SHELL INITIALIZATION
│   ├── main() [minishell.c]
│   │   ├── ft_memset() - Initialize vars structure
│   │   ├── init_shell() [initshell.c]
│   │   │   ├── dup_env() [paths.c]
│   │   │   ├── get_shell_level() [shell_level.c] 
│   │   │   ├── incr_shell_level() [shell_level.c]
│   │   │   ├── init_vars() [initshell.c]
│   │   │   ├── init_pipes() [initshell.c]
│   │   │   ├── setup_terminal_mode() [terminal.c]
│   │   │   └── load_signals() [signals.c]
│   │   └── load_history() [history_load.c]
│   │       ├── get_history_count() [history.c]
│   │       ├── init_history_fd() [history.c]
│   │       ├── skip_lines() [history.c]
│   │       └── read_history_lines() [history_load.c]
│   │
│   └── reset_shell() [initshell.c] - After each command
│       ├── cleanup_token_list() [cleanup_a.c]
│       │   └── free_token_node() [cleanup_b.c]
│       ├── reset_redirect_fds() [redirect.c]
│       ├── reset_pipe_vars() [initshell.c]
│       └── init_vars() [initshell.c]
│
├── INPUT PROCESSING
│   ├── reader() [minishell.c] - Read line with prompt
│   │   ├── readline() - From readline library
│   │   └── add_history() - From readline library
│   │
│   ├── handle_input() [input_handlers.c]
│   │   ├── process_multiline_input() [process_multiline_input.c] - For input with newlines/multiline input
│   │   │   ├── proc_first_line() [multiline_validation.c]
│   │   │   ├── process_heredoc_path() [process_multiline_input.c]
│   │   │   │   ├── chk_hd_first_line() [heredoc_delim.c]
│   │   │   │   ├── open_hd_tmp_buf() [multiline_input_buffer.c]
│   │   │   │   ├── proc_hd_buffer() [multiline_input_buffer.c]
│   │   │   │   ├── handle_interactive_hd() [multiline_input_buffer.c]
│   │   │   │   └── hd_proc_end() [process_multiline_input.c]
│   │   │   └── process_standard() [multiline_input_buffer.c]
│   │   │       └── tmp_buf_reader() [tmp_buf_reader.c]
│   │   │
│   │   └── process_command() [minishell.c] - For single-line input
│   │       ├── handle_quote_completion() [input_completion.c]
│   │       │   ├── validate_quotes() [quotes.c]
│   │       │   ├── fix_open_quotes() [input_completion.c]
│   │       │   │   └── quote_prompt() [quotes.c]
│   │       │   └── tokenizer() [lexer.c]
│   │       │
│   │       ├── process_input_tokens() [tokenize.c]
│   │       │   └── tokenizer() [lexer.c]
│   │       │
│   │       ├── handle_pipe_syntax() [minishell.c]
│   │       │   ├── analyze_pipe_syntax() [pipe_analysis.c]
│   │       │   │   ├── check_pipe_at_start() [pipe_analysis.c]
│   │       │   │   ├── check_consecutive_pipes() [pipe_analysis.c]
│   │       │   │   └── check_pipe_completion_needed() [pipe_analysis.c]
│   │       │   └── finalize_pipes() [pipe_analysis.c]
│   │       │       ├── complete_pipe_cmd() [input_completion.c]
│   │       │       │   └── handle_unfinished_pipes() [input_completion.c]
│   │       │       └── process_input_tokens() [tokenize.c]
│   │       │
│   │       ├── validate_redir_targets() [process_quote_char.c]
│   │       │   └── tok_syntax_error_msg() [errormsg.c]
│   │       │
│   │       ├── ast_builder() [buildast.c]
│   │       │   ├── pre_ast_redir_proc() [buildast.c]
│   │       │   │   ├── proc_solo_redirs() [buildast.c]
│   │       │   │   │   └── exec_solo_redir() [buildast.c]
│   │       │   │   ├── make_cmd_redir_chain() [process_redir_node.c]
│   │       │   │   │   └── store_single_redir_node() [process_redir_node.c]
│   │       │   │   └── find_last_redir() [proc_quoted_redir_tgt.c]
│   │       │   │
│   │       │   ├── proc_ast_pipes() [buildast.c]
│   │       │   │   ├── process_first_pipe() [process_pipes.c]
│   │       │   │   │   └── setup_pipe_node() [process_pipes.c]
│   │       │   │   └── process_addon_pipes() [process_pipes.c]
│   │       │   │
│   │       │   ├── proc_ast_redir() [buildast.c]
│   │       │   │   └── proc_pipe_chain() [process_redirect.c]
│   │       │   │       └── link_redir_to_cmd_node() [process_redirect.c]
│   │       │   │
│   │       │   └── chk_args_match_cmd() [buildast.c]
│   │       │       ├── is_heredoc_target() [buildast.c]
│   │       │       └── is_redir_target() [buildast.c]
│   │       │
│   │       └── execute_cmd() [execute.c] (See COMMAND EXECUTION section)
│
├── TOKENIZATION
│   ├── tokenizer() [lexer.c] - Master tokenization function
│   │   ├── init_tokenizer() [tokenize.c]
│   │   ├── handle_token() [lexer.c]
│   │   │   ├── get_token_at() [lexer.c]
│   │   │   │   ├── is_double_token() [operators_utils.c]
│   │   │   │   └── is_single_token() [operators_utils.c]
// Represents a visual or structural indentation, possibly used to illustrate a tree, hierarchy, or nested structure.
│   │   │   │
│   │   │   ├── handle_quotes() [parser.c]
│   │   │   │   └── tokenize_quote() [tokenize.c]
│   │   │   │       ├── handle_text() [operators.c]
│   │   │   │       │   ├── get_token_at() [lexer.c]
│   │   │   │       │   ├── set_token_type() [parser.c]
│   │   │   │       │   └── maketoken() [maketoken.c]
│   │   │   │       └── process_quote_char() [process_quote_char.c]
│   │   │   │
│   │   │   ├── tokenize_expan() [tokenize.c]
│   │   │   │   ├── handle_text() [operators.c]
│   │   │   │   └── make_exp_token() [make_exp_token.c]
│   │   │   │       ├── check_token_adj() [append_args_utils.c]
│   │   │   │       ├── get_var_token() [make_exp_token.c]
│   │   │   │       │   └── get_expn_name() [make_exp_token.c]
│   │   │   │       ├── expand_variable() [expansion.c]
│   │   │   │       └── sub_make_exp_token() [make_exp_token.c]
│   │   │   │           ├── handle_tok_join() [make_exp_token_utils.c]
│   │   │   │           ├── new_exp_token() [make_exp_token_utils.c]
│   │   │   │           ├── process_right_adj() [make_exp_token_utils.c]
│   │   │   │           └── process_adj() [append_args_utils.c]
│   │   │   │
│   │   │   ├── proc_opr_token() [parser.c]
│   │   │   │   ├── handle_text() [operators.c]
│   │   │   │   ├── maketoken() [maketoken.c]
│   │   │   │   └── process_operator_char() [lexer.c]
│   │   │   │       ├── get_token_at() [lexer.c]
│   │   │   │       ├── handle_redirection_token() [redirect.c]
│   │   │   │       └── handle_pipe_operator() [operators.c]
│   │   │   │
│   │   │   └── tokenize_white() [tokenize.c]
│   │   │       ├── handle_text() [operators.c]
│   │   │       └── maketoken() [maketoken.c]
│   │   │
│   │   ├── chk_move_pos() [tokenize_utils.c]
│   │   ├── add_null_token_stop() [lexer.c]
│   │   └── finish_tokenizing() [parser.c]
│   │
│   ├── process_quote_char() [process_quote_char.c] - Master quote processor
│   │   ├── extract_quoted_strs() [process_quote_char.c]
│   │   │   ├── check_token_adj() [append_args_utils.c]
│   │   │   └── get_quoted_str() [lexer.c]
│   │   │
│   │   ├── handle_empty_quote() [process_quote_char.c]
│   │   ├── try_left_merge() [process_quote_char.c]
│   │   │   └── find_last_redir() [proc_quoted_redir_tgt.c]
│   │   │
│   │   ├── proc_quoted_redir_tgt() [proc_quoted_redir_tgt.c]
│   │   │   ├── find_last_redir() [proc_quoted_redir_tgt.c]
│   │   │   ├── try_merge_adj_target() [proc_quoted_redir_tgt.c]
│   │   │   ├── try_append_to_prev_cmd() [proc_quoted_redir_tgt.c]
│   │   │   │   ├── find_cmd() [cmd_finder.c]
│   │   │   │   └── append_arg() [append_args.c]
│   │   │   └── link_new_file_node_to_redir() [proc_quoted_redir_tgt.c]
│   │   │       ├── initnode() [initnode.c]
│   │   │       └── link_file_to_redir() [process_quote_char.c]
│   │   │
│   │   └── handle_quo_str() [process_quote_char.c]
│   │       ├── process_quoted_str() [process_quote_char.c]
│   │       │   ├── expand_quoted_str() [quoted_expansion.c]
│   │       │   │   ├── expand_quoted_var() [quoted_expansion.c]
│   │       │   │   ├── append_basic_strs() [quoted_expansion.c]
│   │       │   │   └── append_substr() [quoted_expansion.c]
│   │       │   └── find_cmd() [cmd_finder.c]
│   │       │
│   │       ├── make_quoted_cmd() [make_quo_token.c]
│   │       │   ├── initnode() [initnode.c]
│   │       │   ├── build_token_linklist() [maketoken.c]
│   │       │   └── cleanup_and_process_adj() [process_quote_char_utils.c]
│   │       │
│   │       └── merge_quoted_token() [make_quo_token.c]
│   │           ├── handle_tok_join() [make_exp_token_utils.c]
│   │           ├── process_right_adj() [make_exp_token_utils.c]
│   │           └── process_adj() [append_args_utils.c]
│
└── NODE MANAGEMENT
    ├── maketoken() [maketoken.c] - Creates token nodes
    │   ├── initnode() [initnode.c]
    │   │   ├── make_nodeframe() [initnode.c]
    │   │   ├── make_node_arrays() [make_node_arrays.c]
    │   │   │   ├── setup_args() [make_node_arrays.c]
    │   │   │   └── setup_quotes() [make_node_arrays.c]
    │   │   └── set_quote_type() [initnode.c]
    │   │
    │   ├── build_token_linklist() [maketoken.c]
    │   │   └── merge_arg_with_cmd() [maketoken.c]
    │   │       └── append_arg() [append_args.c]
    │   │
    │   └── free_if_orphan_node() [maketoken.c]
    │
    └── append_arg() [append_args.c] - Append arguments to nodes
        ├── dup_node_args() [append_args.c]
        ├── resize_quotype_arr() [append_args.c]
        │   ├── dup_quote_types() [append_args.c]
        │   └── set_char_quote_types() [append_args.c]
        └── ft_free_2d() & ft_free_int_2d() - Memory management